[
{"query": "How to initialize thread", "url": "https://stackoverflow.com/questions/32325627/initialization-of-threads-in-java", "url position": 1, "segments": [{"code": "public class Main {\n    public String getName() {\n        return \"Main\";\n    }\n\n    public String getId() {\n        return \"My-id\";\n    }\n\n    public String getState() {\n        return \"Good\";\n    }\n\n    public void printMe() {\n        new Thread() {\n            @Override\n            public void run() {\n                System.out.println(\"name: \" + getName() + \", id:\" + getId() + \", state:\" + getState());\n            }\n        }.start();\n    }\n\n    public static void main(String[] args) {\n        new Main().printMe();\n    }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": "2", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "name: Thread-0, id:11, state:RUNNABLE\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": "2", "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private Runnable target;\n   ...\n@Override\npublic void run() {\n    if (target != null) {\n        target.run();\n    }\n}\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "    Thread thread = new Thread();\n    thread.start();\n    // This doesn't specify any code for the thread to execute. \n    // It will stop again right away.\n\n    Thread threadname = new Thread(\"myThread\");\n    threadname.start();\n    // This Allocates a new Thread object.\n    // myThread the name of the new thread \n\n\n    //There are two ways to create a Thread\n\n    //1) WAY\n    //runnable1 and runnable2 are just two different objects of the class \n    //that implements the Runnable interfaces which have that run() method.\n    //When you call runnable1.run() you are executing it in the current thread.\n    ClassOne runnable1 = new ClassOne();\n    ClassTwo runnable2 = new ClassTwo();\n\n    //thread1 and thread2 are the objects of the class Thread. \n    //When you call thread1.start(), it starts a new thread and calls the run()\n    //method of runnable1 internally to execute it within that new thread.\n    Thread thread1 = new Thread(runnable1);\n    Thread thread2 = new Thread(runnable2);\n    thread1.start();\n    thread2.start();\n\n    //2) WAY \n    //Create a subclass of Thread and override the run() method. \n    //The run() method is what is executed by the thread after you call start(). \n    class MyThread extends Thread \n    {\n       public void run()\n       {\n           System.out.println(\"MyThread running\");\n       }\n    }\n\n    MyThread myThread = new MyThread();\n    myThread.start();\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public class ThreadMain {\n\n    public static void main(String[] args) {\n        //Main thread\n        System.out.println(Thread.currentThread().getName());\n\n        //Task 1 thread\n        //Using runnable\n        Thread task1 = new Thread(new Task1());\n        task1.start();\n\n        //Task 2 thread\n        //By extending Thread class\n        Thread task2 = new Task2();\n        task2.start();\n\n        //Other way is using inner class\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(Thread.currentThread().getName());\n            }\n        });\n        thread.start();\n    }\n}\n\nclass Task1 implements Runnable {\n\n    @Override\n    public void run() {\n        System.out.println(Thread.currentThread().getName());\n    }\n}\n\nclass Task2 extends Thread {\n\n    @Override\n    public void run() {\n        System.out.println(Thread.currentThread().getName());\n    }\n}\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://stackoverflow.com/questions/19241296/different-ways-of-initializing-threads", "url position": 2, "segments": []},
{"query": "How to initialize thread", "url": "https://stackoverflow.com/questions/16095965/initializing-a-thread-in-a-static-block", "url position": 3, "segments": [{"code": "public class DataLoader {\n    private Stuff data;\n    private final CountDownLatch latch = new CountDownLatch(1);\n    // start the thread, called early in main()\n    public void init() {\n        // you pass in this so it can call setData\n        DataRetrievalThread t = new DataRetrievalThread(this);\n        t.start();\n    }\n    // called from the DataRetrievalThread\n    public void setData(Stuff data) {\n        this.data = data;\n        latch.countDown();\n    }\n    public Stuff getData() {\n        if (data == null) {\n            latch.await();\n        }\n        return data;\n    }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": true, "answer_votes": "4", "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://stackoverflow.com/questions/8297705/how-to-implement-thread-safe-lazy-initialization", "url position": 4, "segments": [{"code": "public class Something {\n    private Something() {\n    }\n\n    private static class LazyHolder {\n            public static final Something INSTANCE = new Something();\n    }\n\n    public static Something getInstance() {\n            return LazyHolder.INSTANCE;\n    }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": true, "answer_votes": "44", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "lazyInitializer = new LazyInitializer<Foo>() {\n\n        @Override\n        protected Foo initialize() throws ConcurrentException {\n            return new Foo();\n        }\n    };\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": "31", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "Foo instance = lazyInitializer.get();\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": "31", "answer_stars": 0, "length": false, "semicolon": true}, {"code": "Supplier<Foo> fooSupplier = Suppliers.memoize(new Supplier<Foo>() {\n    public Foo get() {\n        return new Foo();\n    }\n});\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": "31", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// in class declaration\nprivate AtomicReference<Foo> instance = new AtomicReference<>(null);  \n\npublic Foo getInstance() {\n   Foo foo = instance.get();\n   if (foo == null) {\n       foo = new Foo();                       // create and initialize actual instance\n       if (instance.compareAndSet(null, foo)) // CAS succeeded\n           return foo;\n       else                                   // CAS failed: other thread set an object \n           return instance.get();             \n   } else {\n       return foo;\n   }\n}\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": "19", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public class Singleton {\n\n    private Singleton() {\n    }\n\n    public static Singleton getInstance() {\n        return Holder.INSTANCE;\n    }\n\n    private static class Holder {\n        private static final Singleton INSTANCE = new Singleton();\n    }\n}\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": "9", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Foo {\n  private volatile Helper helper = null;\n  public Helper getHelper() {\n    if (helper == null) {\n      synchronized(this) {\n        if (helper == null) {\n          helper = new Helper();\n        }\n      }\n    }\n  return helper;\n}\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": "2", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "import java.util.Objects;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.atomic.AtomicBoolean;\nimport java.util.concurrent.atomic.AtomicReference;\nimport java.util.function.Function;\n\n/**\n * When execute is called, it is guaranteed that the input function will be applied exactly once. \n * Further it's also guaranteed that execute will return only when the input function was applied\n * by the calling thread or some other thread OR if the calling thread is interrupted.\n */\n\npublic class OneTimeExecutor<T, R> {  \n  private final Function<T, R> function;\n  private final AtomicBoolean preGuard;\n  private final CountDownLatch postGuard;\n  private final AtomicReference<R> value;\n\n  public OneTimeExecutor(Function<T, R> function) {\n    Objects.requireNonNull(function, \"function cannot be null\");\n    this.function = function;\n    this.preGuard = new AtomicBoolean(false);\n    this.postGuard = new CountDownLatch(1);\n    this.value = new AtomicReference<R>();\n  }\n\n  public R execute(T input) throws InterruptedException {\n    if (preGuard.compareAndSet(false, true)) {\n      try {\n        value.set(function.apply(input));\n      } finally {\n        postGuard.countDown();\n      }\n    } else if (postGuard.getCount() != 0) {\n      postGuard.await();\n    }\n    return value();\n  }\n\n  public boolean executed() {\n    return (preGuard.get() && postGuard.getCount() == 0);\n  }\n\n  public R value() {\n    return value.get();\n  }\n\n}  \n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": "1", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "import java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.nio.charset.StandardCharsets;\n\n/*\n * For the sake of this example, assume that creating a PrintWriter is a costly operation and we'd want to lazily initialize it.\n * Further assume that the cleanup/close implementation is non-idempotent. In other words, just like initialization, the \n * de-initialization should also happen once and only once.\n */\npublic class NonSingletonSampleB {\n  private final OneTimeExecutor<File, PrintWriter> initializer = new OneTimeExecutor<>(\n    (File configFile) -> {\n      try { \n        FileOutputStream fos = new FileOutputStream(configFile);\n        OutputStreamWriter osw = new OutputStreamWriter(fos, StandardCharsets.UTF_8);\n        BufferedWriter bw = new BufferedWriter(osw);\n        PrintWriter pw = new PrintWriter(bw);\n        return pw;\n      } catch (IOException e) {\n        e.printStackTrace();\n        throw new RuntimeException(e);\n      }\n    }\n  );  \n\n  private final OneTimeExecutor<Void, Void> deinitializer = new OneTimeExecutor<>(\n    (Void v) -> {\n      if (initializer.executed() && null != initializer.value()) {\n        initializer.value().close();\n      }\n      return null;\n    }\n  );  \n\n  private final File file;\n\n  public NonSingletonSampleB(File file) {\n    this.file = file;\n  }\n\n  public void doSomething() throws Exception {\n    // Create one-and-only-one instance of PrintWriter only when someone calls doSomething().  \n    PrintWriter pw = initializer.execute(file);\n\n    // Application logic goes here, say write something to the file using the PrintWriter.\n  }\n\n  public void close() throws Exception {\n    // non-idempotent close, the de-initialization lambda is invoked only once. \n    deinitializer.execute(null);\n  }\n\n}\n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": "1", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public synchronized Foo getInstance(){\n   if(INSTANCE == null){\n    INSTANCE = new Foo();\n  }\n\n  return INSTANCE;\n }\n", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "private static final String LOCK = \"LOCK\";\npublic synchronized Foo getInstance(){\n  synchronized(LOCK){\n     if(INSTANCE == null){\n       INSTANCE = new Foo();\n     }\n  }\n  return INSTANCE;\n }\n", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": true, "semicolon": true}, {"code": "DataSource ds = LazyLoadDecorator.create(dsSupplier, DataSource.class)\n", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": false, "semicolon": false}, {"code": "public class LazyLoadDecorator<T> implements InvocationHandler {\n\n    private final Object syncLock = new Object();\n    protected volatile T inner;\n    private Supplier<T> supplier;\n\n    private LazyLoadDecorator(Supplier<T> supplier) {\n        this.supplier = supplier;\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        if (inner == null) {\n            synchronized (syncLock) {\n                if (inner == null) {\n                    inner = load();\n                }\n            }\n        }\n        return method.invoke(inner, args);\n    }\n\n    protected T load() {\n        return supplier.get();\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public static <T> T create(Supplier<T> factory, Class<T> clazz) {\n        return (T) Proxy.newProxyInstance(LazyLoadDecorator.class.getClassLoader(),\n                new Class[] {clazz},\n                new LazyLoadDecorator<>(factory));\n    }\n}\n", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": "0", "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://help.semmle.com/wiki/display/JAVA/Start+of+thread+in+constructor", "url position": 8, "segments": [{"code": "class Super {\n    public Super() {\n        new Thread() {\n            public void run() {\n                System.out.println(Super.this.toString());\n            }\n        }.start(); // BAD: The thread is started in the constructor of 'Super'.\n    }\n\n    public String toString() {\n        return \"hello\";\n    }\n}\n\nclass Test extends Super {\n    private String name;\n    public Test(String nm) {\n        // The thread is started before\n        // this line is run\n        this.name = nm;\n    }\n\n    public String toString() {\n        return super.toString() + \" \" + name;\n    }\n\n    public static void main(String[] args) {\n        new Test(\"my friend\");\n    }\n}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Super {\n    Thread thread;\n    public Super() {\n        thread = new Thread() {\n            public void run() {\n                System.out.println(Super.this.toString());\n            }\n        };\n    }\n\n    public void start() {  // good\n        thread.start();\n    }\n    \n    public String toString() {\n        return \"hello\";\n    }\n}\n\nclass Test extends Super {\n    private String name;\n    public Test(String nm) {\n        this.name = nm;\n    }\n\n    public String toString() {\n        return super.toString() + \" \" + name;\n    }\n\n    public static void main(String[] args) {\n        Test t = new Test(\"my friend\");\n        t.start();\n    }\n}", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://www.w3resource.com/java-tutorial/java-defining-instantiating-and-starting-threads.php", "url position": 6, "segments": [{"code": "public void run( )\r\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "class MyRunnableThread implements Runnable {\r\npublic void run() {\r\nSystem.out.println(\"Important job running in MyRunnableThread\");\r\n}\r\n}\r\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "classMyThread extends Thread {\r\npublic void run() {\r\nSystem.out.println(\"Important job running in MyThread\");\r\n}\r\n}\t\r\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "MyThread thread = new MyThread();\r\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "MyRunnableThreadmyRunnable = new MyRunnableThread ();\r\nThread thread = new Thread(myRunnable); // Pass your Runnable to the Thread\r\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "t.start();\r\n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "package mythreading;\r\npublic class MyRunnable implements Runnable{\r\n\t@Override\r\n\tpublic void run() {\r\n\t\tfor(int x =1; x < 10; x++) {\r\n\t\t\tSystem.out.println(\"MyRunnable running for Thread Name: \" + Thread.currentThread().getName());\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\n", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "package mythreading;\r\npublic class TestMyRunnable {\r\n\t\tpublic static void main (String [] args) {\r\n\t\tMyRunnable myrunnable = new MyRunnable();\r\n\t\t//Passing myrunnable object to Thread class constructor\r\n\t\tThread t1 = new Thread(myrunnable);\r\n\t\tt1.setName(\"Amit-1 Thread\");\r\n\t\t//Starting Thread t1\r\n\t\tt1.start();\r\n\t\tThread t2 = new Thread(myrunnable);\r\n\t\tt2.setName(\"Amit-2 Thread\");\r\n\t\tt2.start();\r\n\t\t}\r\n\t\t\r\n}\r\n\r\n", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://stackoverflow.com/questions/2469957/is-java-class-initialized-by-the-thread-which-use-it-for-the-first-time", "url position": 5, "segments": [{"code": "public class Arbit {\n    public static void main(String[] args) throws Exception{\n        B b1 = new B(\"1\");\n        B b2 = new B(\"2\");\n        B b3 = new B(\"3\");\n        b1.start();\n        b2.start();\n        b3.start();\n        b1.join();\n        b2.join();\n        b3.join();\n    }\n}\n\nclass B extends Thread{\n    B(String s){\n        setName(s);\n    }\n    @Override\n    public void run() {\n\n        try {\n            Thread.sleep(new Random().nextInt(100));\n        } catch (InterruptedException e) {\n        }\n        System.out.println(A.s);\n    }\n}\n\nclass A{\n    static String s = Thread.currentThread().getName();\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": true, "answer_votes": "4", "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://www.javaworld.com/article/2074217/java-concurrency/java-101--understanding-java-threads--part-1--introducing-threads-and-runnables.html", "url position": 9, "segments": [{"code": "// ThreadDemo.java\nclass ThreadDemo\n{\n   public static void main (String [] args)\n   {\n      MyThread mt = new MyThread ();\n      mt.start ();\n      for (int i = 0; i < 50; i++)\n           System.out.println (\"i = \" + i + \", i * i = \" + i * i);\n   }\n}\nclass MyThread extends Thread\n{\n   public void run ()\n   {\n      for (int count = 1, row = 1; row < 20; row++, count++)\n      {\n           for (int i = 0; i < count; i++)\n                System.out.print ('*');\n           System.out.print ('\\n');\n      }\n   }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// NameThatThread.java\nclass NameThatThread\n{\n   public static void main (String [] args)\n   {\n      MyThread mt;\n      if (args.length == 0)\n          mt = new MyThread ();\n      else\n          mt = new MyThread (args [0]);\n      mt.start ();\n   }\n}\nclass MyThread extends Thread\n{\n   MyThread ()\n   {\n      // The compiler creates the byte code equivalent of super ();\n   }\n   MyThread (String name)\n   {\n      super (name); // Pass name to Thread superclass\n   }\n   public void run ()\n   {\n      System.out.println (\"My name is: \" + getName ());\n   }\n}\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "My name is: Thread-1\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "// CalcPI1.java\nclass CalcPI1\n{\n   public static void main (String [] args)\n   {\n      MyThread mt = new MyThread ();\n      mt.start ();\n      try\n      {\n          Thread.sleep (10); // Sleep for 10 milliseconds\n      }\n      catch (InterruptedException e)\n      {\n      }\n      System.out.println (\"pi = \" + mt.pi);\n   }\n}\nclass MyThread extends Thread\n{\n   boolean negative = true;\n   double pi; // Initializes to 0.0, by default\n   public void run ()\n   {\n      for (int i = 3; i < 100000; i += 2)\n      {\n           if (negative)\n               pi -= (1.0 / i);\n           else\n               pi += (1.0 / i);\n           negative = !negative;\n      }\n      pi += 1.0;\n      pi *= 4.0;\n      System.out.println (\"Finished calculating PI\");\n   }\n}\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "pi = -0.2146197014017295\nFinished calculating PI\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "http://www.wideskills.com/java-tutorial/java-threads-tutorial", "url position": 7, "segments": [{"code": "class RunnableThread implements Runnable {\n\n\tThread runner;\n\tpublic RunnableThread() {\n\t}\n\tpublic RunnableThread(String threadName) {\n\t\trunner = new Thread(this, threadName); // (1) Create a new thread.\n\t\tSystem.out.println(runner.getName());\n\t\trunner.start(); // (2) Start the thread.\n\t}\n\tpublic void run() {\n\t\t//Display info about this particular thread\n\t\tSystem.out.println(Thread.currentThread());\n\t}\n}\n\npublic class RunnableExample {\n\n\tpublic static void main(String[] args) {\n\t\tThread thread1 = new Thread(new RunnableThread(), \"thread1\");\n\t\tThread thread2 = new Thread(new RunnableThread(), \"thread2\");\n\t\tRunnableThread thread3 = new RunnableThread(\"thread3\");\n\t\t//Start the threads\n\t\tthread1.start();\n\t\tthread2.start();\n\t\ttry {\n\t\t\t//delay for one second\n\t\t\tThread.currentThread().sleep(1000);\n\t\t} catch (InterruptedException e) {\n\t\t}\n\t\t//Display info about the main thread\n\t\tSystem.out.println(Thread.currentThread());\n\t}\n}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class XThread extends Thread {\n\n\tXThread() {\n\t}\n\tXThread(String threadName) {\n\t\tsuper(threadName); // Initialize thread.\n\t\tSystem.out.println(this);\n\t\tstart();\n\t}\n\tpublic void run() {\n\t\t//Display info about this particular thread\n\t\tSystem.out.println(Thread.currentThread().getName());\n\t}\n}\n\npublic class ThreadExample {\n\n\tpublic static void main(String[] args) {\n\t\tThread thread1 = new Thread(new XThread(), \"thread1\");\n\t\tThread thread2 = new Thread(new XThread(), \"thread2\");\n\t\t//\t    The below 2 threads are assigned default names\n\t\tThread thread3 = new XThread();\n\t\tThread thread4 = new XThread();\n\t\tThread thread5 = new XThread(\"thread5\");\n\t\t//Start the threads\n\t\tthread1.start();\n\t\tthread2.start();\n\t\tthread3.start();\n\t\tthread4.start();\n\t\ttry {\n\t//The sleep() method is invoked on the main thread to cause a one second delay.\n\t\t\tThread.currentThread().sleep(1000);\n\t\t} catch (InterruptedException e) {\n\t\t}\n\t\t//Display info about the main thread\n\t\tSystem.out.println(Thread.currentThread());\n\t}\n}", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://www.nakov.com/inetjava/lectures/part-1-sockets/InetJava-1.3-Multithreading.html", "url position": 11, "segments": [{"code": "synchronized void myMethod () { ", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "... ", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "} ", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "... ", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "... ", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "% java Consumer", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Got message: Sun Dec 19 03:35:55 CST 1996 ", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Got message: Sun Dec 19 03:35:56 CST 1996 ", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Got message: Sun Dec 19 03:35:57 CST 1996 ", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "... ", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "One got message: Wed Mar 20 20:00:01 CST 1996 ", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Two got message: Wed Mar 20 20:00:02 CST 1996 ", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "One got message: Wed Mar 20 20:00:03 CST 1996 ", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Two got message: Wed Mar 20 20:00:04 CST 1996 ", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "One got message: Wed Mar 20 20:00:05 CST 1996 ", "in_page_order": 15, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Two got message: Wed Mar 20 20:00:06 CST 1996 ", "in_page_order": 16, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "One got message: Wed Mar 20 20:00:07 CST 1996 ", "in_page_order": 17, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Two got message: Wed Mar 20 20:00:08 CST 1996 ", "in_page_order": 18, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "... ", "in_page_order": 19, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "https://wiki.sei.cmu.edu/confluence/display/java/TSM02-J.+Do+not+use+background+threads+during+class+initialization", "url position": 10, "segments": [{"code": "public final class ConnectionFactory {\n  private static Connection dbConnection;\n  // Other fields ...\n\n  static {\n    Thread dbInitializerThread = new Thread(new Runnable() {\n        @Override public void run() {\n          // Initialize the database connection\n          try {\n            dbConnection = DriverManager.getConnection(\"connection string\");\n          } catch (SQLException e) {\n            dbConnection = null;\n          }\n        }\n    });\n\n    // Other initialization, for example, start other threads\n\n    dbInitializerThread.start();\n    try {\n      dbInitializerThread.join();\n    } catch (InterruptedException ie) {\n      throw new AssertionError(ie);\n    }\n  }\n\n  public static Connection getConnection() {\n    if (dbConnection == null) {\n      throw new IllegalStateException(\"Error initializing connection\");\n    }\n    return dbConnection;\n  }\n\n  public static void main(String[] args) {\n    // ...\n    Connection connection = getConnection();\n  }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public final class ConnectionFactory {\n  private static Connection dbConnection;\n  // Other fields ...\n\n  static {\n    // Initialize a database connection\n    try {\n      dbConnection = DriverManager.getConnection(\"connection string\");\n    } catch (SQLException e) {\n      dbConnection = null;\n    }\n    // Other initialization (do not start any threads)\n  }\n\n  // ...\n}\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public final class ConnectionFactory {\n  private static final ThreadLocal<Connection> connectionHolder\n                       = new ThreadLocal<Connection>() {\n   @Override public Connection initialValue() {\n     try {\n       Connection dbConnection =\n           DriverManager.getConnection(\"connection string\");\n       return dbConnection;\n     } catch (SQLException e) {\n       return null;\n     }\n   }\n };\n\n  // Other fields ...\n\n  static {\n    // Other initialization (do not start any threads)\n  }\n\n  public static Connection getConnection() {\n    Connection connection = connectionHolder.get();\n    if (connection == null) {\n      throw new IllegalStateException(\"Error initializing connection\");\n    }\n    return connection;\n  }\n\n  public static void main(String[] args) {\n    // ...\n    Connection connection = getConnection();\n  }\n}\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public final class ObjectPreserver implements Runnable {\n  private static final ObjectPreserver lifeLine = new ObjectPreserver();\n\n  private ObjectPreserver() {\n    Thread thread = new Thread(this);\n    thread.setDaemon(true);\n    thread.start(); // Keep this object alive\n  }\n\n  // Neither this class nor HashMap will be garbage-collected.\n  // References from HashMap to other objects\n  // will also exhibit this property\n  private static final ConcurrentHashMap<Integer,Object> protectedMap\n      = new ConcurrentHashMap<Integer,Object>();\n\n  public synchronized void run() {\n    try {\n      wait();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt(); // Reset interrupted status\n    }\n  }\n\n  // Objects passed to this method will be preserved until\n  // the unpreserveObject() method is called\n  public static void preserveObject(Object obj) {\n    protectedMap.put(0, obj);\n  }\n\n  // Returns the same instance every time\n  public static Object getObject() {\n    return protectedMap.get(0);\n  }\n\n  // Unprotect the objects so that they can be garbage-collected\n  public static void unpreserveObject() {\n    protectedMap.remove(0);\n  }\n}\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "returnEnum.valueOf((Class)targetType, stringToParse);", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}]},
{"query": "How to initialize thread", "url": "http://bruceeckel.github.io/2017/01/13/constructors-are-not-thread-safe/", "url position": 14, "segments": [{"code": "// HasID.java\n\npublic interface HasID {\n  int getID();\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "// StaticIDField.java\n\npublic class StaticIDField implements HasID {\n  private static int counter = 0;\n  private int id = counter++;\n  public int getID() { return id; }\n}\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// IDChecker.java\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\nimport com.google.common.collect.Sets;\n\npublic class IDChecker {\n  public static int SIZE = 100_000;\n  static class MakeObjects\n  implements Supplier<List<Integer>> {\n    private Supplier<HasID> gen;\n    public MakeObjects(Supplier<HasID> gen) {\n      this.gen = gen;\n    }\n    @Override\n    public List<Integer> get() {\n      return\n        Stream.generate(gen)\n          .limit(SIZE)\n          .map(HasID::getID)\n          .collect(Collectors.toList());\n    }\n  }\n  public static void test(Supplier<HasID> gen) {\n    CompletableFuture<List<Integer>>\n      groupA = CompletableFuture\n        .supplyAsync(new MakeObjects(gen)),\n      groupB = CompletableFuture\n        .supplyAsync(new MakeObjects(gen));\n    groupA.thenAcceptBoth(groupB, (a, b) -> {\n      System.out.println(\n        Sets.intersection(\n          Sets.newHashSet(a),\n          Sets.newHashSet(b)).size());\n    }).join();\n  }\n}\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// TestStaticIDField.java\n\npublic class TestStaticIDField {\n  public static void main(String[] args) {\n    IDChecker.test(StaticIDField::new);\n  }\n}\n/* Output:\n*/\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// GuardedIDField.java\nimport java.util.concurrent.atomic.*;\n\npublic class GuardedIDField implements HasID {\n  private static AtomicInteger counter =\n    new AtomicInteger();\n  private int id = counter.getAndAdd(1);\n  public int getID() { return id; }\n  public static void main(String[] args) {\n    IDChecker.test(GuardedIDField::new);\n  }\n}\n/* Output:\n*/\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// SharedConstructorArgument.java\nimport java.util.concurrent.atomic.*;\n\ninterface SharedArg {\n  int get();\n}\n\nclass Unsafe implements SharedArg {\n  private int i = 0;\n  public int get() { return i++; }\n}\n\nclass Safe implements SharedArg {\n  private static AtomicInteger counter =\n    new AtomicInteger();\n  public int get() {\n    return counter.getAndAdd(1);\n  }\n}\n\nclass SharedUser implements HasID {\n  private final int id;\n  public SharedUser(SharedArg sa) {\n    id = sa.get();\n  }\n  @Override\n  public int getID() { return id; }\n}\n\npublic class SharedConstructorArgument {\n  public static void main(String[] args) {\n    Unsafe unsafe = new Unsafe();\n    IDChecker.test(() -> new SharedUser(unsafe));\n    Safe safe = new Safe();\n    IDChecker.test(() -> new SharedUser(safe));\n  }\n}\n/* Output:\n0\n*/\n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// SynchronizedConstructor.java\nimport java.util.concurrent.atomic.*;\n\nclass SyncConstructor implements HasID {\n  private final int id;\n  private static Object constructorLock = new Object();\n  public SyncConstructor(SharedArg sa) {\n    synchronized(constructorLock) {\n      id = sa.get();\n    }\n  }\n  @Override\n  public int getID() { return id; }\n}\n\npublic class SynchronizedConstructor {\n  public static void main(String[] args) {\n    Unsafe unsafe = new Unsafe();\n    IDChecker.test(() -> new SyncConstructor(unsafe));\n  }\n}\n/* Output:\n*/\n", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// SynchronizedFactory.java\nimport java.util.concurrent.atomic.*;\n\nclass SyncFactory implements HasID {\n  private final int id;\n  private SyncFactory(SharedArg sa) {\n    id = sa.get();\n  }\n  @Override\n  public int getID() { return id; }\n  public static synchronized\n  SyncFactory factory(SharedArg sa) {\n    return new SyncFactory(sa);\n  }\n}\n\npublic class SynchronizedFactory {\n  public static void main(String[] args) {\n    Unsafe unsafe = new Unsafe();\n    IDChecker.test(() ->\n      SyncFactory.factory(unsafe));\n  }\n}\n/* Output:\n*/\n", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://docs.oracle.com/javase/tutorial/uiswing/concurrency/initial.html", "url position": 17, "segments": [{"code": "\nSwingUtilities.invokeLater(new Runnable() {\n    public void run() {\n        createAndShowGUI();\n    }\n});\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html", "url position": 16, "segments": [{"code": "\n\npublic class HelloWorldAnonymousClasses {\n  \n    interface HelloWorld {\n        public void greet();\n        public void greetSomeone(String someone);\n    }\n  \n    public void sayHello() {\n        \n        class EnglishGreeting implements HelloWorld {\n            String name = \"world\";\n            public void greet() {\n                greetSomeone(\"world\");\n            }\n            public void greetSomeone(String someone) {\n                name = someone;\n                System.out.println(\"Hello \" + name);\n            }\n        }\n      \n        HelloWorld englishGreeting = new EnglishGreeting();\n        \n        HelloWorld frenchGreeting = new HelloWorld() {\n            String name = \"tout le monde\";\n            public void greet() {\n                greetSomeone(\"tout le monde\");\n            }\n            public void greetSomeone(String someone) {\n                name = someone;\n                System.out.println(\"Salut \" + name);\n            }\n        };\n        \n        HelloWorld spanishGreeting = new HelloWorld() {\n            String name = \"mundo\";\n            public void greet() {\n                greetSomeone(\"mundo\");\n            }\n            public void greetSomeone(String someone) {\n                name = someone;\n                System.out.println(\"Hola, \" + name);\n            }\n        };\n        englishGreeting.greet();\n        frenchGreeting.greetSomeone(\"Fred\");\n        spanishGreeting.greet();\n    }\n\n    public static void main(String... args) {\n        HelloWorldAnonymousClasses myApp =\n            new HelloWorldAnonymousClasses();\n        myApp.sayHello();\n    }            \n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "        HelloWorld frenchGreeting = new HelloWorld() {\n            String name = \"tout le monde\";\n            public void greet() {\n                greetSomeone(\"tout le monde\");\n            }\n            public void greetSomeone(String someone) {\n                name = someone;\n                System.out.println(\"Salut \" + name);\n            }\n        };", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "import javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Stage;\n \npublic class HelloWorld extends Application {\n    public static void main(String[] args) {\n        launch(args);\n    }\n    \n    @Override\n    public void start(Stage primaryStage) {\n        primaryStage.setTitle(\"Hello World!\");\n        Button btn = new Button();\n        btn.setText(\"Say 'Hello World'\");\n        btn.setOnAction(new EventHandler<ActionEvent>() {\n \n            @Override\n            public void handle(ActionEvent event) {\n                System.out.println(\"Hello World!\");\n            }\n        });\n        \n        StackPane root = new StackPane();\n        root.getChildren().add(btn);\n        primaryStage.setScene(new Scene(root, 300, 250));\n        primaryStage.show();\n    }\n}", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "import javafx.application.Application;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.geometry.Insets;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.layout.GridPane;\nimport javafx.scene.layout.HBox;\nimport javafx.stage.Stage;\n\npublic class CustomTextFieldSample extends Application {\n    \n    final static Label label = new Label();\n \n    @Override\n    public void start(Stage stage) {\n        Group root = new Group();\n        Scene scene = new Scene(root, 300, 150);\n        stage.setScene(scene);\n        stage.setTitle(\"Text Field Sample\");\n \n        GridPane grid = new GridPane();\n        grid.setPadding(new Insets(10, 10, 10, 10));\n        grid.setVgap(5);\n        grid.setHgap(5);\n \n        scene.setRoot(grid);\n        final Label dollar = new Label(\"$\");\n        GridPane.setConstraints(dollar, 0, 0);\n        grid.getChildren().add(dollar);\n        \n        final TextField sum = new TextField() {\n            @Override\n            public void replaceText(int start, int end, String text) {\n                if (!text.matches(\"[a-z, A-Z]\")) {\n                    super.replaceText(start, end, text);                     \n                }\n                label.setText(\"Enter a numeric value\");\n            }\n \n            @Override\n            public void replaceSelection(String text) {\n                if (!text.matches(\"[a-z, A-Z]\")) {\n                    super.replaceSelection(text);\n                }\n            }\n        };\n \n        sum.setPromptText(\"Enter the total\");\n        sum.setPrefColumnCount(10);\n        GridPane.setConstraints(sum, 1, 0);\n        grid.getChildren().add(sum);\n        \n        Button submit = new Button(\"Submit\");\n        GridPane.setConstraints(submit, 2, 0);\n        grid.getChildren().add(submit);\n        \n        submit.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent e) {\n                label.setText(null);\n            }\n        });\n        \n        GridPane.setConstraints(label, 0, 1);\n        GridPane.setColumnSpan(label, 3);\n        grid.getChildren().add(label);\n        \n        scene.setRoot(grid);\n        stage.show();\n    }\n \n    public static void main(String[] args) {\n        launch(args);\n    }\n}", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Semaphore.html", "url position": 15, "segments": [{"code": "public class Semaphore\nextends Object\nimplements Serializable", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "\n class Pool {\n   private static final int MAX_AVAILABLE = 100;\n   private final Semaphore available = new Semaphore(MAX_AVAILABLE, true);\n\n   public Object getItem() throws InterruptedException {\n     available.acquire();\n     return getNextAvailableItem();\n   }\n\n   public void putItem(Object x) {\n     if (markAsUnused(x))\n       available.release();\n   }\n\n   // Not a particularly efficient data structure; just for demo\n\n   protected Object[] items = ... whatever kinds of items being managed\n   protected boolean[] used = new boolean[MAX_AVAILABLE];\n\n   protected synchronized Object getNextAvailableItem() {\n     for (int i = 0; i < MAX_AVAILABLE; ++i) {\n       if (!used[i]) {\n          used[i] = true;\n          return items[i];\n       }\n     }\n     return null; // not reached\n   }\n\n   protected synchronized boolean markAsUnused(Object item) {\n     for (int i = 0; i < MAX_AVAILABLE; ++i) {\n       if (item == items[i]) {\n          if (used[i]) {\n            used[i] = false;\n            return true;\n          } else\n            return false;\n       }\n     }\n     return false;\n   }\n\n }\n ", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "publicSemaphore(intpermits)", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicSemaphore(intpermits,\n         booleanfair)", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicvoidacquire()\n             throws InterruptedException", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicvoidacquireUninterruptibly()", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicbooleantryAcquire()", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicbooleantryAcquire(longtimeout,\n                 TimeUnitunit)\n                   throws InterruptedException", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "publicvoidrelease()", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicvoidacquire(intpermits)\n             throws InterruptedException", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicvoidacquireUninterruptibly(intpermits)", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicbooleantryAcquire(intpermits)", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicbooleantryAcquire(intpermits,\n                 longtimeout,\n                 TimeUnitunit)\n                   throws InterruptedException", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "publicvoidrelease(intpermits)", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicintavailablePermits()", "in_page_order": 15, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicintdrainPermits()", "in_page_order": 16, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "protectedvoidreducePermits(intreduction)", "in_page_order": 17, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicbooleanisFair()", "in_page_order": 18, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "public finalbooleanhasQueuedThreads()", "in_page_order": 19, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "public finalintgetQueueLength()", "in_page_order": 20, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "protectedCollection<Thread>getQueuedThreads()", "in_page_order": 21, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "publicStringtoString()", "in_page_order": 22, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "http://antrix.net/posts/2012/java-lazy-initialization/", "url position": 13, "segments": [{"code": "class Demo {\n\n    private Collaborator collaborator = new Collaborator();\n\n    public Collaborator getCollaborator() {\n        return collaborator;\n    }\n\n    public static void main(String... args) {\n        Demo demo = new Demo();\n        Collaborator collaborator = demo.getCollaborator();\n    }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private Collaborator collaborator;\n\n    public Collaborator getCollaborator() {\n        if (collaborator == null) {\n            collaborator = new Collaborator();\n        }\n        return collaborator;\n    }\n}\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private Collaborator collaborator;\n\n    public synchronized Collaborator getCollaborator() {\n        if (collaborator == null) {\n            collaborator = new Collaborator();\n        }\n        return collaborator;\n    }\n}\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private Collaborator collaborator;\n\n    public Collaborator getCollaborator() {\n        if (collaborator == null) {\n            synchronized(this) {\n                if (collaborator == null) {\n                    collaborator = new Collaborator();\n                }\n            }\n        }\n        return collaborator;\n    }\n}\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Collaborator {\n    public Associate associate;\n\n    public Collaborator() {\n        associate = new Associate();\n    }\n}\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private Collaborator collaborator;\n\n    public Collaborator getCollaborator() {\n        if (collaborator == null) {\n            synchronized(this) {\n                if (collaborator == null) {\n                    // psuedo code now\n                    associate = new Associate();\n                    collaborator = new Collaborator();\n                }\n            }\n        }\n        return collaborator;\n    }\n}\n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private final Collaborator collaborator = new Collaborator();\n\n    public Collaborator getCollaborator() {\n        return collaborator;\n    }\n}\n", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private volatile Collaborator collaborator;\n\n    public Collaborator getCollaborator() {\n        if (collaborator == null) {\n            synchronized(this) {\n                if (collaborator == null) {\n                    collaborator = new Collaborator();\n                }\n            }\n        }\n        return collaborator;\n    }\n}\n", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private volatile Collaborator collaborator;\n\n    public Collaborator getCollaborator() {\n        Collaborator tmp = collaborator;\n        if (tmp == null) {\n            synchronized(this) {\n                tmp = collaborator;\n                if (tmp == null) {\n                    tmp = new Collaborator();\n                    collaborator = tmp;\n                }\n            }\n        }\n        return tmp;\n    }\n}\n", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class Demo {\n\n    private static class CollaboratorHolder {\n        public static final Collaborator collaborator = new Collaborator();\n    }\n\n    public Collaborator getCollaborator() {\n        return CollaboratorHolder.collaborator;\n    }\n}\n", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "private Collaborator collaborator;\n\npublic synchronized Collaborator getCollaborator() {\n    if (collaborator == null) {\n        collaborator = new Collaborator();\n    }\n    return collaborator;\n}\n", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "private volatile Collaborator collaborator;\n\npublic Collaborator getCollaborator() {\n    if (collaborator == null) {\n        synchronized(this) {\n            if (collaborator == null) {\n                collaborator = new Collaborator();\n            }\n        }\n    }\n    return collaborator;\n}\n", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://github.com/cbeust/testng/issues/1425", "url position": 12, "segments": []},
{"query": "How to initialize thread", "url": "https://www.ralph-schuster.eu/2014/12/09/multi-threading-pitfalls-when-initializing-static-variables/", "url position": 21, "segments": [{"code": "1\n3\n5\n7\n9\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private static Object staticVar = null;\n\npublic static synchronized Object getStaticVar() {\n    if (staticVar == null) {\n        // initialize\n        staticVar = ...\n    }\n    return staticVar;\n}", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "1\n3\n5\n7\n9\n11\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private static Object SYNCHRONIZER = new Object();\nprivate static Object staticVar = null;\n\npublic static Object getStaticVar() {\n    if (staticVar == null) {\n        synchronized (SYNCHRONIZER) {\n            // initialize\n            staticVar = ...\n        }\n    }\n    return staticVar;\n}", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "1\n3\n5\n7\n9\n11\n13\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private static Object SYNCHRONIZER = new Object();\nprivate static Object staticVar = null;\n\npublic static Object getStaticVar() {\n    if (staticVar == null) {\n        synchronized (SYNCHRONIZER) {\n            if (staticVar == null) {\n               // initialize\n               staticVar = ...\n            }\n        }\n    }\n    return staticVar;\n}", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "1\n3\n5\n7\n9\n11\n13\n15\n17\n", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private static Object SYNCHRONIZER = new Object();\nprivate static List<String> staticVar = null;\n\npublic static List<String> getStaticVar() {\n    if (staticVar == null) {\n        synchronized (SYNCHRONIZER) {\n            if (staticVar == null) {\n               // initialize\n               staticVar = new ArrayList<String>();\n               staticVar.add(\"value 1\");\n               staticVar.add(\"value 2\");\n               staticVar.add(\"value 3\");\n            }\n        }\n    }\n    return staticVar;\n}", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "1\n3\n5\n7\n9\n11\n13\n15\n17\n", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private static Object SYNCHRONIZER = new Object();\nprivate static List<String> staticVar = null;\n\npublic static List<String> getStaticVar() {\n    if (staticVar == null) {\n        synchronized (SYNCHRONIZER) {\n            if (staticVar == null) {\n               // initialize\n               List<String> tmp = new ArrayList<String>();\n               tmp.add(\"value 1\");\n               tmp.add(\"value 2\");\n               tmp.add(\"value 3\");\n               staticVar = tmp;\n            }\n        }\n    }\n    return staticVar;\n}", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "private static Object SYNCHRONIZER = new Object();\nprivate static List<String> staticVar = null;\n\npublic static List<String> getStaticVar() {\n    if (staticVar == null) {\n        synchronized (SYNCHRONIZER) {\n            if (staticVar == null) {\n               staticVar = createList();\n            }\n        }\n    }\n    return staticVar;\n}\n\nprivate static List<String> createList() {\n   // initialize\n   List<String> tmp = new ArrayList<String>();\n   tmp.add(\"value 1\");\n   tmp.add(\"value 2\");\n   tmp.add(\"value 3\");\n   return tmp;\n}", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://en.wikipedia.org/wiki/Singleton_pattern", "url position": 25, "segments": [{"code": "\npublic final class Singleton {\n    private static final Singleton INSTANCE = new Singleton();\n\n    private Singleton() {}\n\n    public static Singleton getInstance() {\n        return INSTANCE;\n    }\n}\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\npublic final class Singleton {\n    private static volatile Singleton instance = null;\n\n    private Singleton() {}\n\n    public static Singleton getInstance() {\n        if (instance == null) {\n            synchronized(Singleton.class) {\n                if (instance == null) {\n                    instance = new Singleton();\n                }\n            }\n        }\n        return instance;\n    }\n}\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "http://tutorials.jenkov.com/java-concurrency/creating-and-starting-threads.html", "url position": 34, "segments": [{"code": "\n  Thread thread = new Thread();\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\n  thread.start();\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\n  public class MyThread extends Thread {\n\n    public void run(){\n       System.out.println(\"MyThread running\");\n    }\n  }\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\n  MyThread myThread = new MyThread();\n  myTread.start();\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\n  Thread thread = new Thread(){\n    public void run(){\n      System.out.println(\"Thread Running\");\n    }\n  }\n\n  thread.start();\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\n  public class MyRunnable implements Runnable {\n\n    public void run(){\n       System.out.println(\"MyRunnable running\");\n    }\n  }\n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\n   Thread thread = new Thread(new MyRunnable());\n   thread.start();\n", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\n   Runnable myRunnable = new Runnable(){\n\n     public void run(){\n        System.out.println(\"Runnable running\");\n     }\n   }\n\n   Thread thread = new Thread(myRunnable);\n   thread.start();\n", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\n  Thread newThread = new Thread(MyRunnable());\n  newThread.run();  //should be start();\n", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\n   Thread thread = new Thread(\"New Thread\") {\n      public void run(){\n        System.out.println(\"run by: \" + getName());\n      }\n   };\n\n\n   thread.start();\n   System.out.println(thread.getName());\n", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\n   MyRunnable runnable = new MyRunnable();\n   Thread thread = new Thread(runnable, \"New Thread\");\n\n   thread.start();\n   System.out.println(thread.getName());\n", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\nThread thread = Thread.currentThread();\n", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\n   String threadName = Thread.currentThread().getName();\n", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "\npublic class ThreadExample {\n\n  public static void main(String[] args){\n    System.out.println(Thread.currentThread().getName());\n    for(int i=0; i<10; i++){\n      new Thread(\"\" + i){\n        public void run(){\n          System.out.println(\"Thread: \" + getName() + \" running\");\n        }\n      }.start();\n    }\n  }\n}\n", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://stackify.com/top-java-software-errors/", "url position": 31, "segments": [{"code": "<pre class=\"prettyprint\">private static double volume(String solidom, double alturam, double areaBasem, double raiom) {\ndouble vol;\n\n    if (solidom.equalsIgnoreCase(\"esfera\"){\n        vol=(4.0/3)*Math.pi*Math.pow(raiom,3);\n    }\n    else {\n        if (solidom.equalsIgnoreCase(\"cilindro\") {\n            vol=Math.pi*Math.pow(raiom,2)*alturam;\n        }\n        else {\n            vol=(1.0/3)*Math.pi*Math.pow(raiom,2)*alturam;\n        }\n    }\n    return vol;\n}\n</pre>", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\"> public abstract class NFLPlayersReference {\n\n    private static Runningback[] nflplayersreference;\n\n    private static Quarterback[] players;\n\n    private static WideReceiver[] nflplayers;\n\n    public static void main(String args[]){\n\n    Runningback r = new Runningback(\"Thomlinsion\");\n\n    Quarterback q = new Quarterback(\"Tom Brady\");\n\n    WideReceiver w = new WideReceiver(\"Steve Smith\");\n\n    NFLPlayersReference[] NFLPlayersReference;\n\n\n        Run();// {\n\n        NFLPlayersReference = new NFLPlayersReference [3];\n\n        nflplayersreference[0] = r;\n\n        players[1] = q;\n\n        nflplayers[2] = w;\n \n\n            for ( int i = 0; i &lt; nflplayersreference.length; i++ ) {\n\n            System.out.println(\"My name is \" + \" nflplayersreference[i].getName());\n\n            nflplayersreference[i].run();\n\n            nflplayersreference[i].run();\n\n            nflplayersreference[i].run();\n\n            System.out.println(\"NFL offensive threats have great running abilities!\");\n\n        }\n\n    }\n\n    private static void Run() {\n\n        System.out.println(\"Not yet implemented\");\n\n    }     \n \n}\n</pre>", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">} // ADD IT HERE\n\n       public void newShape(String shape) {\n\n        switch (shape) {\n            case \"Line\":\n                Shape line = new Line(startX, startY, endX, endY);\n            shapes.add(line);\n            break;\n                case \"Oval\":\n            Shape oval = new Oval(startX, startY, endX, endY);\n            shapes.add(oval);\n            break;\n            case \"Rectangle\":\n            Shape rectangle = new Rectangle(startX, startY, endX, endY);\n            shapes.add(rectangle);\n            break;\n            default:\n            System.out.println(\"ERROR. Check logic.\");\n        }\n        }\n    } // REMOVE IT FROM HERE\n    }\n</pre>", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">package javaapplication3;  \n   \n \n  public class Robot {  \n        int xlocation;  \n        int ylocation;  \n        String name;  \n        static int ccount = 0;  \n           \n        public Robot(int xxlocation, int yylocation, String nname) {  \n            xlocation = xxlocation;  \n            ylocation = yylocation;  \n            name = nname;  \n            ccount++;         \n        } \n  }\n         \n  public class JavaApplication1 { \n       \n       \n       \n    public static void main(String[] args) {  \n           \n        robot firstRobot = new Robot(34,51,\"yossi\");  \n        System.out.println(\"numebr of robots is now \" + Robot.ccount);  \n    }\n  }\n</pre>", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">test.java:78: error: incompatible types\nreturn stringBuilder.toString();\n                             ^\nrequired: int\nfound:    String\n1 error\n</pre>", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public class Circle\n{\n    private double radius;\n    public CircleR(double r)\n    {\n        radius = r;\n    }\n    public diameter()\n    {\n       double d = radius * 2;\n       return d;\n    }\n}\n</pre>", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">RandomNumbers.java:9: error: method generateNumbers in class RandomNumbers cannot be applied to given types;\ngenerateNumbers();\n\nrequired: int[]\n\nfound:generateNumbers();\n\nreason: actual and formal argument lists differ in length\n</pre>", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public String[] OpenFile() throws IOException {\n\n    Map&lt;String, Double&gt; map = new HashMap();\n\n    FileReader fr = new FileReader(\"money.txt\");\n    BufferedReader br = new BufferedReader(fr);\n\n\n    try{\n        while (br.ready()){\n            String str = br.readLine();\n            String[] list = str.split(\" \");\n            System.out.println(list);               \n        }\n    }   catch (IOException e){\n        System.err.println(\"Error - IOException!\");\n    }\n}\n</pre>", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public class mod_MyMod extends BaseMod\npublic String Version()\n{\n     return \"1.2_02\";\n}\npublic void AddRecipes(CraftingManager recipes)\n{\n   recipes.addRecipe(new ItemStack(Item.diamond), new Object[] {\n      \"#\", Character.valueOf('#'), Block.dirt\n   });\n}\n</pre>", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">java:11: reached end of file while parsing }\n</pre>", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">for(;;){\n   break;\n   ... // unreachable statement\n}\n\n\nint i=1;\nif(i==1)\n  ...\nelse\n  ... // dead code\n</pre>", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">int x;\nif (condition) {\n    x = 5;\n}\nSystem.out.println(x); // x may not have been initialized\n</pre>", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">operator &lt; cannot be applied to java.lang.Object,java.lang.Object\n</pre>", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">TypeInvocationConversionTest.java:12: inconvertible types\nfound   : java.util.ArrayList&lt;java.lang.Class&lt;? extends TypeInvocationConversionTest.Interface1&gt;&gt;\nrequired: java.util.ArrayList&lt;java.lang.Class&lt;?&gt;&gt;\n    lessRestrictiveClassList = (ArrayList&lt;Class&lt;?&gt;&gt;) classList;\n                                                     ^\n</pre>", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public class SavingsAcc2\n{\n private double balance;\n private double interest;\n \n \n public SavingsAcc2()\n {\n balance = 0.0;\n interest = 6.17;\n }\n \n public SavingsAcc2(double initBalance, double interested)\n {\n balance = initBalance;\n interest = interested;\n  \n }\n \n public SavingsAcc2 deposit(double amount)\n {\n balance = balance + amount;\n return;\n }\n \n public SavingsAcc2 withdraw(double amount)\n {\n balance = balance - amount;\n return;\n }\n \n public SavingsAcc2 addInterest(double interest)\n {\n balance = balance * (interest / 100) + balance;\n return;\n }\n \n public double getBalance()\n {\n return balance;\n }\n}\n</pre>", "in_page_order": 15, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">SavingsAcc2.java:29: missing return value \nreturn; \n^ \nSavingsAcc2.java:35: missing return value \nreturn; \n^ \nSavingsAcc2.java:41: missing return value \nreturn; \n^ \n3 errors \n</pre>", "in_page_order": 16, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public static void move()\n{\n    System.out.println(\"What do you want to do?\");\n    Scanner scan = new Scanner(System.in);\n    int userMove = scan.nextInt();\n    return userMove;\n}\n\npublic static void usersMove(String playerName, int gesture)\n{\n    int userMove = move();\n\n    if (userMove == -1)\n    {\n        break;\n    }\n</pre>", "in_page_order": 17, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public static int move()\n{\n    System.out.println(\"What do you want to do?\");\n    Scanner scan = new Scanner(System.in);\n    int userMove = scan.nextInt();\n    return userMove;\n}\n</pre>", "in_page_order": 18, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public class StaticTest {\n\n    private int count=0;\n    public static void main(String args[]) throws IOException {\n        count++; //compiler error: non-static variable count cannot be referenced from a static context\n    }\n}\n</pre>", "in_page_order": 19, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">class Sample\n{\n   private int age;\n   public void setAge(int a)\n   {\n      age=a;\n   }\n   public int getAge()\n   {\n      return age;\n   }\n   public static void main(String args[])\n   {\n       System.out.println(\"Age is:\"+ getAge());\n   }\n}\n</pre>", "in_page_order": 20, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Exception in thread \"main\" java.lang.Error: Unresolved compilation problem: \nCannot make a static reference to the non-static method getAge() from the type Sample\n</pre>", "in_page_order": 21, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">AClass[] array = {object1, object2}\n</pre>", "in_page_order": 22, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">AClass[] array = new AClass[2];\n...\narray[0] = object1;\narray[1] = object2;\n</pre>", "in_page_order": 23, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">AClass[] array;\n...\narray = {object1, object2};\n</pre>", "in_page_order": 24, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">String[] name = {\"tom\", \"dick\", \"harry\"};\nfor(int i = 0; i&lt;=name.length; i++) {\n  System.out.print(name[i] +'\\n');\n}\n</pre>", "in_page_order": 25, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">int[] list = new int[5];\n  list[5] = 33;            // illegal index, maximum index is 4\n</pre>", "in_page_order": 26, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public class StringCharAtExample {\n    public static void main(String[] args) {\n        String str = \"Java Code Geeks!\";\n        System.out.println(\"Length: \" + str.length());\n         \n        //The following statement throws an exception, because\n        //the request index is invalid.\n        char ch = str.charAt(50);\n    }\n}\n</pre>", "in_page_order": 27, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">// A Java program to demonstrate that invoking a method\n// on null causes NullPointerException\nimport java.io.*;\n \nclass GFG\n{\n    public static void main (String[] args)\n    {\n        // Initializing String variable with null value\n        String ptr = null;\n \n        // Checking if ptr.equals null or works fine.\n        try\n        {\n            // This line of code throws NullPointerException\n            // because ptr is null\n            if (ptr.equals(\"gfg\"))\n                System.out.print(\"Same\");\n            else\n                System.out.print(\"Not Same\");\n        }\n        catch(NullPointerException e)\n        {\n            System.out.print(\"NullPointerException Caught\");\n        }\n    }\n}\n</pre>", "in_page_order": 28, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">class A\n{\n  // some code\n}\npublic class B\n{\n    public static void main(String[] args)\n    {\n        A a = new A();\n    }\n}\n</pre>", "in_page_order": 29, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Exception in thread \"main\" java.lang.NoClassDefFoundError: A\nat MainClass.main(MainClass.java:10)\nCaused by: java.lang.ClassNotFoundException: A\nat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\nat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n</pre>", "in_page_order": 30, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Error: Could not find or load main class wiki.java\n</pre>", "in_page_order": 31, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">javax.mail.NoSuchProviderException\n</pre>", "in_page_order": 32, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">ERROR Could not register mbeans java.security.\n \nAccessControlException: WFSM000001: Permission check failed (permission \"(\"javax.management.MBeanPermission\" \"org.apache.logging.log4j.core.jmx.LoggerContextAdmin#-\n[org.apache.logging.log4j2:type=51634f]\" \"registerMBean\")\" in code source \"(vfs:/C:/wildfly-10.0.0.Final/standalone/deployments/mySampleSecurityApp.war/WEB-INF/lib/log4j-core-2.5.\njar )\" of \"null\")\n</pre>", "in_page_order": 33, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\"> /* ............... START ............... */\n                \npublic class JavaArrayStoreException {\n\n\tpublic static void main(String... args) {\n\t\tObject[] val = new Integer[4];\n\t\tval[0] = 5.8;\n\t}\n\n}\n                /* ............... END ............... */\n</pre>", "in_page_order": 34, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Exception in thread \"main\" java.lang.ArrayStoreException: java.lang.Double\n\tat ExceptionHandling.JavaArrayStoreException.main(JavaArrayStoreException.java:7)\n</pre>", "in_page_order": 35, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Java(TM) Plug-in: Version 1.3.1_01\nUsing JRE version 1.3.1_01 Java HotSpot(TM) Client VM\nUser home directory = C:\\Documents and Settings\\Ankur\n\nProxy Configuration: Manual Configuration\n\nProxy: 192.168.11.6:80\n\njava.lang.ClassFormatError: SalesCalculatorAppletBeanInfo (Bad magic number)\n\nat java.lang.ClassLoader.defineClass0(Native Method)\n\nat java.lang.ClassLoader.defineClass(Unknown Source)\n\nat java.security.SecureClassLoader.defineClass(Unknown Source)\n\nat sun.applet.AppletClassLoader.findClass(Unknown Source)\n\nat sun.plugin.security.PluginClassLoader.access$201(Unknown Source)\n\nat sun.plugin.security.PluginClassLoader$1.run(Unknown Source)\n\nat java.security.AccessController.doPrivileged(Native Method)\n\nat sun.plugin.security.PluginClassLoader.findClass(Unknown Source)\n\nat java.lang.ClassLoader.loadClass(Unknown Source)\n\nat sun.applet.AppletClassLoader.loadClass(Unknown Source)\n\nat java.lang.ClassLoader.loadClass(Unknown Source)\n\nat java.beans.Introspector.instantiate(Unknown Source)\n\nat java.beans.Introspector.findInformant(Unknown Source)\n\nat java.beans.Introspector.(Unknown Source)\n\nat java.beans.Introspector.getBeanInfo(Unknown Source)\n\nat sun.beans.ole.OleBeanInfo.(Unknown Source)\n\nat sun.beans.ole.StubInformation.getStub(Unknown Source)\n\nat sun.plugin.ocx.TypeLibManager$1.run(Unknown Source)\n\nat java.security.AccessController.doPrivileged(Native Method)\n\nat sun.plugin.ocx.TypeLibManager.getTypeLib(Unknown Source)\n\nat sun.plugin.ocx.TypeLibManager.getTypeLib(Unknown Source)\n\nat sun.plugin.ocx.ActiveXAppletViewer.statusNotification(Native Method)\n\nat sun.plugin.ocx.ActiveXAppletViewer.notifyStatus(Unknown Source)\n\nat sun.plugin.ocx.ActiveXAppletViewer.showAppletStatus(Unknown Source)\n\nat sun.applet.AppletPanel.run(Unknown Source)\n\nat java.lang.Thread.run(Unknown Source)\n</pre>", "in_page_order": 36, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Exception in thread \"main\" java.net.SocketException: Broken pipe\n      at java.net.SocketOutputStream.socketWrite0(Native Method)\n      at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n      at java.net.SocketOutputStream.write(SocketOutputStream.java:115)\n      at java.io.DataOutputStream.write\n</pre>", "in_page_order": 37, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Error: Could not create the Java Virtual Machine\n\nError: A fatal exception has occurred. Program will exit.\n</pre>", "in_page_order": 38, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">MyTest.java:10: cannot access MyStruct \nbad class file: D:\\Java\\test\\MyStruct.java \nfile does not contain class MyStruct \nPlease remove or make sure it appears in the correct subdirectory of the classpath. \nMyStruct ms = new MyStruct(); \n^ \n</pre>", "in_page_order": 39, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">package com;\nclass A\n{\n    int i = 10;\n}\n \nclass B extends A\n{\n    int j = 20;\n}\n \nclass C extends B\n{\n    int k = 30;\n}\n \npublic class ClassCastExceptionDemo\n{\n    public static void main(String[] args)\n    {\n        A a = new B();   //B type is auto up casted to A type\n        B b = (B) a;     //A type is explicitly down casted to B type.\n        C c = (C) b;    //Here, you will get class cast exception\n        System.out.println(c.k);\n    }\n}\n</pre>", "in_page_order": 40, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Exception in thread \u201cmain\u201d java.lang.ClassCastException: com.B cannot be cast to com.C\nat com.ClassCastExceptionDemo.main(ClassCastExceptionDemo.java:23)\n</pre>", "in_page_order": 41, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Caused by: java.lang.ClassFormatError: Absent Code attribute in method that is\n        not native or abstract in class file javax/persistence/GenerationType\n\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClassCond(Unknown Source)\n\tat java.lang.ClassLoader.defineClass(Unknown Source)\n\tat java.security.SecureClassLoader.defineClass(Unknown Source)\n\tat java.net.URLClassLoader.defineClass(Unknown Source)\n\tat java.net.URLClassLoader.access$000(Unknown Source)\n\tat java.net.URLClassLoader$1.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n</pre>", "in_page_order": 42, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">java.lang.ExceptionInInitializerError\n  at org.eclipse.mat.hprof.HprofIndexBuilder.fill(HprofIndexBuilder.java:54)\n  at org.eclipse.mat.parser.internal.SnapshotFactory.parse(SnapshotFactory.java:193)\n  at org.eclipse.mat.parser.internal.SnapshotFactory.openSnapshot(SnapshotFactory.java:106)\n  at com.squareup.leakcanary.HeapAnalyzer.openSnapshot(HeapAnalyzer.java:134)\n  at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:87)\n  at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:56)\n  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n  at android.os.Handler.dispatchMessage(Handler.java:102)\n  at android.os.Looper.loop(Looper.java:145)\n  at android.os.HandlerThread.run(HandlerThread.java:61)\nCaused by: java.lang.NullPointerException: in == null\n  at java.util.Properties.load(Properties.java:246)\n  at org.eclipse.mat.util.MessageUtil.(MessageUtil.java:28)\n  at org.eclipse.mat.util.MessageUtil.(MessageUtil.java:13)\n  ... 10 more\n</pre>", "in_page_order": 43, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">@Override\nprotected byte[] engineWrap(Key key) throws IllegalBlockSizeException, InvalidKeyException {\ntry {\nbyte[] encoded = key.getEncoded();\nreturn engineDoFinal(encoded, 0, encoded.length);\n} catch (BadPaddingException e) {\nIllegalBlockSizeException newE = new IllegalBlockSizeException();\nnewE.initCause(e);\nthrow newE;\n}\n}\n</pre>", "in_page_order": 44, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">javax.crypto.BadPaddingException: Given final block not properly padded\nat com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)\nat com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)\nat com.sun.crypto.provider.AESCipher.engineDoFinal(DashoA13*..)\nat javax.crypto.Cipher.doFinal(DashoA13*..)\n</pre>", "in_page_order": 45, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">Exception in thread \"main\" java.lang.IncompatibleClassChangeError: Implementing class\nat java.lang.ClassLoader.defineClass1(Native Method)\nat java.lang.ClassLoader.defineClass(Unknown Source)\nat java.security.SecureClassLoader.defineClass(Unknown Source)\nat java.net.URLClassLoader.defineClass(Unknown Source)\nat java.net.URLClassLoader.access$000(Unknown Source)\nat java.net.URLClassLoader$1.run(Unknown Source)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.net.URLClassLoader.findClass(Unknown Source)\nat java.lang.ClassLoader.loadClass(Unknown Source)\nat sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\nat java.lang.ClassLoader.loadClass(Unknown Source)\nat java.lang.ClassLoader.loadClassInternal(Unknown Source)\nat net.sf.cglib.core.DebuggingClassWriter.toByteArray(DebuggingClassWriter.java:73)\nat net.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:26)\nat net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216)\nat net.sf.cglib.core.KeyFactory$Generator.create(KeyFactory.java:144)\nat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:116)\nat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:108)\nat net.sf.cglib.core.KeyFactory.create(KeyFactory.java:104)\nat net.sf.cglib.proxy.Enhancer.(Enhancer.java:69)\n</pre>", "in_page_order": 46, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">@Override public ParcelFileDescriptor openFile(Uri uri,String mode) throws FileNotFoundException {\n  if (uri.toString().startsWith(FILE_PROVIDER_PREFIX)) {\n    int m=ParcelFileDescriptor.MODE_READ_ONLY;\n    if (mode.equalsIgnoreCase(\"rw\"))     m=ParcelFileDescriptor.MODE_READ_WRITE;\n    File f=new File(uri.getPath());\n    ParcelFileDescriptor pfd=ParcelFileDescriptor.open(f,m);\n    return pfd;\n  }\n else {\n    throw new FileNotFoundException(\"Unsupported uri: \" + uri.toString());\n  }\n}\n</pre>", "in_page_order": 47, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">import java.io.DataInputStream;\nimport java.io.EOFException;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\n\npublic class ExceptionExample {\n\tpublic void testMethod1(){\n\t\tFile file = new File(\"test.txt\");\n\t\tDataInputStream dataInputStream =  null;\n\t\ttry{\n\t\t\tdataInputStream = new DataInputStream(new FileInputStream(file));\n\t\t\twhile(true){\n\t\t\t\tdataInputStream.readInt();\t\n\t\t\t}\t\t\t\n\t\t}catch (EOFException e){\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\tcatch (IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfinally{\n\t\t\ttry{\n\t\t\t\tif (dataInputStream != null){\n\t\t\t\t\tdataInputStream.close();\n\t\t\t\t}\n\t\t\t}catch (IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args){\n\t\tExceptionExample instance1 = new ExceptionExample();\n\t\tinstance1.testMethod1();\n\t}\n}\n</pre>", "in_page_order": 48, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">java.io.EOFException\n\tat java.io.DataInputStream.readInt(DataInputStream.java:392)\n\tat logging.simple.ExceptionExample.testMethod1(ExceptionExample.java:16)\n\tat logging.simple.ExceptionExample.main(ExceptionExample.java:36)\n</pre>", "in_page_order": 49, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public UnsupportedEncodingException()\n</pre>", "in_page_order": 50, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public void init(String contextName, ContextFactory factory) {\n  super.init(contextName, factory);\n      \n  String periodStr = getAttribute(PERIOD_PROPERTY);\n  if (periodStr != null) {\n    int period = 0;\n    try {\n      period = Integer.parseInt(periodStr);\n    } catch (NumberFormatException nfe) {\n    }\n    if (period &lt;= 0) {\n      throw new MetricsException(\"Invalid period: \" + periodStr);\n    }\n    setPeriod(period);\n  }\n      \n  metricsServers = \n    Util.parse(getAttribute(SERVERS_PROPERTY), DEFAULT_PORT); \n      \n  unitsTable = getAttributeTable(UNITS_PROPERTY);\n  slopeTable = getAttributeTable(SLOPE_PROPERTY);\n  tmaxTable  = getAttributeTable(TMAX_PROPERTY);\n  dmaxTable  = getAttributeTable(DMAX_PROPERTY);\n      \n  try {\n    datagramSocket = new DatagramSocket();\n  }\n  catch (SocketException se) {\n    se.printStackTrace();\n  }\n}\n</pre>", "in_page_order": 51, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">com.sun.jersey.api.client.ClientHandlerException: javax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n   at com.sun.jersey.client.apache.ApacheHttpClientHandler.handle(ApacheHttpClientHandler.java:202)\n   at com.sun.jersey.api.client.Client.handle(Client.java:365)\n   at com.sun.jersey.api.client.WebResource.handle(WebResource.java:556)\n   at com.sun.jersey.api.client.WebResource.get(WebResource.java:178)\n   at com.atlassian.plugins.client.service.product.ProductServiceClientImpl.getProductVersionsAfterVersion(ProductServiceClientImpl.java:82)\n   at com.atlassian.upm.pac.PacClientImpl.getProductUpgrades(PacClientImpl.java:111)\n   at com.atlassian.upm.rest.resources.ProductUpgradesResource.get(ProductUpgradesResource.java:39)\n   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n   at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n   at java.lang.reflect.Method.invoke(Unknown Source)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DispatchProviderHelper$ResponseOutInvoker$1.invoke(DispatchProviderHelper.java:206)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DispatchProviderHelper$1.intercept(DispatchProviderHelper.java:90)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DefaultMethodInvocation.invoke(DefaultMethodInvocation.java:61)\n   at com.atlassian.plugins.rest.common.expand.interceptor.ExpandInterceptor.intercept(ExpandInterceptor.java:38)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DefaultMethodInvocation.invoke(DefaultMethodInvocation.java:61)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DispatchProviderHelper.invokeMethodWithInterceptors(DispatchProviderHelper.java:98)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DispatchProviderHelper.access$100(DispatchProviderHelper.java:28)\n   at com.atlassian.plugins.rest.common.interceptor.impl.DispatchProviderHelper$ResponseOutInvoker._dispatch(DispatchProviderHelper.java:202)\n   ...\nCaused by: javax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n   ...\nCaused by: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n   ...\nCaused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n</pre>", "in_page_order": 52, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">java.util.MissingResourceException: Can't find bundle for base name localemsgs_en_US, locale en_US\njava.util.ResourceBundle.throwMissingResourceException\njava.util.ResourceBundle.getBundleImpl\njava.util.ResourceBundle.getBundle\nnet.sf.jasperreports.engine.util.JRResourcesUtil.loadResourceBundle\nnet.sf.jasperreports.engine.util.JRResourcesUtil.loadResourceBundle\n</pre>", "in_page_order": 53, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">[java] Caused by: javax.naming.NoInitialContextException: Need to specify class name in environment or system property, or as an applet parameter, or in an application resource file:  java.naming.factory.initial\n[java]     at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:645)\n[java]     at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:247)\n[java]     at javax.naming.InitialContext.getURLOrDefaultInitCtx(InitialContext.java:284)\n[java]     at javax.naming.InitialContext.lookup(InitialContext.java:351)\n[java]     at org.apache.camel.impl.JndiRegistry.lookup(JndiRegistry.java:51)\n</pre>", "in_page_order": 54, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public class NoSuchElementExceptionDemo{\n\n    public static void main(String args[]) {\n        Hashtable sampleMap = new Hashtable();\n        Enumeration enumeration = sampleMap.elements();\n        enumeration.nextElement();  //java.util.NoSuchElementExcepiton here because enumeration is empty\n    }\n}\n\nOutput:\nException in thread \"main\" java.util.NoSuchElementException: Hashtable Enumerator\n        at java.util.Hashtable$EmptyEnumerator.nextElement(Hashtable.java:1084)\n        at test.ExceptionTest.main(NoSuchElementExceptionDemo.java:23)\n</pre>", "in_page_order": 55, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">public NoSuchFieldError()\n</pre>", "in_page_order": 56, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">package com.devdaily.javasamples;\n\npublic class ConvertStringToNumber {\n\n    public static void main(String[] args) {\n        try {\n            String s = \"FOOBAR\";\n            int i = Integer.parseInt(s);\n            // this line of code will never be reached\n            System.out.println(\"int value = \" + i);\n        }\n        catch (NumberFormatException nfe) {\n            nfe.printStackTrace();\n        }\n    }\n\n}\n</pre>", "in_page_order": 57, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"prettyprint\">private void queueObject(ComplexDataObject obj) throws TimeoutException, InterruptedException {\n  if (!queue.offer(obj,10,TimeUnit.SECONDS)) {\n    TimeoutException ex=new TimeoutException(\"Timed out waiting for parsed elements to be processed. Aborting.\");\n    throw ex;\n  }\n}\n</pre>", "in_page_order": 58, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "https://confluence.atlassian.com/cloverkb/could-not-initialize-class-error-at-runtime-420974248.html", "url position": 22, "segments": [{"code": "Could not initialize class com.acme.MyClass$__CLR3_2_02t2thng9gff", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:297)\n    at java.lang.Thread.run(Thread.java:724)\nCaused by: java.lang.NoClassDefFoundError: Could not initialize class com.acme.MyClass$__CLR3_2_02t2thng9gffc", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "org.jboss.arquillian.container.spi.client.container.DeploymentException: Could not deploy to container: ...\nCaused by: javax.persistence.PersistenceException: ...\nCaused by: org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister\nCaused by: org.hibernate.InstantiationException: could not instantiate test <some test name>\nCaused by: java.lang.reflect.InvocationTargetException\nCaused by: java.lang.NoClassDefFoundError: Could not initialize class com.acme.MyEntity$__CLR3_1_12b0b0hlfzxawo\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}]},
{"query": "How to initialize thread", "url": "https://www.ibm.com/developerworks/library/j-5things15/index.html", "url position": 24, "segments": [{"code": "package com.geekcap;\n\npublic class SynchronizationExample {\n    private int i;\n\n    public synchronized int synchronizedMethodGet() {\n        return i;\n    }\n\n    public int synchronizedBlockGet() {\n        synchronized( this ) {\n            return i;\n        }\n    }\n}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "\t0:\taload_0\n\t1:\tgetfield\n\t2:\tnop\n\t3:\ticonst_m1\n\t4:\tireturn", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "\t0:\taload_0\n\t1:\tdup\n\t2:\tastore_1\n\t3:\tmonitorenter\n\t4:\taload_0\n\t5:\tgetfield\n\t6:\tnop\n\t7:\ticonst_m1\n\t8:\taload_1\n\t9:\tmonitorexit\n\t10:\tireturn\n\t11:\tastore_2\n\t12:\taload_1\n\t13:\tmonitorexit\n\t14:\taload_2\n\t15:\tathrow", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "myVolatileVar++;", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "int temp = 0;\nsynchronize( myVolatileVar ) {\n  temp = myVolatileVar;\n}\n\ntemp++;\n\nsynchronize( myVolatileVar ) {\n  myVolatileVar = temp;\n}", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "package com.geeckap.atomicexample;\n\npublic class Book\n{\n    private String name;\n\n    public Book()\n    {\n    }\n\n    public Book( String name )\n    {\n        this.name = name;\n    }\n\n    public String getName()\n    {\n        return name;\n    }\n\n    public void setName( String name )\n    {\n        this.name = name;\n    }\n}", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "package com.geeckap.atomicexample;\n\nimport java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n\n/**\n *\n * @author shaines\n */\npublic class MyObject\n{\n    private volatile Book whatImReading;\n\n    private static final AtomicReferenceFieldUpdater<MyObject,Book> updater =\n            AtomicReferenceFieldUpdater.newUpdater( \n                       MyObject.class, Book.class, \"whatImReading\" );\n\n    public Book getWhatImReading()\n    {\n        return whatImReading;\n    }\n\n    public void setWhatImReading( Book whatImReading )\n    {\n        //this.whatImReading = whatImReading;\n        updater.compareAndSet( this, this.whatImReading, whatImReading );\n    }\n}", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "package com.geeckap.atomicexample;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class AtomicExampleTest\n{\n    private MyObject obj;\n\n    @Before\n    public void setUp()\n    {\n        obj = new MyObject();\n        obj.setWhatImReading( new Book( \"Java 2 From Scratch\" ) );\n    }\n\n    @Test\n    public void testUpdate()\n    {\n        obj.setWhatImReading( new Book( \n                \"Pro Java EE 5 Performance Management and Optimization\" ) );\n        Assert.assertEquals( \"Incorrect book name\", \n                \"Pro Java EE 5 Performance Management and Optimization\", \n                obj.getWhatImReading().getName() );\n    }\n\n}", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://developer.android.com/reference/java/lang/Thread.html", "url position": 26, "segments": [{"code": "<pre>\n     class PrimeThread extends Thread {\n         long minPrime;\n         PrimeThread(long minPrime) {\n             this.minPrime = minPrime;\n         }\n\n         public void run() {\n             // compute primes larger than minPrime\n             \u00a0.\u00a0.\u00a0.\n         }\n     }\n </pre>", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre>\n     PrimeThread p = new PrimeThread(143);\n     p.start();\n </pre>", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre>\n     class PrimeRun implements Runnable {\n         long minPrime;\n         PrimeRun(long minPrime) {\n             this.minPrime = minPrime;\n         }\n\n         public void run() {\n             // compute primes larger than minPrime\n             \u00a0.\u00a0.\u00a0.\n         }\n     }\n </pre>", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre>\n     PrimeRun p = new PrimeRun(143);\n     new Thread(p).start();\n </pre>", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint MAX_PRIORITY</pre>", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint MIN_PRIORITY</pre>", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint NORM_PRIORITY</pre>", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread ()</pre>", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/Runnable.html\">Runnable</a> target)</pre>", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/ThreadGroup.html\">ThreadGroup</a> group, \n                <a href=\"https://developer.android.com/reference/java/lang/Runnable.html\">Runnable</a> target)</pre>", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> name)</pre>", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/ThreadGroup.html\">ThreadGroup</a> group, \n                <a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> name)</pre>", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/Runnable.html\">Runnable</a> target, \n                <a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> name)</pre>", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/ThreadGroup.html\">ThreadGroup</a> group, \n                <a href=\"https://developer.android.com/reference/java/lang/Runnable.html\">Runnable</a> target, \n                <a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> name)</pre>", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nThread (<a href=\"https://developer.android.com/reference/java/lang/ThreadGroup.html\">ThreadGroup</a> group, \n                <a href=\"https://developer.android.com/reference/java/lang/Runnable.html\">Runnable</a> target, \n                <a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> name, \n                long stackSize)</pre>", "in_page_order": 15, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint activeCount ()</pre>", "in_page_order": 16, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid checkAccess ()</pre>", "in_page_order": 17, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint countStackFrames ()</pre>", "in_page_order": 18, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/Thread.html\">Thread</a> currentThread ()</pre>", "in_page_order": 19, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid destroy ()</pre>", "in_page_order": 20, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid dumpStack ()</pre>", "in_page_order": 21, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint enumerate (<a href=\"https://developer.android.com/reference/java/lang/Thread.html\">Thread[]</a> tarray)</pre>", "in_page_order": 22, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/util/Map.html\">Map</a>&lt;<a href=\"https://developer.android.com/reference/java/lang/Thread.html\">Thread</a>,\u00a0<a href=\"https://developer.android.com/reference/java/lang/StackTraceElement.html\">StackTraceElement[]</a>&gt; getAllStackTraces ()</pre>", "in_page_order": 23, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/ClassLoader.html\">ClassLoader</a> getContextClassLoader ()</pre>", "in_page_order": 24, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/Thread.UncaughtExceptionHandler.html\">Thread.UncaughtExceptionHandler</a> getDefaultUncaughtExceptionHandler ()</pre>", "in_page_order": 25, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nlong getId ()</pre>", "in_page_order": 26, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> getName ()</pre>", "in_page_order": 27, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nint getPriority ()</pre>", "in_page_order": 28, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/StackTraceElement.html\">StackTraceElement[]</a> getStackTrace ()</pre>", "in_page_order": 29, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/Thread.State.html\">Thread.State</a> getState ()</pre>", "in_page_order": 30, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/ThreadGroup.html\">ThreadGroup</a> getThreadGroup ()</pre>", "in_page_order": 31, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/Thread.UncaughtExceptionHandler.html\">Thread.UncaughtExceptionHandler</a> getUncaughtExceptionHandler ()</pre>", "in_page_order": 32, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nboolean holdsLock (<a href=\"https://developer.android.com/reference/java/lang/Object.html\">Object</a> obj)</pre>", "in_page_order": 33, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre>\n     assert Thread.holdsLock(obj);\n </pre>", "in_page_order": 34, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid interrupt ()</pre>", "in_page_order": 35, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nboolean interrupted ()</pre>", "in_page_order": 36, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nboolean isAlive ()</pre>", "in_page_order": 37, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nboolean isDaemon ()</pre>", "in_page_order": 38, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nboolean isInterrupted ()</pre>", "in_page_order": 39, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid join ()</pre>", "in_page_order": 40, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid join (long millis)</pre>", "in_page_order": 41, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid join (long millis, \n                int nanos)</pre>", "in_page_order": 42, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid resume ()</pre>", "in_page_order": 43, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid run ()</pre>", "in_page_order": 44, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid setContextClassLoader (<a href=\"https://developer.android.com/reference/java/lang/ClassLoader.html\">ClassLoader</a> cl)</pre>", "in_page_order": 45, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid setDaemon (boolean on)</pre>", "in_page_order": 46, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid setDefaultUncaughtExceptionHandler (<a href=\"https://developer.android.com/reference/java/lang/Thread.UncaughtExceptionHandler.html\">Thread.UncaughtExceptionHandler</a> eh)</pre>", "in_page_order": 47, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid setName (<a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> name)</pre>", "in_page_order": 48, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid setPriority (int newPriority)</pre>", "in_page_order": 49, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid setUncaughtExceptionHandler (<a href=\"https://developer.android.com/reference/java/lang/Thread.UncaughtExceptionHandler.html\">Thread.UncaughtExceptionHandler</a> eh)</pre>", "in_page_order": 50, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid sleep (long millis, \n                int nanos)</pre>", "in_page_order": 51, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid sleep (long millis)</pre>", "in_page_order": 52, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid start ()</pre>", "in_page_order": 53, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid stop ()</pre>", "in_page_order": 54, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid stop (<a href=\"https://developer.android.com/reference/java/lang/Throwable.html\">Throwable</a> obj)</pre>", "in_page_order": 55, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid suspend ()</pre>", "in_page_order": 56, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/String.html\">String</a> toString ()</pre>", "in_page_order": 57, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\nvoid yield ()</pre>", "in_page_order": 58, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"api-signature no-pretty-print\">\n<a href=\"https://developer.android.com/reference/java/lang/Object.html\">Object</a> clone ()</pre>", "in_page_order": 59, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "https://codereview.stackexchange.com/questions/123305/initialize-and-sum-an-array-in-java-using-threads", "url position": 29, "segments": [{"code": "public class Processor {\n\n    static volatile int numberOfValues = 17;\n    static double processedArray[];\n    static Thread threadsArray[];\n    static volatile int sum;\n    static Object lock1 = new Object();\n    static Object lock2 = new Object();\n", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "    private static void initializeArray() {\n        threadsArray = new Thread[numberOfValues];\n        processedArray = new double[numberOfValues];\n\n        for (int i = 0; i < threadsArray.length; i++) {\n            threadsArray[i] = new Thread(new Runnable() {\n                public void run() {\n                    synchronize(lock1) {\n                        processedArray[numberOfValues - 1] = numberOfValues;\n                        numberOfValues--;\n                    }\n\n                }   \n            });\n            threadsArray[i].start();\n        }\n", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "        for (int i = 0; i < threadsArray.length; i++) {\n            try {\n                threadsArray[i].join();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "        for (int i = 0; i < threadsArray.length; i++) {\n            threadsArray[i] = new Thread(new Runnable() {\n                public void run() {\n                    synchronize(lock2) {\n                        sum += processedArray[numberOfValues];\n                        numberOfValues++;\n                    }       \n\n                }   \n            });\n            threadsArray[i].start();\n        }\n", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "        for (int i = 0; i < threadsArray.length; i++) {\n            try {\n                threadsArray[i].join();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "    public static void main(String args[]) {\n        initializeArray();\n        for (int i = 0; i < threadsArray.length; i++) {\n            System.out.println(processedArray[i]);\n        }\n\n        System.out.println(\"Sum: \" + sum);\n    }\n}\n", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "     for (int i = 0; i < threadsArray.length; i++) {\n        threadsArray[i] = new Thread(new Runnable() {\n            public void run() {\n                synchronize(lock1) {\n                    processedArray[numberOfValues - 1] = numberOfValues;\n                    numberOfValues--;\n                }\n\n            }   \n        });\n        threadsArray[i].start();\n    }\n", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "static Object lock1 = new Object();\n", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "for (int i = 0; i < processedArray.length; i++) {\n    processedArray[i] = i;\n}\n", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "public void run() {\n    synchronize(lock1) {\n        processedArray[numberOfValues - 1] = numberOfValues;\n        numberOfValues--;\n    }\n}\n", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "static AtomicInteger numberOfValues = new AtomicInteger(17);\n", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "public void run() {\n    int index = numberOfValues.decrementAndGet();\n    processedArray[index] = index;\n}\n", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "for (int i = 0; i < threadsArray.length; i++) {\n    final int index = i;\n    threadsArray[i] = new Thread(new Runnable() {\n        @Override\n        public void run() {\n            processedArray[index] = index;\n        }\n    });\n}\n", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://realm.io/docs/java/latest/", "url position": 23, "segments": [{"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Define your model class by extending RealmObject</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">// ... Generated getters and setters ...</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@PrimaryKey</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">long</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span><span class=\"o\">;</span> <span class=\"c1\">// Declare one-to-many relationships</span>\n\n    <span class=\"c1\">// ... Generated getters and setters ...</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// Use them like regular java objects</span>\n<span class=\"n\">Dog</span> <span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Dog</span><span class=\"o\">();</span>\n<span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"Rex\"</span><span class=\"o\">);</span>\n<span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">setAge</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Initialize Realm (just once per application)</span>\n<span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">init</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Get a Realm instance for this thread</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Query Realm for all dogs younger than 2 years old</span>\n<span class=\"kd\">final</span> <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">puppies</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">lessThan</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"n\">puppies</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; 0 because no dogs have been added to the Realm yet</span>\n\n<span class=\"c1\">// Persist your data in a transaction</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"kd\">final</span> <span class=\"n\">Dog</span> <span class=\"n\">managedDog</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">copyToRealm</span><span class=\"o\">(</span><span class=\"n\">dog</span><span class=\"o\">);</span> <span class=\"c1\">// Persist unmanaged objects</span>\n<span class=\"n\">Person</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span> <span class=\"c1\">// Create managed objects directly</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"na\">getDogs</span><span class=\"o\">().</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">managedDog</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Listeners will be notified when data changes</span>\n<span class=\"n\">puppies</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OrderedRealmCollectionChangeListener</span><span class=\"o\">&lt;</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;&gt;()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span><span class=\"o\">,</span> <span class=\"n\">OrderedCollectionChangeSet</span> <span class=\"n\">changeSet</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Query results are updated in real time with fine grained notifications.</span>\n        <span class=\"n\">changeSet</span><span class=\"o\">.</span><span class=\"na\">getInsertions</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; [0] is added.</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n\n<span class=\"c1\">// Asynchronously update objects on a background thread</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransactionAsync</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">bgRealm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Dog</span> <span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"n\">bgRealm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n        <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">setAge</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">},</span> <span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">.</span><span class=\"na\">OnSuccess</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Original queries and Realm objects are automatically updated.</span>\n        <span class=\"n\">puppies</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; 0 because there are no more puppies younger than 2 years old</span>\n        <span class=\"n\">managedDog</span><span class=\"o\">.</span><span class=\"na\">getAge</span><span class=\"o\">();</span>   <span class=\"c1\">// =&gt; 3 the dogs age is updated</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">buildscript</span> <span class=\"o\">{</span>\n    <span class=\"n\">repositories</span> <span class=\"o\">{</span>\n        <span class=\"n\">jcenter</span><span class=\"o\">()</span>\n    <span class=\"o\">}</span>\n    <span class=\"n\">dependencies</span> <span class=\"o\">{</span>\n        <span class=\"n\">classpath</span> <span class=\"s2\">\"io.realm:realm-gradle-plugin:4.3.3\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">apply</span> <span class=\"nl\">plugin:</span> <span class=\"s1\">'realm-android'</span></code></pre>", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">realm</span> <span class=\"o\">{</span>\n  <span class=\"n\">syncEnabled</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">init</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">);</span></code></pre>", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyApplication</span> <span class=\"kd\">extends</span> <span class=\"n\">Application</span> <span class=\"o\">{</span>\n  <span class=\"nd\">@Override</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">();</span>\n    <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">init</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight xml\"><code><span class=\"nt\">&lt;application</span>\n  <span class=\"na\">android:name=</span><span class=\"s\">\".MyApplication\"</span>\n  <span class=\"err\">...</span>\n<span class=\"nt\">/&gt;</span></code></pre>", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Initialize Realm</span>\n<span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">init</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Get a Realm instance for this thread</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span></code></pre>", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">().</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// The RealmConfiguration is created using the builder pattern.</span>\n<span class=\"c1\">// The Realm file will be located in Context.getFilesDir() with name \"myrealm.realm\"</span>\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"myrealm.realm\"</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">encryptionKey</span><span class=\"o\">(</span><span class=\"n\">getKey</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">schemaVersion</span><span class=\"o\">(</span><span class=\"mi\">42</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MySchemaModule</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">migration</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyMigration</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"c1\">// Use the config</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span></code></pre>", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">myConfig</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"myrealm.realm\"</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">schemaVersion</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyCustomSchema</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">otherConfig</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"otherrealm.realm\"</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">schemaVersion</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyOtherSchema</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">Realm</span> <span class=\"n\">myRealm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">myConfig</span><span class=\"o\">);</span>\n<span class=\"n\">Realm</span> <span class=\"n\">otherRealm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">otherConfig</span><span class=\"o\">);</span></code></pre>", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyApplication</span> <span class=\"kd\">extends</span> <span class=\"n\">Application</span> <span class=\"o\">{</span>\n  <span class=\"nd\">@Override</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">();</span>\n    <span class=\"c1\">// The default Realm file is \"default.realm\" in Context.getFilesDir();</span>\n    <span class=\"c1\">// we'll change it to \"myrealm.realm\"</span>\n    <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">init</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">);</span>\n    <span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">().</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"myrealm.realm\"</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n    <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">setDefaultConfiguration</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyActivity</span> <span class=\"kd\">extends</span> <span class=\"n\">Activity</span> <span class=\"o\">{</span>\n  <span class=\"nd\">@Override</span>\n  <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">savedInstanceState</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">(</span><span class=\"n\">savedInstanceState</span><span class=\"o\">);</span>\n    <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span> <span class=\"c1\">// opens \"myrealm.realm\"</span>\n    <span class=\"k\">try</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// ... Do something ...</span>\n    <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n      <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncCredentials</span> <span class=\"n\">myCredentials</span> <span class=\"o\">=</span> <span class=\"n\">SyncCredentials</span><span class=\"o\">.</span><span class=\"na\">usernamePassword</span><span class=\"o\">(</span><span class=\"s\">\"bob\"</span><span class=\"o\">,</span> <span class=\"s\">\"greatpassword\"</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">SyncUser</span><span class=\"o\">.</span><span class=\"na\">login</span><span class=\"o\">(</span><span class=\"n\">myCredentials</span><span class=\"o\">,</span> <span class=\"n\">serverUrl</span><span class=\"o\">());</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">realmUrl</span><span class=\"o\">())</span>\n    <span class=\"o\">.</span><span class=\"na\">schemaVersion</span><span class=\"o\">(</span><span class=\"n\">SCHEMA_VERSION</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"c1\">// Use the config</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span></code></pre>", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">schema</span><span class=\"o\">(</span><span class=\"mi\">42</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">migration</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyMigration</span><span class=\"o\">())</span> <span class=\"c1\">// Potentially lengthy migration</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">RealmAsyncTask</span> <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstanceAsync</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Callback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Realm is opened and ready on the caller thread.</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">getUser</span><span class=\"o\">();</span>\n<span class=\"n\">String</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">getUrl</span><span class=\"o\">();</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">url</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">waitForRemoteInitialData</span><span class=\"o\">();</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">RealmAsyncTask</span> <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstanceAsync</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Callback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Realm is now downloaded and ready. New changes to Realm will continue</span>\n        <span class=\"c1\">// to be synchronized in the background as normal.</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 15, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">assetFile</span><span class=\"o\">(</span><span class=\"s\">\"my.realm\"</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">readOnly</span><span class=\"o\">()</span>\n    <span class=\"c1\">// It is optional, but recommended to create a module that describes the classes</span>\n    <span class=\"c1\">// found in your bundled file. Otherwise if your app contains other classes</span>\n    <span class=\"c1\">// than those found in the file, it will crash when opening the Realm as the</span>\n    <span class=\"c1\">// schema cannot be updated in read-only mode.</span>\n    <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">BundledRealmModule</span><span class=\"o\">())</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 16, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">getUser</span><span class=\"o\">();</span>\n<span class=\"n\">String</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">getUrl</span><span class=\"o\">();</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">url</span><span class=\"o\">)</span>\n    <span class=\"c1\">// Similar to `assetFile` for local Realms, but it will fetch all remote</span>\n    <span class=\"c1\">// data before from the server prior to opening the Realm.</span>\n    <span class=\"o\">.</span><span class=\"na\">waitForRemoteInitialData</span><span class=\"o\">();</span>\n    <span class=\"o\">.</span><span class=\"na\">readOnly</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">BundledRealmModule</span><span class=\"o\">())</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">RealmAsyncTask</span> <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstanceAsync</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Callback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Realm is now downloaded and ready. It is readonly locally but will</span>\n        <span class=\"c1\">// still see new changes coming from the server.</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 17, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">myConfig</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"myrealm.realm\"</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">inMemory</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 18, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">realmConfig</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">().</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"n\">DynamicRealm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">DynamicRealm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">realmConfig</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// In a DynamicRealm all objects are DynamicRealmObjects</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">DynamicRealmObject</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"s\">\"Person\"</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// All fields are accessed using strings</span>\n<span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">);</span>\n<span class=\"kt\">int</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"na\">getInt</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// An underlying schema still exists, so accessing a field that does not exist</span>\n<span class=\"c1\">// will throw an exception</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"s\">\"I don't exist\"</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Queries still work normally</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">DynamicRealmObject</span><span class=\"o\">&gt;</span> <span class=\"n\">persons</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"s\">\"Person\"</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"John\"</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 19, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyThread</span> <span class=\"kd\">extends</span> <span class=\"n\">Thread</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">run</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"n\">Looper</span><span class=\"o\">.</span><span class=\"na\">prepare</span><span class=\"o\">();</span>\n        <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"c1\">//... Setup the handlers using the Realm instance ...</span>\n            <span class=\"n\">Looper</span><span class=\"o\">.</span><span class=\"na\">loop</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 20, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">protected</span> <span class=\"n\">Void</span> <span class=\"nf\">doInBackground</span><span class=\"o\">(</span><span class=\"n\">Void</span><span class=\"o\">...</span> <span class=\"n\">params</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n    <span class=\"k\">try</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// ... Use the Realm instance ...</span>\n    <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n        <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 21, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Run a non-Looper thread with a Realm instance.</span>\n<span class=\"n\">Thread</span> <span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Thread</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Runnable</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">run</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// ... Use the Realm instance ...</span>\n        <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n\n<span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"na\">start</span><span class=\"o\">();</span></code></pre>", "in_page_order": 22, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// No need to close the Realm instance manually</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 23, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">String</span>          <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span>             <span class=\"n\">age</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Ignore</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span>             <span class=\"n\">sessionId</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">// Standard getters &amp; setters generated by your IDE\u2026</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setName</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span>    <span class=\"nf\">getAge</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">age</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setAge</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span>    <span class=\"nf\">getSessionId</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">sessionId</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setSessionId</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">sessionId</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">sessionId</span> <span class=\"o\">=</span> <span class=\"n\">sessionId</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 24, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">hasLongName</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n      <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">7</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">equals</span><span class=\"o\">(</span><span class=\"n\">Object</span> <span class=\"n\">o</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// Custom equals comparison</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 25, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">final</span> <span class=\"n\">MyObject</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyObject</span><span class=\"o\">();</span>\n<span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">setId</span><span class=\"o\">(</span><span class=\"mi\">42</span><span class=\"o\">);</span>\n<span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"Fish\"</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// This will create a new object in Realm or throw an exception if the</span>\n        <span class=\"c1\">// object already exists (same primary key)</span>\n        <span class=\"c1\">// realm.copyToRealm(obj);</span>\n\n        <span class=\"c1\">// This will update an existing object with the same primary key</span>\n        <span class=\"c1\">// or create a new object if an object with no primary key = 42</span>\n        <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">copyToRealmOrUpdate</span><span class=\"o\">(</span><span class=\"n\">obj</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 26, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Party</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">final</span> <span class=\"n\">MutableRealmInteger</span> <span class=\"n\">guests</span> <span class=\"o\">=</span> <span class=\"n\">MutableRealmInteger</span><span class=\"o\">.</span><span class=\"na\">valueOf</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 27, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">Party</span> <span class=\"n\">party</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Party</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">party</span><span class=\"o\">.</span><span class=\"na\">guests</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">();</span> <span class=\"c1\">// 0</span>\n<span class=\"n\">party</span><span class=\"o\">.</span><span class=\"na\">guests</span><span class=\"o\">.</span><span class=\"na\">increment</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span> <span class=\"c1\">// 1</span>\n<span class=\"n\">party</span><span class=\"o\">.</span><span class=\"na\">guests</span><span class=\"o\">.</span><span class=\"na\">decrement</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span> <span class=\"c1\">// 0</span>\n<span class=\"n\">party</span><span class=\"o\">.</span><span class=\"na\">guests</span><span class=\"o\">.</span><span class=\"na\">increment</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">);</span> <span class=\"c1\">// 1</span>\n<span class=\"n\">party</span><span class=\"o\">.</span><span class=\"na\">guests</span><span class=\"o\">.</span><span class=\"na\">decrement</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span> <span class=\"c1\">// 4</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 28, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">Party</span> <span class=\"n\">party</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Party</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">party</span><span class=\"o\">.</span><span class=\"na\">guests</span><span class=\"o\">.</span><span class=\"na\">set</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 29, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Dog</span> <span class=\"n\">myDog</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">myDog</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"Fido\"</span><span class=\"o\">);</span>\n        <span class=\"n\">myDog</span><span class=\"o\">.</span><span class=\"na\">setAge</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n<span class=\"n\">Dog</span> <span class=\"n\">myDog</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Dog</span> <span class=\"n\">myPuppy</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n        <span class=\"n\">myPuppy</span><span class=\"o\">.</span><span class=\"na\">setAge</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n\n<span class=\"n\">myDog</span><span class=\"o\">.</span><span class=\"na\">getAge</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; 2</span></code></pre>", "in_page_order": 30, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 31, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Overrride</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Dog</span> <span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"Fido\"</span><span class=\"o\">;</span>\n        <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">age</span>  <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span></code></pre>", "in_page_order": 32, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"nd\">@RealmClass</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">implements</span> <span class=\"n\">RealmModel</span> <span class=\"o\">{</span>\n\n<span class=\"o\">}</span></code></pre>", "in_page_order": 33, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// With RealmObject</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">isValid</span><span class=\"o\">();</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"n\">listener</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// With RealmModel</span>\n<span class=\"n\">RealmObject</span><span class=\"o\">.</span><span class=\"na\">isValid</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">);</span>\n<span class=\"n\">RealmObject</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">listener</span><span class=\"o\">);</span></code></pre>", "in_page_order": 34, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// A RealmObject that represents a city</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">City</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">city</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n    <span class=\"c1\">// getters and setters left out ...</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// Insert from a string</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObjectFromJson</span><span class=\"o\">(</span><span class=\"n\">City</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"s\">\"{ city: \\\"Copenhagen\\\", id: 1 }\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n\n<span class=\"c1\">// Insert multiple items using an InputStream</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"n\">InputStream</span> <span class=\"n\">is</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">FileInputStream</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">File</span><span class=\"o\">(</span><span class=\"s\">\"path_to_file\"</span><span class=\"o\">));</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createAllFromJson</span><span class=\"o\">(</span><span class=\"n\">City</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">is</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">IOException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">RuntimeException</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 35, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">dependencies</span> <span class=\"o\">{</span>\n    <span class=\"n\">compile</span> <span class=\"s1\">'io.realm:android-adapters:2.1.1'</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 36, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Assuming we had a person class with a @PrimaryKey on the 'id' field ...</span>\n<span class=\"n\">Intent</span> <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Intent</span><span class=\"o\">(</span><span class=\"n\">getActivity</span><span class=\"o\">(),</span> <span class=\"n\">ReceivingService</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n<span class=\"n\">intent</span><span class=\"o\">.</span><span class=\"na\">putExtra</span><span class=\"o\">(</span><span class=\"s\">\"person_id\"</span><span class=\"o\">,</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"na\">getId</span><span class=\"o\">());</span>\n<span class=\"n\">getActivity</span><span class=\"o\">().</span><span class=\"na\">startService</span><span class=\"o\">(</span><span class=\"n\">intent</span><span class=\"o\">);</span></code></pre>", "in_page_order": 37, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// in onCreate(), onHandleIntent(), etc.</span>\n<span class=\"n\">String</span> <span class=\"n\">personId</span> <span class=\"o\">=</span> <span class=\"n\">intent</span><span class=\"o\">.</span><span class=\"na\">getStringExtra</span><span class=\"o\">(</span><span class=\"s\">\"person_id\"</span><span class=\"o\">);</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n<span class=\"k\">try</span> <span class=\"o\">{</span>\n    <span class=\"n\">Person</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"id\"</span><span class=\"o\">,</span> <span class=\"n\">personId</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n    <span class=\"c1\">// do something with the person ...</span>\n<span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n    <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 38, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Email</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">address</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">boolean</span> <span class=\"n\">active</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Contact</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Email</span> <span class=\"n\">email</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">Contact</span> <span class=\"n\">bob</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Contact</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n<span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"Bob Newhart\"</span><span class=\"o\">;</span>\n\n<span class=\"n\">Email</span> <span class=\"n\">email1</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Email</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n<span class=\"n\">email1</span><span class=\"o\">.</span><span class=\"na\">address</span> <span class=\"o\">=</span> <span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"3c5e535e7c59445d514c5059125f5351\">[email\u00a0protected]</a>\"</span><span class=\"o\">;</span>\n\n<span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"na\">email</span> <span class=\"o\">=</span> <span class=\"n\">email1</span><span class=\"o\">;</span></code></pre>", "in_page_order": 39, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"na\">email</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span></code></pre>", "in_page_order": 40, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Contact</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">public</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Email</span><span class=\"o\">&gt;</span> <span class=\"n\">emails</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Email</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">address</span><span class=\"o\">;</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"n\">active</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 41, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Contact</span> <span class=\"n\">contact</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Contact</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">contact</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"John Doe\"</span><span class=\"o\">;</span>\n\n        <span class=\"n\">Email</span> <span class=\"n\">email1</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Email</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">email1</span><span class=\"o\">.</span><span class=\"na\">address</span> <span class=\"o\">=</span> <span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"92f8fdfafcd2f7eaf3ffe2fef7bcf1fdff\">[email\u00a0protected]</a>\"</span><span class=\"o\">;</span>\n        <span class=\"n\">email1</span><span class=\"o\">.</span><span class=\"na\">active</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n        <span class=\"n\">contact</span><span class=\"o\">.</span><span class=\"na\">emails</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">email1</span><span class=\"o\">);</span>\n\n        <span class=\"n\">Email</span> <span class=\"n\">email2</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Email</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">email2</span><span class=\"o\">.</span><span class=\"na\">address</span> <span class=\"o\">=</span> <span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"02686642677a636f726e672c616d6f\">[email\u00a0protected]</a>\"</span><span class=\"o\">;</span>\n        <span class=\"n\">email2</span><span class=\"o\">.</span><span class=\"na\">active</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n        <span class=\"n\">contact</span><span class=\"o\">.</span><span class=\"na\">emails</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">email2</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 42, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">public</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">friends</span><span class=\"o\">;</span>\n    <span class=\"c1\">// Other fields...</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 43, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@PrimaryKey</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">long</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 44, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getters and setters</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">color</span><span class=\"o\">;</span>\n  <span class=\"nd\">@LinkingObjects</span><span class=\"o\">(</span><span class=\"s\">\"dogs\"</span><span class=\"o\">)</span>\n  <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">owners</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getters and setters</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 45, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">public</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;&gt;();</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 46, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"nd\">@Required</span>\n  <span class=\"kd\">public</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;&gt;();</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 47, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Model classes</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RealmString</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">value</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"nd\">@Required</span>\n  <span class=\"kd\">public</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;&gt;();</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// Migration code</span>\n<span class=\"n\">RealmObjectSchema</span> <span class=\"n\">objSchema</span> <span class=\"o\">=</span> <span class=\"n\">realmSchema</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"Person\"</span><span class=\"o\">);</span>\n<span class=\"n\">objSchema</span><span class=\"o\">.</span><span class=\"na\">addRealmListField</span><span class=\"o\">(</span><span class=\"s\">\"children_tmp\"</span><span class=\"o\">,</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n        <span class=\"o\">.</span><span class=\"na\">setRequired</span><span class=\"o\">(</span><span class=\"s\">\"children_tmp\"</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">)</span>\n        <span class=\"o\">.</span><span class=\"na\">transform</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">RealmObjectSchema</span><span class=\"o\">.</span><span class=\"na\">Function</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">apply</span><span class=\"o\">(</span><span class=\"n\">DynamicRealmObject</span> <span class=\"n\">obj</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">DynamicRealmObject</span><span class=\"o\">&gt;</span> <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">(</span><span class=\"s\">\"children\"</span><span class=\"o\">);</span>\n                <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">migratedChildren</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">(</span><span class=\"s\">\"children_tmp\"</span><span class=\"o\">,</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n                <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">DynamicRealmObject</span> <span class=\"n\">child</span> <span class=\"o\">:</span> <span class=\"n\">children</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"n\">migratedChildren</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">child</span><span class=\"o\">.</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"s\">\"value\"</span><span class=\"o\">));</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">})</span>\n        <span class=\"o\">.</span><span class=\"na\">removeField</span><span class=\"o\">(</span><span class=\"s\">\"children\"</span><span class=\"o\">)</span>\n        <span class=\"o\">.</span><span class=\"na\">renameField</span><span class=\"o\">(</span><span class=\"s\">\"children_tmp\"</span><span class=\"o\">,</span> <span class=\"s\">\"children\"</span><span class=\"o\">);</span></code></pre>", "in_page_order": 48, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Create the module</span>\n<span class=\"nd\">@RealmModule</span><span class=\"o\">(</span><span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"o\">{</span> <span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span> <span class=\"o\">})</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyModule</span> <span class=\"o\">{</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// Set the module in the RealmConfiguration to allow only classes defined by the module.</span>\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyModule</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// It is possible to combine multiple modules to one schema.</span>\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyModule</span><span class=\"o\">(),</span> <span class=\"k\">new</span> <span class=\"n\">MyOtherModule</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 49, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// A library must create a module and set library = true. This will prevent the default</span>\n<span class=\"c1\">// module from being created.</span>\n<span class=\"c1\">// allClasses = true can be used instead of listing all classes in the library.</span>\n<span class=\"nd\">@RealmModule</span><span class=\"o\">(</span><span class=\"n\">library</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">,</span> <span class=\"n\">allClasses</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">)</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyLibraryModule</span> <span class=\"o\">{</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// Library projects are therefore required to explicitly set their own module.</span>\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">libraryConfig</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"library.realm\"</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyLibraryModule</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Apps can add the library RealmModule to their own schema.</span>\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"app.realm\"</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultModule</span><span class=\"o\">(),</span> <span class=\"k\">new</span> <span class=\"n\">MyLibraryModule</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 50, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Obtain a Realm instance</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n\n<span class=\"c1\">//... add or update objects here ...</span>\n\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 51, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n\n<span class=\"c1\">//  ...</span>\n\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">cancelTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 52, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span> <span class=\"c1\">// Create a new object</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setEmail</span><span class=\"o\">(</span><span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"0862676066486b677a78677a697c616766266b6765\">[email\u00a0protected]</a>\"</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 53, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">User</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setEmail</span><span class=\"o\">(</span><span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"660c090e082605091416091407120f09084805090b\">[email\u00a0protected]</a>\"</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Copy the object to Realm. Any further changes must happen on realmUser</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">User</span> <span class=\"n\">realmUser</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">copyToRealm</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 54, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">asList</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">User</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">),</span> <span class=\"k\">new</span> <span class=\"n\">User</span><span class=\"o\">(</span><span class=\"s\">\"Jane\"</span><span class=\"o\">));</span>\n\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">insert</span><span class=\"o\">(</span><span class=\"n\">users</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 55, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n        <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setEmail</span><span class=\"o\">(</span><span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"157f7a7d7b55767a67657a6774617c7a7b3b767a78\">[email\u00a0protected]</a>\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 56, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransactionAsync</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">bgRealm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">bgRealm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n                <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n                <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setEmail</span><span class=\"o\">(</span><span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"8fe5e0e7e1cfece0fdffe0fdeefbe6e0e1a1ece0e2\">[email\u00a0protected]</a>\"</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">},</span> <span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">.</span><span class=\"na\">OnSuccess</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n                <span class=\"c1\">// Transaction was a success.</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">},</span> <span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">.</span><span class=\"na\">OnError</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">Throwable</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"c1\">// Transaction failed and was automatically canceled.</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span></code></pre>", "in_page_order": 57, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmAsyncTask</span> <span class=\"n\">transaction</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransactionAsync</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">bgRealm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">bgRealm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n                <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n                <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">setEmail</span><span class=\"o\">(</span><span class=\"s\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"6a000502042a0905181a05180b1e03050444090507\">[email\u00a0protected]</a>\"</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">},</span> <span class=\"kc\">null</span><span class=\"o\">);</span></code></pre>", "in_page_order": 58, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onStop</span> <span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">transaction</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"na\">isCancelled</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n        <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"na\">cancel</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 59, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">bytes</span><span class=\"o\">[]</span> <span class=\"n\">bytes</span> <span class=\"o\">=</span> <span class=\"n\">realmObject</span><span class=\"o\">.</span><span class=\"na\">binary</span><span class=\"o\">;</span>\n        <span class=\"n\">bytes</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"sc\">'a'</span><span class=\"o\">;</span>\n        <span class=\"n\">realmObject</span><span class=\"o\">.</span><span class=\"na\">binary</span> <span class=\"o\">=</span> <span class=\"n\">bytes</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 60, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n\n    <span class=\"nd\">@PrimaryKey</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span>          <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span>             <span class=\"n\">age</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Ignore</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span>             <span class=\"n\">sessionId</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">// Standard getters &amp; setters generated by your IDE\u2026</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setName</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span>    <span class=\"nf\">getAge</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">age</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setAge</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span>    <span class=\"nf\">getSessionId</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">sessionId</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setSessionId</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">sessionId</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">sessionId</span> <span class=\"o\">=</span> <span class=\"n\">sessionId</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 61, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Build the query looking at all users:</span>\n<span class=\"n\">RealmQuery</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Add query conditions:</span>\n<span class=\"n\">query</span><span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n<span class=\"n\">query</span><span class=\"o\">.</span><span class=\"na\">or</span><span class=\"o\">().</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Peter\"</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Execute the query:</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result1</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Or alternatively do the same all at once (the \"Fluent interface\"):</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result2</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                                  <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"John\"</span><span class=\"o\">)</span>\n                                  <span class=\"o\">.</span><span class=\"na\">or</span><span class=\"o\">()</span>\n                                  <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Peter\"</span><span class=\"o\">)</span>\n                                  <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 62, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n\n    <span class=\"nd\">@PrimaryKey</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span>          <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span>             <span class=\"n\">age</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Ignore</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span>             <span class=\"n\">sessionId</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">// Standard getters &amp; setters generated by your IDE\u2026</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setName</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span>    <span class=\"nf\">getAge</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">age</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setAge</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span>    <span class=\"nf\">getSessionId</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">sessionId</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span>   <span class=\"nf\">setSessionId</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">sessionId</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">sessionId</span> <span class=\"o\">=</span> <span class=\"n\">sessionId</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 63, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                            <span class=\"o\">.</span><span class=\"na\">greaterThan</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">)</span>  <span class=\"c1\">// implicit AND</span>\n                            <span class=\"o\">.</span><span class=\"na\">beginGroup</span><span class=\"o\">()</span>\n                                <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Peter\"</span><span class=\"o\">)</span>\n                                <span class=\"o\">.</span><span class=\"na\">or</span><span class=\"o\">()</span>\n                                <span class=\"o\">.</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Jo\"</span><span class=\"o\">)</span>\n                            <span class=\"o\">.</span><span class=\"na\">endGroup</span><span class=\"o\">()</span>\n                            <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 64, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                           <span class=\"o\">.</span><span class=\"na\">not</span><span class=\"o\">()</span>\n                           <span class=\"o\">.</span><span class=\"na\">beginGroup</span><span class=\"o\">()</span>\n                                <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Peter\"</span><span class=\"o\">)</span>\n                                <span class=\"o\">.</span><span class=\"na\">or</span><span class=\"o\">()</span>\n                                <span class=\"o\">.</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Jo\"</span><span class=\"o\">)</span>\n                            <span class=\"o\">.</span><span class=\"na\">endGroup</span><span class=\"o\">()</span>\n                            <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 65, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                           <span class=\"o\">.</span><span class=\"na\">not</span><span class=\"o\">()</span>\n                           <span class=\"o\">.</span><span class=\"na\">in</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">String</span><span class=\"o\">[]{</span><span class=\"s\">\"Peter\"</span><span class=\"o\">,</span> <span class=\"s\">\"Jo\"</span><span class=\"o\">})</span>\n                           <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 66, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">sort</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 67, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">sort</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">);</span> <span class=\"c1\">// Sort ascending</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">sort</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"n\">Sort</span><span class=\"o\">.</span><span class=\"na\">DESCENDING</span><span class=\"o\">);</span></code></pre>", "in_page_order": 68, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">unique</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">distinct</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 69, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">teenagers</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">between</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">13</span><span class=\"o\">,</span> <span class=\"mi\">20</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"n\">Person</span> <span class=\"n\">firstJohn</span> <span class=\"o\">=</span> <span class=\"n\">teenagers</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">().</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"John\"</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span></code></pre>", "in_page_order": 70, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n    <span class=\"c1\">// getters &amp; setters ...</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span><span class=\"o\">;</span>\n    <span class=\"c1\">// getters &amp; setters ...</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 71, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">teensWithPups</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">between</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">13</span><span class=\"o\">,</span> <span class=\"mi\">20</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.age\"</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 72, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getters and setters</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">color</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getters and setters</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 73, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// persons =&gt; [U1,U2]</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">persons</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                                <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Brown\"</span><span class=\"o\">)</span>\n                                <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 74, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">persons</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">getDogs</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; [A,B]</span>\n<span class=\"n\">persons</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">getDogs</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; [B,C,D]</span></code></pre>", "in_page_order": 75, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// r1 =&gt; [U1,U2]</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">r1</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Fluffy\"</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Brown\"</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// r2 =&gt; [U2]</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">r2</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Fluffy\"</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">()</span>\n                             <span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">()</span>\n                             <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Brown\"</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">()</span>\n                             <span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">()</span>\n                             <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Yellow\"</span><span class=\"o\">)</span>\n                             <span class=\"o\">.</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 76, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">set1</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Fluffy\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">set2</span> <span class=\"o\">=</span> <span class=\"n\">set1</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Brown\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">set3</span> <span class=\"o\">=</span> <span class=\"n\">set2</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"dogs.color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Brown\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 77, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">brownFluffies</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"color\"</span><span class=\"o\">,</span> <span class=\"s\">\"Brown\"</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Fluffy\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Dog</span> <span class=\"n\">brownFluffy</span> <span class=\"o\">:</span> <span class=\"n\">brownFluffies</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">owners</span> <span class=\"o\">=</span> <span class=\"n\">brownFluffy</span><span class=\"o\">.</span><span class=\"na\">getOwners</span><span class=\"o\">();</span>\n    <span class=\"c1\">// ...</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 78, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"persons.name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Jane\"</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span></code></pre>", "in_page_order": 79, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">final</span> <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">puppies</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">lessThan</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"n\">puppies</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; 0</span>\n\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kt\">void</span> <span class=\"kd\">public</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Dog</span> <span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObject</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"Fido\"</span><span class=\"o\">);</span>\n        <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">setAge</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n\n<span class=\"n\">puppies</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">RealmChangeListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// results and puppies point are both up to date</span>\n      <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; 1</span>\n      <span class=\"n\">puppies</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"c1\">// =&gt; 1</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 80, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"kt\">long</span>   <span class=\"n\">sum</span>     <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">sum</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">).</span><span class=\"na\">longValue</span><span class=\"o\">();</span>\n<span class=\"kt\">long</span>   <span class=\"n\">min</span>     <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">min</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">).</span><span class=\"na\">longValue</span><span class=\"o\">();</span>\n<span class=\"kt\">long</span>   <span class=\"n\">max</span>     <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">max</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">).</span><span class=\"na\">longValue</span><span class=\"o\">();</span>\n<span class=\"kt\">double</span> <span class=\"n\">average</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">average</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">);</span>\n\n<span class=\"kt\">long</span>   <span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span></code></pre>", "in_page_order": 81, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">guests</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"invited\"</span><span class=\"o\">,</span> <span class=\"kc\">false</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">guests</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n    <span class=\"n\">guests</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">).</span><span class=\"na\">setInvited</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 82, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">guests</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"invited\"</span><span class=\"o\">,</span> <span class=\"kc\">false</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Use an iterator to invite all guests</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Person</span> <span class=\"n\">guest</span> <span class=\"o\">:</span> <span class=\"n\">guests</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">guest</span><span class=\"o\">.</span><span class=\"na\">setInvited</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Use a snapshot to invite all guests</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">OrderedRealmCollectionSnapshot</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">guestsSnapshot</span> <span class=\"o\">=</span> <span class=\"n\">guests</span><span class=\"o\">.</span><span class=\"na\">createSnapshot</span><span class=\"o\">();</span>\n<span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">guestsSnapshot</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">();</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n    <span class=\"n\">guestsSnapshot</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">).</span><span class=\"na\">setInvited</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 83, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// obtain the results of a query</span>\n<span class=\"kd\">final</span> <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findAll</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// All changes to data must happen in a transaction</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">executeTransaction</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">Transaction</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// remove single match</span>\n        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">deleteFirstFromRealm</span><span class=\"o\">();</span>\n        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">deleteLastFromRealm</span><span class=\"o\">();</span>\n\n        <span class=\"c1\">// remove a single object</span>\n        <span class=\"n\">Dog</span> <span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">);</span>\n        <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"na\">deleteFromRealm</span><span class=\"o\">();</span>\n\n        <span class=\"c1\">// Delete all matches</span>\n        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">deleteAllFromRealm</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 84, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n                              <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"John\"</span><span class=\"o\">)</span>\n                              <span class=\"o\">.</span><span class=\"na\">or</span><span class=\"o\">()</span>\n                              <span class=\"o\">.</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"s\">\"Peter\"</span><span class=\"o\">)</span>\n                              <span class=\"o\">.</span><span class=\"na\">findAllAsync</span><span class=\"o\">();</span></code></pre>", "in_page_order": 85, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">private</span> <span class=\"n\">OrderedRealmCollectionChangeListener</span><span class=\"o\">&lt;</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">OrderedRealmCollectionChangeListener</span><span class=\"o\">&lt;&gt;()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span><span class=\"o\">,</span> <span class=\"n\">OrderedCollectionChangeSet</span> <span class=\"n\">changeSet</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">changeSet</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// The first time async returns with an null changeSet.</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// Called on every update.</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span>\n\n<span class=\"kd\">private</span> <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onStart</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findAllAsync</span><span class=\"o\">();</span>\n    <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"n\">callback</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 86, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onStop</span> <span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">removeChangeListener</span><span class=\"o\">(</span><span class=\"n\">callback</span><span class=\"o\">);</span> <span class=\"c1\">// remove a particular listener</span>\n    <span class=\"c1\">// or</span>\n    <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">removeAllChangeListeners</span><span class=\"o\">();</span> <span class=\"c1\">// remove all registered listeners</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 87, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findAllAsync</span><span class=\"o\">();</span>\n<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">isLoaded</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n  <span class=\"c1\">// Results are now available</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 88, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">User</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findAllAsync</span><span class=\"o\">();</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">load</span><span class=\"o\">()</span> <span class=\"c1\">// be careful, this will block the current thread until it returns</span></code></pre>", "in_page_order": 89, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">schemaVersion</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"c1\">// Must be bumped when the schema changes</span>\n    <span class=\"o\">.</span><span class=\"na\">migration</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyMigration</span><span class=\"o\">())</span> <span class=\"c1\">// Migration to run instead of throwing an exception</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">()</span></code></pre>", "in_page_order": 90, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Example migration adding a new class</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyMigration</span> <span class=\"kd\">implements</span> <span class=\"n\">RealmMigration</span> <span class=\"o\">{</span>\n  <span class=\"nd\">@Override</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">migrate</span><span class=\"o\">(</span><span class=\"n\">DynamicRealm</span> <span class=\"n\">realm</span><span class=\"o\">,</span> <span class=\"kt\">long</span> <span class=\"n\">oldVersion</span><span class=\"o\">,</span> <span class=\"kt\">long</span> <span class=\"n\">newVersion</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\n     <span class=\"c1\">// DynamicRealm exposes an editable schema</span>\n     <span class=\"n\">RealmSchema</span> <span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">getSchema</span><span class=\"o\">();</span>\n\n     <span class=\"c1\">// Migrate to version 1: Add a new class.</span>\n     <span class=\"c1\">// Example:</span>\n     <span class=\"c1\">// public Person extends RealmObject {</span>\n     <span class=\"c1\">//     private String name;</span>\n     <span class=\"c1\">//     private int age;</span>\n     <span class=\"c1\">//     // getters and setters left out for brevity</span>\n     <span class=\"c1\">// }</span>\n     <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">oldVersion</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"na\">create</span><span class=\"o\">(</span><span class=\"s\">\"Person\"</span><span class=\"o\">)</span>\n            <span class=\"o\">.</span><span class=\"na\">addField</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">,</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n            <span class=\"o\">.</span><span class=\"na\">addField</span><span class=\"o\">(</span><span class=\"s\">\"age\"</span><span class=\"o\">,</span> <span class=\"kt\">int</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">oldVersion</span><span class=\"o\">++;</span>\n     <span class=\"o\">}</span>\n\n     <span class=\"c1\">// Migrate to version 2: Add a primary key + object references</span>\n     <span class=\"c1\">// Example:</span>\n     <span class=\"c1\">// public Person extends RealmObject {</span>\n     <span class=\"c1\">//     private String name;</span>\n     <span class=\"c1\">//     @PrimaryKey</span>\n     <span class=\"c1\">//     private int age;</span>\n     <span class=\"c1\">//     private Dog favoriteDog;</span>\n     <span class=\"c1\">//     private RealmList&lt;Dog&gt; dogs;</span>\n     <span class=\"c1\">//     // getters and setters left out for brevity</span>\n     <span class=\"c1\">// }</span>\n     <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">oldVersion</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"Person\"</span><span class=\"o\">)</span>\n            <span class=\"o\">.</span><span class=\"na\">addField</span><span class=\"o\">(</span><span class=\"s\">\"id\"</span><span class=\"o\">,</span> <span class=\"kt\">long</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">FieldAttribute</span><span class=\"o\">.</span><span class=\"na\">PRIMARY_KEY</span><span class=\"o\">)</span>\n            <span class=\"o\">.</span><span class=\"na\">addRealmObjectField</span><span class=\"o\">(</span><span class=\"s\">\"favoriteDog\"</span><span class=\"o\">,</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"Dog\"</span><span class=\"o\">))</span>\n            <span class=\"o\">.</span><span class=\"na\">addRealmListField</span><span class=\"o\">(</span><span class=\"s\">\"dogs\"</span><span class=\"o\">,</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"Dog\"</span><span class=\"o\">));</span>\n        <span class=\"n\">oldVersion</span><span class=\"o\">++;</span>\n     <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 91, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">deleteRealmIfMigrationNeeded</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">()</span></code></pre>", "in_page_order": 92, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 93, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">Person</span> <span class=\"n\">owner</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getter / setter</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">Date</span> <span class=\"n\">birthdate</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getter / setter</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">String</span> <span class=\"n\">syncServerURL</span> <span class=\"o\">=</span> <span class=\"s\">\"realm://localhost:9080/Dogs\"</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">syncServerURL</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span></code></pre>", "in_page_order": 94, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"n\">Person</span> <span class=\"n\">owner</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getter / setter</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getter / setter</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">DogV2</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n  <span class=\"c1\">// getter / setter</span>\n<span class=\"o\">}</span>\n\n<span class=\"nd\">@RealmModule</span><span class=\"o\">(</span><span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"o\">{</span> <span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"na\">class</span> <span class=\"o\">})</span> <span class=\"kd\">class</span> <span class=\"nc\">InitialModule</span> <span class=\"o\">{}</span>\n\n<span class=\"n\">String</span> <span class=\"n\">syncServerURL</span> <span class=\"o\">=</span> <span class=\"s\">\"realm://localhost:9080/Dogs\"</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">syncServerURL</span><span class=\"o\">)</span>\n              <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">InitialModule</span><span class=\"o\">())</span>\n              <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"c1\">// Limit to initial object type</span>\n<span class=\"n\">Realm</span> <span class=\"n\">initialRealm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span>\n\n\n\n<span class=\"nd\">@RealmModule</span><span class=\"o\">(</span><span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"o\">{</span> <span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">DogV2</span><span class=\"o\">.</span><span class=\"na\">class</span> <span class=\"o\">})</span> <span class=\"kd\">class</span> <span class=\"nc\">NewModule</span> <span class=\"o\">{}</span>\n\n<span class=\"n\">String</span> <span class=\"n\">syncServerURL</span> <span class=\"o\">=</span> <span class=\"s\">\"realm://localhost:9080/Dogs\"</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">syncServerURL</span><span class=\"o\">)</span>\n              <span class=\"o\">.</span><span class=\"na\">modules</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">NewModule</span><span class=\"o\">())</span>\n              <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"c1\">// Limit to new object type</span>\n<span class=\"n\">Realm</span> <span class=\"n\">initialRealm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span></code></pre>", "in_page_order": 95, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyActivity</span> <span class=\"kd\">extends</span> <span class=\"n\">Activity</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">RealmChangeListener</span> <span class=\"n\">realmListener</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">savedInstanceState</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">(</span><span class=\"n\">savedInstanceState</span><span class=\"o\">);</span>\n      <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n      <span class=\"n\">realmListener</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmChangeListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"nd\">@Override</span>\n        <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">Realm</span> <span class=\"n\">realm</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// ... do something with the updates (UI, etc.) ...</span>\n        <span class=\"o\">}};</span>\n      <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"n\">realmListener</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onDestroy</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onDestroy</span><span class=\"o\">();</span>\n        <span class=\"c1\">// Remove the listener.</span>\n        <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">removeChangeListener</span><span class=\"o\">(</span><span class=\"n\">realmListener</span><span class=\"o\">);</span>\n        <span class=\"c1\">// Close the Realm instance.</span>\n        <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 96, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Dog</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"n\">exteds</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n  <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n  <span class=\"kd\">public</span> <span class=\"n\">RealmList</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">dogs</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 97, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"n\">OrderedRealmCollectionChangeListener</span><span class=\"o\">&lt;</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">changeListener</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">OrderedRealmCollectionChangeListener</span><span class=\"o\">&lt;&gt;()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span> <span class=\"n\">collection</span><span class=\"o\">,</span> <span class=\"n\">OrderedCollectionChangeSet</span> <span class=\"n\">changeSet</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// `null`  means the async query returns the first time.</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">changeSet</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">notifyDataSetChanged</span><span class=\"o\">();</span>\n            <span class=\"k\">return</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"c1\">// For deletions, the adapter has to be notified in reverse order.</span>\n        <span class=\"n\">OrderedCollectionChangeSet</span><span class=\"o\">.</span><span class=\"na\">Range</span><span class=\"o\">[]</span> <span class=\"n\">deletions</span> <span class=\"o\">=</span> <span class=\"n\">changeSet</span><span class=\"o\">.</span><span class=\"na\">getDeletionRanges</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">deletions</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">--)</span> <span class=\"o\">{</span>\n            <span class=\"n\">OrderedCollectionChangeSet</span><span class=\"o\">.</span><span class=\"na\">Range</span> <span class=\"n\">range</span> <span class=\"o\">=</span> <span class=\"n\">deletions</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n            <span class=\"n\">notifyItemRangeRemoved</span><span class=\"o\">(</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"na\">startIndex</span><span class=\"o\">,</span> <span class=\"n\">range</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"n\">OrderedCollectionChangeSet</span><span class=\"o\">.</span><span class=\"na\">Range</span><span class=\"o\">[]</span> <span class=\"n\">insertions</span> <span class=\"o\">=</span> <span class=\"n\">changeSet</span><span class=\"o\">.</span><span class=\"na\">getInsertionRanges</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">OrderedCollectionChangeSet</span><span class=\"o\">.</span><span class=\"na\">Range</span> <span class=\"n\">range</span> <span class=\"o\">:</span> <span class=\"n\">insertions</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">notifyItemRangeInserted</span><span class=\"o\">(</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"na\">startIndex</span><span class=\"o\">,</span> <span class=\"n\">range</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"n\">OrderedCollectionChangeSet</span><span class=\"o\">.</span><span class=\"na\">Range</span><span class=\"o\">[]</span> <span class=\"n\">modifications</span> <span class=\"o\">=</span> <span class=\"n\">changeSet</span><span class=\"o\">.</span><span class=\"na\">getChangeRanges</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">OrderedCollectionChangeSet</span><span class=\"o\">.</span><span class=\"na\">Range</span> <span class=\"n\">range</span> <span class=\"o\">:</span> <span class=\"n\">modifications</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">notifyItemRangeChanged</span><span class=\"o\">(</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"na\">startIndex</span><span class=\"o\">,</span> <span class=\"n\">range</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span></code></pre>", "in_page_order": 98, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"n\">RealmObjectChangeListener</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;</span> <span class=\"n\">listener</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmObjectChangeListener</span><span class=\"o\">&lt;</span><span class=\"n\">Dog</span><span class=\"o\">&gt;()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">Dog</span> <span class=\"n\">dog</span><span class=\"o\">,</span> <span class=\"n\">ObjectChangeSet</span> <span class=\"n\">changeSet</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">changeSet</span><span class=\"o\">.</span><span class=\"na\">isDeleted</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n            <span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"The dog was deleted\"</span><span class=\"o\">);</span>\n            <span class=\"k\">return</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">fieldName</span> <span class=\"o\">:</span> <span class=\"n\">changeSet</span><span class=\"o\">.</span><span class=\"na\">getChangedFields</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n            <span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"Field \"</span> <span class=\"o\">+</span> <span class=\"n\">fieldName</span> <span class=\"o\">+</span> <span class=\"s\">\" was changed.\"</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span></code></pre>", "in_page_order": 99, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kt\">byte</span><span class=\"o\">[]</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">byte</span><span class=\"o\">[</span><span class=\"mi\">64</span><span class=\"o\">];</span>\n<span class=\"k\">new</span> <span class=\"nf\">SecureRandom</span><span class=\"o\">().</span><span class=\"na\">nextBytes</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">);</span>\n<span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">encryptionKey</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span></code></pre>", "in_page_order": 100, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight plaintext\"><code>realm://&lt;servername&gt;/path-to-realm</code></pre>", "in_page_order": 101, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">getUserFromLogin</span><span class=\"o\">();</span>\n<span class=\"n\">String</span> <span class=\"n\">serverURL</span> <span class=\"o\">=</span> <span class=\"s\">\"realm://my.realm-server.com:9080/~/default\"</span><span class=\"o\">;</span>\n<span class=\"n\">SyncConfiguration</span> <span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">serverURL</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 102, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncCredentials</span> <span class=\"n\">myCredentials</span> <span class=\"o\">=</span> <span class=\"n\">SyncCredentials</span><span class=\"o\">.</span><span class=\"na\">usernamePassword</span><span class=\"o\">(</span><span class=\"n\">username</span><span class=\"o\">,</span> <span class=\"n\">password</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">);</span></code></pre>", "in_page_order": 103, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">String</span> <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"s\">\"...\"</span><span class=\"o\">;</span> <span class=\"c1\">// a string representation of a token obtained from the Google Login API</span>\n<span class=\"n\">SyncCredentials</span> <span class=\"n\">myCredentials</span> <span class=\"o\">=</span> <span class=\"n\">SyncCredentials</span><span class=\"o\">.</span><span class=\"na\">google</span><span class=\"o\">(</span><span class=\"n\">token</span><span class=\"o\">);</span></code></pre>", "in_page_order": 104, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">String</span> <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"s\">\"...\"</span><span class=\"o\">;</span> <span class=\"c1\">// a string representation of a token obtained from the Facebook Login API</span>\n<span class=\"n\">SyncCredentials</span> <span class=\"n\">myCredentials</span> <span class=\"o\">=</span> <span class=\"n\">SyncCredentials</span><span class=\"o\">.</span><span class=\"na\">facebook</span><span class=\"o\">(</span><span class=\"n\">token</span><span class=\"o\">);</span></code></pre>", "in_page_order": 105, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">String</span> <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"s\">\"...\"</span><span class=\"o\">;</span> <span class=\"c1\">// a string representation of a token obtained from your authentication server</span>\n<span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span> <span class=\"n\">Object</span><span class=\"o\">&gt;</span> <span class=\"n\">customData</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HashMap</span><span class=\"o\">&lt;&gt;();</span>\n<span class=\"n\">SyncCredentials</span> <span class=\"n\">myCredentials</span> <span class=\"o\">=</span> <span class=\"n\">SyncCredentials</span><span class=\"o\">.</span><span class=\"na\">custom</span><span class=\"o\">(</span>\n  <span class=\"n\">token</span><span class=\"o\">,</span>\n  <span class=\"err\">'</span><span class=\"n\">myauth</span><span class=\"err\">'</span><span class=\"o\">,</span>\n  <span class=\"n\">customData</span><span class=\"o\">,</span>\n<span class=\"o\">);</span></code></pre>", "in_page_order": 106, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncConfiguration</span> <span class=\"n\">syncConfiguration</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"s\">\"realms://host/~/myapp\"</span><span class=\"o\">)</span>\n                <span class=\"o\">.</span><span class=\"na\">serverCertificate</span><span class=\"o\">(</span><span class=\"s\">\"root_ca.pem\"</span><span class=\"o\">)</span>\n                <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">syncConfiguration</span><span class=\"o\">);</span></code></pre>", "in_page_order": 107, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight plaintext\"><code>.\n\u251c\u2500\u2500 main\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 AndroidManifest.xml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assets\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 root_ca.pem\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 java</code></pre>", "in_page_order": 108, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncConfiguration</span> <span class=\"n\">syncConfiguration</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"s\">\"realms://host/~/myapp\"</span><span class=\"o\">)</span>\n                <span class=\"o\">.</span><span class=\"na\">disableSSLVerification</span><span class=\"o\">()</span>\n                <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n<span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">syncConfiguration</span><span class=\"o\">);</span></code></pre>", "in_page_order": 109, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">String</span> <span class=\"n\">authURL</span> <span class=\"o\">=</span> <span class=\"s\">\"http://my.realm-auth-server.com:9080/auth\"</span><span class=\"o\">;</span>\n<span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">SyncUser</span><span class=\"o\">.</span><span class=\"na\">login</span><span class=\"o\">(</span><span class=\"n\">myCredentials</span><span class=\"o\">,</span> <span class=\"n\">authURL</span><span class=\"o\">);</span></code></pre>", "in_page_order": 110, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">SyncUser</span><span class=\"o\">.</span><span class=\"na\">currentUser</span><span class=\"o\">();</span></code></pre>", "in_page_order": 111, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span> <span class=\"n\">SyncUser</span><span class=\"o\">&gt;</span> <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">SyncUser</span><span class=\"o\">.</span><span class=\"na\">all</span><span class=\"o\">();</span></code></pre>", "in_page_order": 112, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">String</span> <span class=\"n\">userJson</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">toJson</span><span class=\"o\">();</span></code></pre>", "in_page_order": 113, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">SyncUser</span><span class=\"o\">.</span><span class=\"na\">fromJson</span><span class=\"o\">(</span><span class=\"n\">userJson</span><span class=\"o\">);</span></code></pre>", "in_page_order": 114, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">logout</span><span class=\"o\">();</span></code></pre>", "in_page_order": 115, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">SyncUser</span><span class=\"o\">.</span><span class=\"na\">login</span><span class=\"o\">(</span><span class=\"n\">credentials</span><span class=\"o\">,</span> <span class=\"n\">serverURL</span><span class=\"o\">);</span>\n<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">user</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// user.isAdmin() =&gt; the user is an admin user</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 116, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncUser</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">getUser</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Must be called on the UI thread</span>\n<span class=\"n\">PermissionManager</span> <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getPermissionManager</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Do work...</span>\n\n<span class=\"c1\">// Close when done</span>\n<span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span></code></pre>", "in_page_order": 117, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">PermissionManager</span> <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getPermissionManager</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Retrieve </span>\n<span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"na\">getPermissions</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">PermissionManager</span><span class=\"o\">.</span><span class=\"na\">PermissionsCallback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Permission</span><span class=\"o\">&gt;</span> <span class=\"n\">permissions</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\n        <span class=\"c1\">// Permissions can be queried like normal</span>\n        <span class=\"n\">Permission</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">().</span><span class=\"na\">equalTo</span><span class=\"o\">(</span><span class=\"s\">\"path\"</span><span class=\"o\">,</span> <span class=\"n\">realmPath</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n\n        <span class=\"c1\">// Changelisteners can be registered </span>\n        <span class=\"c1\">// The PermissionManager keeps a reference to these as long as the Permission Manager</span>\n        <span class=\"c1\">// is open, so they do not risk getting GC'ed</span>\n        <span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">RealmChangeListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Permission</span><span class=\"o\">&gt;</span> <span class=\"n\">permissions</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"c1\">// Permissions changed</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">});</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">ObjectServerError</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// handle error  </span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 118, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">PermissionManager</span> <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getPermissionManager</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Create request</span>\n<span class=\"n\">UserCondition</span> <span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"n\">UserCondition</span><span class=\"o\">.</span><span class=\"na\">userId</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getIdentity</span><span class=\"o\">());</span>\n<span class=\"n\">AccessLevel</span> <span class=\"n\">accessLevel</span> <span class=\"o\">=</span> <span class=\"n\">AccessLevel</span><span class=\"o\">.</span><span class=\"na\">WRITE</span><span class=\"o\">;</span>\n<span class=\"n\">PermissionRequest</span> <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">PermissionRequest</span><span class=\"o\">(</span><span class=\"n\">condition</span><span class=\"o\">,</span> <span class=\"n\">url</span><span class=\"o\">,</span> <span class=\"n\">accessLevel</span><span class=\"o\">);</span>\n\n<span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"na\">applyPermissions</span><span class=\"o\">(</span><span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">PermissionManager</span><span class=\"o\">.</span><span class=\"na\">ApplyPermissionsCallback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSucesss</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Permissions where succesfully changed</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">ObjectServerError</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Something went wrong</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 119, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">PermissionManager</span> <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getPermissionManager</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// Create Offer</span>\n<span class=\"n\">String</span> <span class=\"n\">realmUrl</span> <span class=\"o\">=</span> <span class=\"s\">\"realm://my-server.com/~/myRealm\"</span><span class=\"o\">;</span>\n<span class=\"n\">Date</span> <span class=\"n\">expiresAt</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Date</span><span class=\"o\">(</span><span class=\"mi\">2017</span><span class=\"o\">,</span> <span class=\"mi\">08</span><span class=\"o\">,</span> <span class=\"mi\">25</span><span class=\"o\">);</span>\n<span class=\"n\">AccessLevel</span> <span class=\"n\">accessLevel</span> <span class=\"o\">=</span> <span class=\"n\">AccessLevel</span><span class=\"o\">.</span><span class=\"na\">READ</span><span class=\"o\">;</span>\n<span class=\"n\">PermissionOffer</span> <span class=\"n\">offer</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">PermissionOffer</span><span class=\"o\">(</span><span class=\"n\">realmUrl</span><span class=\"o\">,</span> <span class=\"n\">accessLevel</span><span class=\"o\">,</span> <span class=\"n\">expiresAt</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Accept token</span>\n<span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"na\">makeOffer</span><span class=\"o\">(</span><span class=\"n\">offer</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">PermissionManager</span><span class=\"o\">.</span><span class=\"na\">MakeOfferCallback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSucces</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">token</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Send token to other users</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">ObjectServerError</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// An error happened</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 120, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">PermissionManager</span> <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getPermissionManager</span><span class=\"o\">();</span>\n\n<span class=\"n\">String</span> <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">getToken</span><span class=\"o\">();</span>\n<span class=\"n\">var</span> <span class=\"n\">realmUrl</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"na\">acceptOffer</span><span class=\"o\">(</span><span class=\"n\">token</span><span class=\"o\">,</span>  <span class=\"k\">new</span> <span class=\"n\">PermissionManager</span><span class=\"o\">.</span><span class=\"na\">AcceptOfferCallback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSucces</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">realmUrl</span><span class=\"o\">,</span> <span class=\"n\">Permission</span> <span class=\"n\">permission</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// User can now access the Realm</span>\n        <span class=\"n\">SyncConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">realmUrl</span><span class=\"o\">,</span> <span class=\"n\">user</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n        <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">ObjectServerError</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// An error happened</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 121, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">PermissionManager</span> <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getPermissionManager</span><span class=\"o\">();</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"na\">getCreatedOffers</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">PermissionManager</span><span class=\"o\">.</span><span class=\"na\">OffersCallback</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onSuccess</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">PermissionOffer</span><span class=\"o\">&gt;</span> <span class=\"n\">offers</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">PermissionOffer</span> <span class=\"n\">offer</span> <span class=\"o\">:</span> <span class=\"n\">offers</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// Handle individual offer</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">ObjectServerError</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// handle error</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span></code></pre>", "in_page_order": 122, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">ProgressListener</span> <span class=\"n\">listener</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ProgressListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">Progress</span> <span class=\"n\">progress</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">activity</span><span class=\"o\">.</span><span class=\"na\">runOnUiThread</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Runnable</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">run</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">progress</span><span class=\"o\">.</span><span class=\"na\">isTransferComplete</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n                    <span class=\"n\">hideActivityIndicator</span><span class=\"o\">();</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">showActivityIndicator</span><span class=\"o\">();</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span>\n\n<span class=\"n\">SyncSession</span> <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">SyncManager</span><span class=\"o\">.</span><span class=\"na\">getSession</span><span class=\"o\">(</span><span class=\"n\">getSyncConfiguration</span><span class=\"o\">());</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"na\">addDownloadProgressListener</span><span class=\"o\">(</span><span class=\"n\">ProgressMode</span><span class=\"o\">.</span><span class=\"na\">INDEFINITELY</span><span class=\"o\">,</span> <span class=\"n\">listener</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// When stopping activity</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"na\">removeProgressListener</span><span class=\"o\">(</span><span class=\"n\">listener</span><span class=\"o\">);</span></code></pre>", "in_page_order": 123, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">final</span> <span class=\"n\">SyncSession</span> <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">SyncManager</span><span class=\"o\">.</span><span class=\"na\">getSession</span><span class=\"o\">(</span><span class=\"n\">getSyncConfiguration</span><span class=\"o\">());</span>\n<span class=\"n\">ProgressListener</span> <span class=\"n\">listener</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ProgressListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">Progress</span> <span class=\"n\">progress</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">activity</span><span class=\"o\">.</span><span class=\"na\">runOnUiThread</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Runnable</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"nd\">@Override</span>\n            <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">run</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">progress</span><span class=\"o\">.</span><span class=\"na\">isTransferComplete</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n                    <span class=\"n\">hideProgressBar</span><span class=\"o\">();</span>\n                    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"na\">removeProgressListener</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">updateProgressBar</span><span class=\"o\">(</span><span class=\"n\">progress</span><span class=\"o\">.</span><span class=\"na\">getFractionTransferred</span><span class=\"o\">());</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span>\n<span class=\"n\">setupProgressBar</span><span class=\"o\">();</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"na\">addDownloadProgressListener</span><span class=\"o\">(</span><span class=\"n\">ProgressMode</span><span class=\"o\">.</span><span class=\"na\">CHANGES_ONLY</span><span class=\"o\">,</span> <span class=\"n\">listener</span><span class=\"o\">);</span></code></pre>", "in_page_order": 124, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmLog</span><span class=\"o\">.</span><span class=\"na\">setLevel</span><span class=\"o\">(</span><span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">VERBOSE</span><span class=\"o\">);</span></code></pre>", "in_page_order": 125, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncConfiguration</span> <span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfigurtion</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">serverURL</span><span class=\"o\">)</span>\n  <span class=\"o\">.</span><span class=\"na\">errorHandler</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Session</span><span class=\"o\">.</span><span class=\"na\">ErrorHandler</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"kt\">void</span> <span class=\"nf\">onError</span><span class=\"o\">(</span><span class=\"n\">Session</span> <span class=\"n\">session</span><span class=\"o\">,</span> <span class=\"n\">ObjectServerError</span> <span class=\"n\">error</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// do some error handling</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">})</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span></code></pre>", "in_page_order": 126, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncManager</span><span class=\"o\">.</span><span class=\"na\">setDefaultSessionErrorHandler</span><span class=\"o\">(</span><span class=\"n\">myErrorHandler</span><span class=\"o\">);</span></code></pre>", "in_page_order": 127, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">SyncConfiguration</span> <span class=\"n\">syncConfig</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SyncConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">serverUri</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n <span class=\"k\">try</span> <span class=\"o\">{</span>\n     <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">syncConfig</span><span class=\"o\">);</span>\n <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">IncompatibleSyncedFileException</span> <span class=\"n\">exception</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n     <span class=\"n\">RealmConfiguration</span> <span class=\"n\">backupConfig</span> <span class=\"o\">=</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"na\">getBackupRealmConfiguration</span><span class=\"o\">();</span>\n     <span class=\"n\">Realm</span> <span class=\"n\">backupRealm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">backupConfig</span><span class=\"o\">);</span>\n     <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"n\">syncConfig</span><span class=\"o\">);</span>\n <span class=\"o\">}</span></code></pre>", "in_page_order": 128, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// in a Fragment or Activity, etc</span>\n<span class=\"nd\">@Override</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onActivityCreated</span><span class=\"o\">(</span><span class=\"n\">Bundle</span> <span class=\"n\">savedInstanceState</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// ... boilerplate omitted for brevity</span>\n    <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n    <span class=\"c1\">// get all the customers</span>\n    <span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Customer</span><span class=\"o\">&gt;</span> <span class=\"n\">customers</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findAllAsync</span><span class=\"o\">();</span>\n    <span class=\"c1\">// ... build a list adapter and set it to the ListView/RecyclerView/etc</span>\n\n    <span class=\"c1\">// set up a Realm change listener</span>\n    <span class=\"n\">changeListener</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmChangeListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"nd\">@Override</span>\n        <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onChange</span><span class=\"o\">(</span><span class=\"n\">RealmResults</span><span class=\"o\">&lt;</span><span class=\"n\">Customer</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// This is called anytime the Realm database changes on any thread.</span>\n            <span class=\"c1\">// Please note, change listeners only work on Looper threads.</span>\n            <span class=\"c1\">// For non-looper threads, you manually have to use Realm.waitForChange() instead.</span>\n            <span class=\"n\">updateUi</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">};</span>\n    <span class=\"c1\">// Tell Realm to notify our listener when the customers results</span>\n    <span class=\"c1\">// have changed (items added, removed, updated, anything of the sort).</span>\n    <span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"na\">addChangeListener</span><span class=\"o\">(</span><span class=\"n\">changeListener</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// In a background service, in another thread</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">PollingService</span> <span class=\"kd\">extends</span> <span class=\"n\">IntentService</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onHandleIntent</span><span class=\"o\">(</span><span class=\"n\">Intent</span> <span class=\"n\">intent</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// go do some network calls/etc and get some data and stuff it into a 'json' var</span>\n            <span class=\"n\">String</span> <span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">customerApi</span><span class=\"o\">.</span><span class=\"na\">getCustomers</span><span class=\"o\">();</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createObjectFromJson</span><span class=\"o\">(</span><span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">json</span><span class=\"o\">);</span> <span class=\"c1\">// Save a bunch of new Customer objects</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span>\n            <span class=\"c1\">// At this point, the data in the UI thread is already up to date.</span>\n            <span class=\"c1\">// ...</span>\n        <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n    <span class=\"c1\">// ...</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 129, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">private</span> <span class=\"kd\">class</span> <span class=\"nc\">DownloadOrders</span> <span class=\"kd\">extends</span> <span class=\"n\">AsyncTask</span><span class=\"o\">&lt;</span><span class=\"n\">Void</span><span class=\"o\">,</span> <span class=\"n\">Void</span><span class=\"o\">,</span> <span class=\"n\">Long</span><span class=\"o\">&gt;</span> <span class=\"o\">{</span>\n    <span class=\"kd\">protected</span> <span class=\"n\">Long</span> <span class=\"nf\">doInBackground</span><span class=\"o\">(</span><span class=\"n\">Void</span><span class=\"o\">...</span> <span class=\"n\">voids</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Now in a background thread.</span>\n\n        <span class=\"c1\">// Open the Realm</span>\n        <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// Work with Realm</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createAllFromJson</span><span class=\"o\">(</span><span class=\"n\">Order</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"na\">getNewOrders</span><span class=\"o\">());</span>\n            <span class=\"n\">Order</span> <span class=\"n\">firstOrder</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Order</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n            <span class=\"kt\">long</span> <span class=\"n\">orderId</span> <span class=\"o\">=</span> <span class=\"n\">firstOrder</span><span class=\"o\">.</span><span class=\"na\">getId</span><span class=\"o\">();</span> <span class=\"c1\">// Id of order</span>\n            <span class=\"k\">return</span> <span class=\"n\">orderId</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onPostExecute</span><span class=\"o\">(</span><span class=\"n\">Long</span> <span class=\"n\">orderId</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Back on the Android mainThread</span>\n        <span class=\"c1\">// do something with orderId such as query Realm</span>\n        <span class=\"c1\">// for the order and perform some operation with it.</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 130, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">OrdersIntentService</span> <span class=\"kd\">extends</span> <span class=\"n\">IntentService</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"nf\">OrdersIntentService</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">(</span><span class=\"s\">\"OrdersIntentService\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onHandleIntent</span><span class=\"o\">(</span><span class=\"n\">Intent</span> <span class=\"n\">intent</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Now in a background thread.</span>\n\n        <span class=\"c1\">// Open the Realm</span>\n        <span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// Work with Realm</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">createAllFromJson</span><span class=\"o\">(</span><span class=\"n\">Order</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"na\">getNewOrders</span><span class=\"o\">());</span>\n            <span class=\"n\">Order</span> <span class=\"n\">firstOrder</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Order</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">findFirst</span><span class=\"o\">();</span>\n            <span class=\"kt\">long</span> <span class=\"n\">orderId</span> <span class=\"o\">=</span> <span class=\"n\">firstOrder</span><span class=\"o\">.</span><span class=\"na\">getId</span><span class=\"o\">();</span> <span class=\"c1\">// Id of order</span>\n        <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n            <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 131, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Using the User class</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">email</span><span class=\"o\">;</span>\n    <span class=\"c1\">// getters and setters left out ...</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">Gson</span> <span class=\"n\">gson</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">GsonBuilder</span><span class=\"o\">().</span><span class=\"na\">create</span><span class=\"o\">();</span>\n<span class=\"n\">String</span> <span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"s\">\"{ name : 'John', email : '<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"d6bcb9beb896b5b9a4a6b9a4b7a2bfb9b8f8b5b9bb\">[email\u00a0protected]</a>' }\"</span><span class=\"o\">;</span>\n<span class=\"n\">User</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">gson</span><span class=\"o\">.</span><span class=\"na\">fromJson</span><span class=\"o\">(</span><span class=\"n\">json</span><span class=\"o\">,</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span></code></pre>", "in_page_order": 132, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Ignore</span>\n    <span class=\"n\">Drawable</span> <span class=\"n\">avatar</span><span class=\"o\">;</span>\n    <span class=\"c1\">// other fields, etc</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 133, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">shouldSkipField</span><span class=\"o\">(</span><span class=\"n\">FieldAttributes</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n  <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"na\">getDeclaringClass</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">RealmObject</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span> <span class=\"o\">||</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"na\">getDeclaringClass</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">Drawable</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 134, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight plaintext\"><code>java.lang.NoClassDefFoundError: rx.Observable\nat libcore.reflect.InternalNames.getClass(InternalNames.java:55)\n...</code></pre>", "in_page_order": 135, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// File 1</span>\n<span class=\"kn\">package</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"na\">reactivex</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Flowable</span> <span class=\"o\">{</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"c1\">// File 2</span>\n<span class=\"kn\">package</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"na\">reactivex</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Observable</span> <span class=\"o\">{</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// File 3</span>\n<span class=\"kn\">package</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"na\">reactivex</span><span class=\"o\">;</span>\n\n<span class=\"kd\">enum</span> <span class=\"n\">BackpressureStrategy</span> <span class=\"o\">{</span>\n    <span class=\"n\">LATEST</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 136, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">apply</span> <span class=\"nl\">plugin:</span> <span class=\"s1\">'kotlin-android'</span>\n<span class=\"n\">apply</span> <span class=\"nl\">plugin:</span> <span class=\"s1\">'kotlin-kapt'</span>\n<span class=\"n\">apply</span> <span class=\"nl\">plugin:</span> <span class=\"s1\">'realm-android'</span></code></pre>", "in_page_order": 137, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">android</span> <span class=\"o\">{</span>\n  <span class=\"o\">...</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">realm</span> <span class=\"o\">{</span>\n  <span class=\"n\">kotlinExtensionsEnabled</span> <span class=\"o\">=</span> <span class=\"kc\">false</span> <span class=\"c1\">// Disable extensions if needed</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 138, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// All classes that extend RealmObject will have a matching RealmProxy class created</span>\n<span class=\"c1\">// by the annotation processor. Parceler must be made aware of this class. Note that</span>\n<span class=\"c1\">// the class is not available until the project has been compiled at least once.</span>\n<span class=\"nd\">@Parcel</span><span class=\"o\">(</span><span class=\"n\">implementations</span> <span class=\"o\">=</span> <span class=\"o\">{</span> <span class=\"n\">PersonRealmProxy</span><span class=\"o\">.</span><span class=\"na\">class</span> <span class=\"o\">},</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">Parcel</span><span class=\"o\">.</span><span class=\"na\">Serialization</span><span class=\"o\">.</span><span class=\"na\">BEAN</span><span class=\"o\">,</span>\n        <span class=\"n\">analyze</span> <span class=\"o\">=</span> <span class=\"o\">{</span> <span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span> <span class=\"o\">})</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"kd\">extends</span> <span class=\"n\">RealmObject</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// ...</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 139, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">compile</span> <span class=\"s2\">\"org.parceler:parceler-api:1.0.3\"</span>\n<span class=\"n\">apt</span> <span class=\"s2\">\"org.parceler:parceler:1.0.3\"</span></code></pre>", "in_page_order": 140, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">GitHubService</span> <span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">restAdapter</span><span class=\"o\">.</span><span class=\"na\">create</span><span class=\"o\">(</span><span class=\"n\">GitHubService</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n<span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Repo</span><span class=\"o\">&gt;</span> <span class=\"n\">repos</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">listRepos</span><span class=\"o\">(</span><span class=\"s\">\"octocat\"</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Copy elements from Retrofit to Realm to persist them.</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">beginTransaction</span><span class=\"o\">();</span>\n<span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Repo</span><span class=\"o\">&gt;</span> <span class=\"n\">realmRepos</span> <span class=\"o\">=</span> <span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">copyToRealmOrUpdate</span><span class=\"o\">(</span><span class=\"n\">repos</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">commitTransaction</span><span class=\"o\">();</span></code></pre>", "in_page_order": 141, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"c1\">// Combining Realm, Retrofit and RxJava (Using Retrolambda syntax for brevity)</span>\n<span class=\"c1\">// Load all persons and merge them with their latest stats from GitHub (if they have any)</span>\n<span class=\"n\">Realm</span> <span class=\"n\">realm</span> <span class=\"o\">=</span> <span class=\"n\">Realm</span><span class=\"o\">.</span><span class=\"na\">getDefaultInstance</span><span class=\"o\">();</span>\n<span class=\"n\">GitHubService</span> <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">retrofit</span><span class=\"o\">.</span><span class=\"na\">create</span><span class=\"o\">(</span><span class=\"n\">GitHubService</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n<span class=\"n\">realm</span><span class=\"o\">.</span><span class=\"na\">where</span><span class=\"o\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">isNotNull</span><span class=\"o\">(</span><span class=\"s\">\"username\"</span><span class=\"o\">).</span><span class=\"na\">findAllAsync</span><span class=\"o\">().</span><span class=\"na\">asFlowable</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">filter</span><span class=\"o\">(</span><span class=\"n\">persons</span><span class=\"o\">.</span><span class=\"na\">isLoaded</span><span class=\"o\">)</span>\n    <span class=\"o\">.</span><span class=\"na\">flatMap</span><span class=\"o\">(</span><span class=\"n\">persons</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Observable</span><span class=\"o\">.</span><span class=\"na\">from</span><span class=\"o\">(</span><span class=\"n\">persons</span><span class=\"o\">))</span>\n    <span class=\"o\">.</span><span class=\"na\">flatMap</span><span class=\"o\">(</span><span class=\"n\">person</span> <span class=\"o\">-&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"na\">user</span><span class=\"o\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"na\">getGithubUserName</span><span class=\"o\">())</span>\n    <span class=\"o\">.</span><span class=\"na\">observeOn</span><span class=\"o\">(</span><span class=\"n\">AndroidSchedulers</span><span class=\"o\">.</span><span class=\"na\">mainThread</span><span class=\"o\">())</span>\n    <span class=\"o\">.</span><span class=\"na\">subscribe</span><span class=\"o\">(</span><span class=\"n\">user</span> <span class=\"o\">-&gt;</span> <span class=\"n\">showUser</span><span class=\"o\">(</span><span class=\"n\">user</span><span class=\"o\">));</span></code></pre>", "in_page_order": 142, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight groovy\"><code><span class=\"n\">dependencies</span> <span class=\"o\">{</span>\n  <span class=\"n\">compile</span> <span class=\"s1\">'io.reactivex:rxjava:2.1.4'</span>\n<span class=\"o\">}</span></code></pre>", "in_page_order": 143, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "<pre class=\"highlight java\"><code><span class=\"n\">RealmConfiguration</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RealmConfiguration</span><span class=\"o\">.</span><span class=\"na\">Builder</span><span class=\"o\">()</span>\n  <span class=\"o\">.</span><span class=\"na\">rxFactory</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyRxFactory</span><span class=\"o\">())</span>\n  <span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">()</span></code></pre>", "in_page_order": 144, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "https://www.developer.com/java/other/article.php/2238491/The-Essence-of-OOP-using-Java-Static-Initializer-Blocks.htm", "url position": 35, "segments": [{"code": "  static int var1 = 6;  Date date;", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "Figure 1", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "public class Init01{  public static void main(String[] args){    System.out.println(\"Start load: \" +                                      new Date());Listing 1", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "Start load: Fri May 30 15:28:49 CDT 2003", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Figure 2", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "    Class aClass = A.class;Listing 2", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "    //try{      //Class aClass = Class.forName(\"A\");      //}catch(ClassNotFoundException e){    // \t                    e.printStackTrace();}Listing 3", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "    System.out.println(\"End load: \" +                                      new Date());    Listing 4", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "End load: Fri May 30 15:28:54 CDT 2003", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Figure 3", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "class A{  //Declare six static variables  static int var1 = 6;  static int var2 = 9;  static int var3;//originally initialized to 0  static long var4;//originally initialized to 0  static Date date1;//initialized to null  static Date date2;//initialized to null  //instance var declaration omitted for brevity  static{    //First static initializer block    date1 = new Date();    for(int cnt = 0; cnt < var2; cnt++){      var3 += var1;    }//end for loop    System.out.println(\"End first static init: \"                                   + new Date());  }//end first static initializer block  //Constructor and instance method omitted  // for brevity.  static{    //Second static initializer block    try{      //Sleep for five seconds      Thread.currentThread().sleep(5000);    }catch(Exception e){System.out.println(e);}    date2 = new Date();    var4 = date2.getTime() - date1.getTime();    System.out.println(\"End second static init: \"                                   + new Date());  }//end second static initializer block}//end class AListing 5", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class A{  static int var1 = 6;  static int var2 = 9;  static int var3;//initialized to 0  static long var4;//initialized to 0  static Date date1;//initialized to null  static Date date2;//initialized to nullListing 6", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "  static{    date1 = new Date();    for(int cnt = 0; cnt < var2; cnt++){      var3 += var1;    }//end for loop    System.out.println(\"End first static init: \"                                   + new Date());  }//end first static initializer blockListing 7", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "End first static init:                      Fri May 30 15:28:49 CDT 2003", "in_page_order": 14, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Figure 4", "in_page_order": 15, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "  static{    try{      Thread.currentThread().sleep(5000);    }catch(Exception e){System.out.println(e);}    date2 = new Date();    var4 = date2.getTime() - date1.getTime();    System.out.println(\"End second static init: \"                                   + new Date());  }//end second static initializer block}//end class AListing 8", "in_page_order": 16, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "End second static init:                      Fri May 30 15:28:54 CDT 2003", "in_page_order": 17, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "Figure 5", "in_page_order": 18, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "//Back in discussion of the main method    try{      Thread.currentThread().sleep(5000);    }catch(Exception e){System.out.println(e);}Listing 9", "in_page_order": 19, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "    new A().showData();  }//end main}//end class Init01Listing 10", "in_page_order": 20, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "//Resume discussion of class A  Date date3;Listing 11", "in_page_order": 21, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}, {"code": "  A(){//constructor    //Record the time in an instance variable.    date3 = new Date();  }//end constructorListing 12", "in_page_order": 22, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "  void showData(){//an instance method    System.out.println(\"var3 initialized: \"                                        + date1);    System.out.println(\"var3 = \" + var3);    System.out.println(\"var4 initialized: \"                                        + date2);    System.out.println(\"var4 = \" + var4                                      + \" msec\");    System.out.println(\"Obj instantiated: \"                                        + date3);  }//end showDataListing 13", "in_page_order": 23, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "var3 initialized: Fri May 30 15:28:49 CDT 2003var3 = 54var4 initialized: Fri May 30 15:28:54 CDT 2003var4 = 5008 msecObj instantiated: Fri May 30 15:28:59 CDT 2003", "in_page_order": 24, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "Figure 6", "in_page_order": 25, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "/*File Init01.javaCopyright 2003 R.G.BaldwinIllustrates the use of static initializer blocksto execute code that is too complex to becontained in a simple variable initializer.Demonstrates that static initializer blocks areexecuted in the order in which they appear in theclass definition.Demonstrates that other code can be insertedbetween static initializer blocks in a classdefinition.The output will change each time this program isrun.  The output for one run is shown below. Linebreaks were manually inserted to force thematerial to fit in this narrow publication format.Start load: Fri May 30 15:28:49 CDT 2003End first static init:                      Fri May 30 15:28:49 CDT 2003End second static init:                      Fri May 30 15:28:54 CDT 2003End load: Fri May 30 15:28:54 CDT 2003var3 initialized: Fri May 30 15:28:49 CDT 2003var3 = 54var4 initialized: Fri May 30 15:28:54 CDT 2003var4 = 5008 msecObj instantiated: Fri May 30 15:28:59 CDT 2003Note the five-second time intervals that separatethe two initializations and the objectinstantiation in the above output.Tested using SDK 1.4.1 under WinXP************************************************/import java.util.Date;public class Init01{  public static void main(String[] args){  \t//Display start load time    System.out.println(\"Start load: \" +   \t                             new Date());    //Force the class named A to load using a    // class literal.    Class aClass = A.class;        //Alternative way to cause the class named A    // to load.    //try{      //Class aClass = Class.forName(\"A\");      //}catch(ClassNotFoundException e){    // \t                    e.printStackTrace();}    //Display end load time    System.out.println(\"End load: \" +                                      new Date());        //Sleep for five seconds after the class    // loads    try{      Thread.currentThread().sleep(5000);    }catch(Exception e){System.out.println(e);}        //Instantiate a new object of the class named    // A and display the data stored in the    // variables.    new A().showData();  }//end main}//end class Init01//=============================================//class A{  //Declare six static variables and initialize  // some of them when they are declared.  The  // others will be automatically initialized to  // either zero or null, but this may change  // later due to the code in static initializer  // blocks.  static int var1 = 6;  static int var2 = 9;  static int var3;//originally initialized to 0  static long var4;//originally initialized to 0  static Date date1;//initialized to null  static Date date2;//initialized to null  //Declare an instance variable which is  // originally initialized to null.  Date date3;  static{    //First static initializer block records the    // time and then executes a loop to    // compute a new initial value for var3.    date1 = new Date();    for(int cnt = 0; cnt < var2; cnt++){      var3 += var1;    }//end for loop    System.out.println(\"End first static init: \"                                   + new Date());  }//end first static initializer block  //-------------------------------------------//  //Note that the constructor and an instance  // method physically separate the two static  // initializer blocks.  A(){//constructor    //Record the time in an instance variable.    date3 = new Date();  }//end constructor  //-------------------------------------------//  void showData(){//an instance method    //Display the times that the variables were    // initialized along with the values stored    // in those variables.    System.out.println(\"var3 initialized: \"                                        + date1);    System.out.println(\"var3 = \" + var3);    System.out.println(\"var4 initialized: \"                                        + date2);    System.out.println(\"var4 = \" + var4                                      + \" msec\");    System.out.println(\"Obj instantiated: \"                                        + date3);  }//end showData  //-------------------------------------------//  static{    //Second static initializer block sleeps for    // five seconds, records the time, and then    // computes a new intial value for var4 based    // on values recorded during previous    // initialization operations.    try{      //Sleep for five seconds      Thread.currentThread().sleep(5000);    }catch(Exception e){System.out.println(e);}    date2 = new Date();    var4 = date2.getTime() - date1.getTime();    System.out.println(\"End second static init: \"                                   + new Date());  }//end second static initializer block}//end class AListing 14", "in_page_order": 26, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://medium.com/@kevalpatel2106/digesting-singleton-design-pattern-in-java-5d434f4f322", "url position": 38, "segments": []},
{"query": "How to initialize thread", "url": "https://docstore.mik.ua/orelly/java-ent/jnut/ch04_08.htm", "url position": 33, "segments": [{"code": "final List list;  // Some long unsorted list of objects; initialized elsewhere\n\n/** A Thread class for sorting a List in the background */\nclass BackgroundSorter extends Thread {\n  List l;\n  public BackgroundSorter(List l) { this.l = l; }    // Constructor\n  public void run() { Collections.sort(l); }         // Thread body\n}\n\n// Create a BackgroundSorter thread \nThread sorter = new BackgroundSorter(list);\n// Start it running; the new thread runs the run() method above, while \n// the original thread continues with whatever statement comes next. \nsorter.start();  \n\n// Here's another way to define a similar thread\nThread t = new Thread(new Runnable() {          // Create a new thread\n  public void run() { Collections.sort(list); } // to sort the list of objects.\n});\nt.start();                                      // Start it running", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// Set a thread t to lower-than-normal priority\nt.setPriority(Thread.NORM_PRIORITY-1);\n\n// Set a thread to lower priority than the current thread\nt.setPriority(Thread.currentThread().getPriority() - 1);\n\n// Threads that don't pause for I/O should explicitly yield the CPU \n// to give other threads with the same priority a chance to run. \nThread t = new Thread(new Runnable() {\n  public void run() {\n    for(int i = 0; i < data.length; i++) {  // Loop through a bunch of data\n      process(data[i]);                     // Process it\n      if ((i % 10) == 0)                    // But after every 10 iterations,\n        Thread.yield();                     // pause to let other threads run. \n    }\n  }\n});", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public class Clock extends Thread {\n  java.text.DateFormat f =      // How to format the time for this locale\n    java.text.DateFormat.getTimeInstance(java.text.DateFormat.MEDIUM);\n  boolean keepRunning = true;\n\n  public Clock() {         // The constructor\n    setDaemon(true);       // Daemon thread: interpreter can exit while it runs\n    start();               // This thread starts itself\n  }\n\n  public void run() {      // The body of the thread\n    while(keepRunning) {   // This thread runs until asked to stop\n      String time = f.format(new java.util.Date()); // Current time\n      System.out.println(time);                     // Print the time\n      try { Thread.sleep(1000); }                   // Wait 1000 milliseconds\n      catch (InterruptedException e) {}             // Ignore this exception \n    }\n  }\n\n  // Ask the thread to stop running\n  public void pleaseStop() { keepRunning = false; }\n}", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "import java.util.*;\n\n// How to format the time for this locale\nfinal java.text.DateFormat timeFmt =         \n  java.text.DateFormat.getTimeInstance(java.text.DateFormat.MEDIUM);\n// Define the time-display task\nTimerTask displayTime = new TimerTask() {\n  public void run() { System.out.println(timeFmt.format(new Date())); }\n};\n// Create a timer object to run the task (and possibly others)\nTimer timer = new Timer();\n// Now schedule that task to be run every 1000 milliseconds, starting now\nTimer.schedule(displayTime, 0, 1000);\n// To stop the time-display task\ndisplayTime.cancel();", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "List list;  // A long list of objects to be sorted; initialized elsewhere\n\n// Define a thread to sort the list: lower its priority, so it only runs \n// when the current thread is waiting for I/O, and then start it running. \nThread sorter = new BackgroundSorter(list);               // Defined earlier\nsorter.setPriority(Thread.currentThread.getPriority()-1); // Lower priority\nsorter.start();                                           // Start sorting\n\n// Meanwhile, in this original thread, read data from a file\nbyte[] data = readData();  // Method defined elsewhere\n\n// Before we can proceed, we need the list to be fully sorted, so\n// we've got to wait for the sorter thread to exit, if it hasn't already. \nsorter.join();", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// This method swaps two array elements in a synchronized block\npublic static void swap(Object[] array, int index1, int index2) {\n  synchronized(array) {\n    Object tmp = array[index1];\n    array[index1] = array[index2];\n    array[index2] = tmp;\n  }\n}\n\n// The Collection, Set, List, and Map implementations in java.util do\n// not have synchronized methods (except for the legacy implementations\n// Vector and Hashtable). When working with multiple threads, you can\n// obtain synchronized wrapper objects. \nList synclist = Collections.synchronizedList(list);\nMap syncmap = Collections.synchronizedMap(map);", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "// When two threads try to lock two objects, deadlock can occur unless\n// they always request the locks in the same order.\nfinal Object resource1 = new Object();   // Here are two objects to lock\nfinal Object resource2 = new Object();\nThread t1 = new Thread(new Runnable() {  // Locks resource1 then resource2\n  public void run() {\n    synchronized(resource1) { \n      synchronized(resource2) { compute(); }\n    }\n  }\n});\n\nThread t2 = new Thread(new Runnable() {  // Locks resource2 then resource1\n  public void run() {\n    synchronized(resource2) { \n      synchronized(resource1) { compute(); }\n    }\n  }\n});\n\nt1.start();  // Locks resource1\nt2.start();  // Locks resource2 and now neither thread can progress!", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "/** \n * A queue. One thread calls push() to put an object on the queue. \n * Another calls pop() to get an object off the queue. If there is no\n * data, pop() waits until there is some, using wait()/notify(). \n * wait() and notify() must be used within a synchronized method or\n * block. \n */\nimport java.util.*;\n\npublic class Queue {\n  LinkedList q = new LinkedList();  // Where objects are stored\n  public synchronized void push(Object o) {\n    q.add(o);      // Append the object to the end of the list\n    this.notify(); // Tell waiting threads that data is ready\n  }\n  public synchronized Object pop() {\n    while(q.size() == 0) {\n      try { this.wait(); }\n      catch (InterruptedException e) { /* Ignore this exception */ }\n    }\n    return q.remove(0);\n  }\n}", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "http://crunchify.com/thread-safe-and-a-fast-singleton-implementation-in-java/", "url position": 32, "segments": [{"code": "package com.crunchify.tutorials;public class CrunchifySingleton {\tprivate static CrunchifySingleton instance = null;\tprotected CrunchifySingleton() {\t}\t// Lazy Initialization (If required then only)\tpublic static CrunchifySingleton getInstance() {\t\tif (instance == null) {\t\t\t// Thread Safe. Might be costly operation in some case\t\t\tsynchronized (CrunchifySingleton.class) {\t\t\t\tif (instance == null) {\t\t\t\t\tinstance = new CrunchifySingleton();\t\t\t\t}\t\t\t}\t\t}\t\treturn instance;\t}}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "package com.crunchify.tutorials;public class ThreadSafeSingleton {\tprivate static final Object instance = new Object();\tprotected ThreadSafeSingleton() {\t}\t// Runtime initialization\t// By defualt ThreadSafe\tpublic static Object getInstance() {\t\treturn instance;\t}}", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "http://www.baeldung.com/kotlin-lazy-initialization", "url position": 30, "segments": [{"code": "public class ClassWithHeavyInitialization {\r\n \r\n    private ClassWithHeavyInitialization() {\r\n    }\r\n\r\n    private static class LazyHolder {\r\n        public static final ClassWithHeavyInitialization INSTANCE = new ClassWithHeavyInitialization();\r\n    }\r\n\r\n    public static ClassWithHeavyInitialization getInstance() {\r\n        return LazyHolder.INSTANCE;\r\n    }\r\n}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "@Test\r\npublic void giveHeavyClass_whenInitLazy_thenShouldReturnInstanceOnFirstCall() {\r\n    // when\r\n    ClassWithHeavyInitialization classWithHeavyInitialization \r\n      = ClassWithHeavyInitialization.getInstance();\r\n    ClassWithHeavyInitialization classWithHeavyInitialization2 \r\n      = ClassWithHeavyInitialization.getInstance();\r\n\r\n    // then\r\n    assertTrue(classWithHeavyInitialization == classWithHeavyInitialization2);\r\n}", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "@Test\r\nfun givenLazyValue_whenGetIt_thenShouldInitializeItOnlyOnce() {\r\n    // given\r\n    val numberOfInitializations: AtomicInteger = AtomicInteger()\r\n    val lazyValue: ClassWithHeavyInitialization by lazy {\r\n        numberOfInitializations.incrementAndGet()\r\n        ClassWithHeavyInitialization()\r\n    }\r\n    // when\r\n    println(lazyValue)\r\n    println(lazyValue)\r\n\r\n    // then\r\n    assertEquals(numberOfInitializations.get(), 1)\r\n}", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "@Test\r\nfun whenGetItUsingPublication_thenCouldInitializeItMoreThanOnce() {\r\n \r\n    // given\r\n    val numberOfInitializations: AtomicInteger = AtomicInteger()\r\n    val lazyValue: ClassWithHeavyInitialization\r\n      by lazy(LazyThreadSafetyMode.PUBLICATION) {\r\n        numberOfInitializations.incrementAndGet()\r\n        ClassWithHeavyInitialization()\r\n    }\r\n    val executorService = Executors.newFixedThreadPool(2)\r\n    val countDownLatch = CountDownLatch(1)\r\n \r\n    // when\r\n    executorService.submit { countDownLatch.await(); println(lazyValue) }\r\n    executorService.submit { countDownLatch.await(); println(lazyValue) }\r\n    countDownLatch.countDown()\r\n\r\n    // then\r\n    executorService.awaitTermination(1, TimeUnit.SECONDS)\r\n    executorService.shutdown()\r\n    assertEquals(numberOfInitializations.get(), 2)\r\n}", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "lateinit var a: String\r\n \r\n@Test\r\nfun givenLateInitProperty_whenAccessItAfterInit_thenPass() {\r\n    // when\r\n    a = \"it\"\r\n    println(a)\r\n\r\n    // then not throw\r\n}", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "@Test(expected = UninitializedPropertyAccessException::class)\r\nfun givenLateInitProperty_whenAccessItWithoutInit_thenThrow() {\r\n    // when\r\n    println(a)\r\n}", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}]},
{"query": "How to initialize thread", "url": "https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples", "url position": 28, "segments": []},
{"query": "How to initialize thread", "url": "https://android.jlelse.eu/how-to-make-the-perfect-singleton-de6b951dfdb0?gi=2d3df1ac6605", "url position": 18, "segments": []},
{"query": "How to initialize thread", "url": "https://beginnersbook.com/2014/07/final-keyword-java-final-variable-method-class/", "url position": 36, "segments": [{"code": "class Demo{  \r\n\r\n   final int MAX_VALUE=99;\r\n   void myMethod(){  \r\n      MAX_VALUE=101;\r\n   }  \r\n   public static void main(String args[]){  \r\n      Demo obj=new  Demo();  \r\n      obj.myMethod();  \r\n   }  \r\n}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "Exception in thread \"main\" java.lang.Error: Unresolved compilation problem: \r\n\tThe final field Demo.MAX_VALUE cannot be assigned\r\n\r\n\tat beginnersbook.com.Demo.myMethod(Details.java:6)\r\n\tat beginnersbook.com.Demo.main(Details.java:10)", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": false}, {"code": "class Demo{  \r\n   //Blank final variable\r\n   final int MAX_VALUE;\r\n\t \r\n   Demo(){\r\n      //It must be initialized in constructor\r\n      MAX_VALUE=100;\r\n   }\r\n   void myMethod(){  \r\n      System.out.println(MAX_VALUE);\r\n   }  \r\n   public static void main(String args[]){  \r\n      Demo obj=new  Demo();  \r\n      obj.myMethod();  \r\n   }  \r\n}", "in_page_order": 3, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "100", "in_page_order": 4, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "class StudentData{  \r\n   //Blank final variable\r\n   final int ROLL_NO;\r\n\t \r\n   StudentData(int rnum){\r\n      //It must be initialized in constructor\r\n      ROLL_NO=rnum;\r\n   }\r\n   void myMethod(){  \r\n      System.out.println(\"Roll no is:\"+ROLL_NO);\r\n   }  \r\n   public static void main(String args[]){  \r\n      StudentData obj=new  StudentData(1234);  \r\n      obj.myMethod();  \r\n   }  \r\n}", "in_page_order": 5, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "Roll no is:1234", "in_page_order": 6, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "class Example{  \r\n   //static blank final variable  \r\n   static final int ROLL_NO;\r\n   static{ \r\n      ROLL_NO=1230;\r\n   }  \r\n   public static void main(String args[]){  \r\n      System.out.println(Example.ROLL_NO);  \r\n   }  \r\n}", "in_page_order": 7, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "1230", "in_page_order": 8, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "class XYZ{  \r\n   final void demo(){\r\n      System.out.println(\"XYZ Class Method\");\r\n   }  \r\n}  \r\n\t     \r\nclass ABC extends XYZ{  \r\n   void demo(){\r\n      System.out.println(\"ABC Class Method\");\r\n   }  \r\n\t     \r\n   public static void main(String args[]){  \r\n      ABC obj= new ABC();  \r\n      obj.demo();  \r\n   }  \r\n}", "in_page_order": 9, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "class XYZ{  \r\n   final void demo(){\r\n      System.out.println(\"XYZ Class Method\");\r\n   }  \r\n}  \r\n\t     \r\nclass ABC extends XYZ{  \r\n   public static void main(String args[]){  \r\n      ABC obj= new ABC();  \r\n      obj.demo();  \r\n   }  \r\n}", "in_page_order": 10, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "XYZ Class Method", "in_page_order": 11, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}, {"code": "final class XYZ{  \r\n}  \r\n\t     \r\nclass ABC extends XYZ{  \r\n   void demo(){\r\n      System.out.println(\"My Method\");\r\n   }  \r\n   public static void main(String args[]){  \r\n      ABC obj= new ABC(); \r\n      obj.demo();\r\n   }  \r\n}", "in_page_order": 12, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "The type ABC cannot subclass the final class XYZ", "in_page_order": 13, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": false, "semicolon": false}]},
{"query": "How to initialize thread", "url": "http://literatejava.com/jvm/fastest-threadsafe-singleton-jvm/", "url position": 37, "segments": [{"code": "public class Example {\r\n    private static class StaticHolder {\r\n        static final MySingleton INSTANCE = new MySingleton();\r\n    }\r\n\r\n    public static MySingleton getSingleton() {\r\n        return StaticHolder.INSTANCE;\r\n    }\r\n}", "in_page_order": 1, "first_in_page": true, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}, {"code": "public class MySingleton {\r\n    private final static MySingleton INSTANCE = new MySingleton();\r\n    private MySingleton() {\r\n    }\r\n    public static MySingleton getInstance() {\r\n        return INSTANCE;\r\n    }\r\n}", "in_page_order": 2, "first_in_page": false, "accepted_answer": false, "answer_votes": 0, "answer_stars": 0, "length": true, "semicolon": true}]},
{"query": "How to initialize thread", "url": "https://bugs.openjdk.java.net/browse/JDK-8037567", "url position": 20, "segments": []},
{"query": "How to initialize thread", "url": "https://community.softwaregrp.com/t5/Archive-Discussion-Board/Exception-in-thread-quot-main-quot-java-lang/td-p/1526706", "url position": 39, "segments": []},
{"query": "How to initialize thread", "url": "http://1.new-mobile.download/?utm_medium=091c0c0de7c53abb7460b1655cf458930ed4b0da&utm_campaign=rot-util-1012&1=174_4612_&cid=104_9d8e6d88b6341431be9546a89481", "url position": 27, "segments": []},
{"query": "How to initialize thread", "url": "https://accounts.pega.com/user/login", "url position": 19, "segments": []}
]