[
  {
    "query": "How to send email",
    "url": "https://www.mkyong.com/java/javamail-api-sending-email-via-gmail-smtp-example/",
    "url position": 9,
    "segments": [
      {
        "code": "\r\npackage com.mkyong.common;\r\n\r\nimport java.util.Properties;\r\n\r\nimport javax.mail.Message;\r\nimport javax.mail.MessagingException;\r\nimport javax.mail.PasswordAuthentication;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\nimport javax.mail.internet.InternetAddress;\r\nimport javax.mail.internet.MimeMessage;\r\n\r\npublic class SendMailTLS {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tfinal String username = \"username@gmail.com\";\r\n\t\tfinal String password = \"password\";\r\n\r\n\t\tProperties props = new Properties();\r\n\t\tprops.put(\"mail.smtp.auth\", \"true\");\r\n\t\tprops.put(\"mail.smtp.starttls.enable\", \"true\");\r\n\t\tprops.put(\"mail.smtp.host\", \"smtp.gmail.com\");\r\n\t\tprops.put(\"mail.smtp.port\", \"587\");\r\n\r\n\t\tSession session = Session.getInstance(props,\r\n\t\t  new javax.mail.Authenticator() {\r\n\t\t\tprotected PasswordAuthentication getPasswordAuthentication() {\r\n\t\t\t\treturn new PasswordAuthentication(username, password);\r\n\t\t\t}\r\n\t\t  });\r\n\r\n\t\ttry {\r\n\r\n\t\t\tMessage message = new MimeMessage(session);\r\n\t\t\tmessage.setFrom(new InternetAddress(\"from-email@gmail.com\"));\r\n\t\t\tmessage.setRecipients(Message.RecipientType.TO,\r\n\t\t\t\tInternetAddress.parse(\"to-email@gmail.com\"));\r\n\t\t\tmessage.setSubject(\"Testing Subject\");\r\n\t\t\tmessage.setText(\"Dear Mail Crawler,\"\r\n\t\t\t\t+ \"\\n\\n No spam to my email, please!\");\r\n\r\n\t\t\tTransport.send(message);\r\n\r\n\t\t\tSystem.out.println(\"Done\");\r\n\r\n\t\t} catch (MessagingException e) {\r\n\t\t\tthrow new RuntimeException(e);\r\n\t\t}\r\n\t}\r\n}\r\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Message.setText": true,
          "RuntimeException.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "RuntimeException.__init__": 606
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "RuntimeException.__init__": 14398
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "RuntimeException.__init__": 37177
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "RuntimeException.__init__": "java.lang.RuntimeException.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\r\npackage com.mkyong.common;\r\n\r\nimport java.util.Properties;\r\nimport javax.mail.Message;\r\nimport javax.mail.MessagingException;\r\nimport javax.mail.PasswordAuthentication;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\nimport javax.mail.internet.InternetAddress;\r\nimport javax.mail.internet.MimeMessage;\r\n\r\npublic class SendMailSSL {\r\n\tpublic static void main(String[] args) {\r\n\t\tProperties props = new Properties();\r\n\t\tprops.put(\"mail.smtp.host\", \"smtp.gmail.com\");\r\n\t\tprops.put(\"mail.smtp.socketFactory.port\", \"465\");\r\n\t\tprops.put(\"mail.smtp.socketFactory.class\",\r\n\t\t\t\t\"javax.net.ssl.SSLSocketFactory\");\r\n\t\tprops.put(\"mail.smtp.auth\", \"true\");\r\n\t\tprops.put(\"mail.smtp.port\", \"465\");\r\n\r\n\t\tSession session = Session.getDefaultInstance(props,\r\n\t\t\tnew javax.mail.Authenticator() {\r\n\t\t\t\tprotected PasswordAuthentication getPasswordAuthentication() {\r\n\t\t\t\t\treturn new PasswordAuthentication(\"username\",\"password\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\ttry {\r\n\r\n\t\t\tMessage message = new MimeMessage(session);\r\n\t\t\tmessage.setFrom(new InternetAddress(\"from@no-spam.com\"));\r\n\t\t\tmessage.setRecipients(Message.RecipientType.TO,\r\n\t\t\t\t\tInternetAddress.parse(\"to@no-spam.com\"));\r\n\t\t\tmessage.setSubject(\"Testing Subject\");\r\n\t\t\tmessage.setText(\"Dear Mail Crawler,\" +\r\n\t\t\t\t\t\"\\n\\n No spam to my email, please!\");\r\n\r\n\t\t\tTransport.send(message);\r\n\r\n\t\t\tSystem.out.println(\"Done\");\r\n\r\n\t\t} catch (MessagingException e) {\r\n\t\t\tthrow new RuntimeException(e);\r\n\t\t}\r\n\t}\r\n}\r\n",
        "in_page_order": 3,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Message.setText": true,
          "RuntimeException.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "RuntimeException.__init__": 606
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "RuntimeException.__init__": 14398
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "RuntimeException.__init__": 37177
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "RuntimeException.__init__": "java.lang.RuntimeException.__init__"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "http://www.javapractices.com/topic/TopicAction.do?Id=144",
    "url position": 8,
    "segments": [
      {
        "code": "\r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\nimport java.nio.file.*;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\n\r\n/**\r\n* Simple demonstration of using the javax.mail API.\r\n*\r\n* Run from the command line. Please edit the implementation\r\n* to use correct email addresses and host name.\r\n*/\r\npublic final class Emailer {\r\n\r\n  public static void main( String... aArguments ){\r\n    Emailer emailer = new Emailer();\r\n    //the domains of these email addresses should be valid,\r\n    //or the example will fail:\r\n    emailer.sendEmail(\r\n      \"fromblah@blah.com\", \"toblah@blah.com\",\r\n       \"Testing 1-2-3\", \"blah blah blah\"\r\n    );\r\n   }\r\n\r\n  /**\r\n  * Send a single email.\r\n  */\r\n  public void sendEmail(\r\n    String aFromEmailAddr, String aToEmailAddr,\r\n    String aSubject, String aBody\r\n  ){\r\n    //Here, no Authenticator argument is used (it is null).\r\n    //Authenticators are used to prompt the user for user\r\n    //name and password.\r\n    Session session = Session.getDefaultInstance(fMailServerConfig, null);\r\n    MimeMessage message = new MimeMessage(session);\r\n    try {\r\n      //the \"from\" address may be set in code, or set in the\r\n      //config file under \"mail.from\" ; here, the latter style is used\r\n      //message.setFrom(new InternetAddress(aFromEmailAddr));\r\n      message.addRecipient(\r\n        Message.RecipientType.TO, new InternetAddress(aToEmailAddr)\r\n      );\r\n      message.setSubject(aSubject);\r\n      message.setText(aBody);\r\n      Transport.send(message);\r\n    }\r\n    catch (MessagingException ex){\r\n      System.err.println(\"Cannot send email. \" + ex);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Allows the config to be refreshed at runtime, instead of\r\n  * requiring a restart.\r\n  */\r\n  public static void refreshConfig() {\r\n    fMailServerConfig.clear();\r\n    fetchConfig();\r\n  }\r\n\r\n  // PRIVATE \r\n\r\n  private static Properties fMailServerConfig = new Properties();\r\n\r\n  static {\r\n    fetchConfig();\r\n  }\r\n\r\n  /**\r\n  * Open a specific text file containing mail server\r\n  * parameters, and populate a corresponding Properties object.\r\n  */\r\n  private static void fetchConfig() {\r\n    //This file contains the javax.mail config properties mentioned above.\r\n    Path path = Paths.get(\"C:\\\\Temp\\\\MyMailServer.txt\");\r\n    try (InputStream input = Files.newInputStream(path)) {\r\n      fMailServerConfig.load(input);\r\n    }\r\n    catch (IOException ex){\r\n      System.err.println(\"Cannot open and load mail server properties file.\");\r\n    }\r\n  }\r\n} \r\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Emailer.__init__": false,
          "Emailer.sendEmail": false,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "Properties.clear": true,
          "Properties.load": true
        },
        "APIsProjects": {
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "Properties.clear": 26,
          "Properties.load": 230
        },
        "APIsFiles": {
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "Properties.clear": 36,
          "Properties.load": 853
        },
        "APIsSnippets": {
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "Properties.clear": 47,
          "Properties.load": 1058
        },
        "APIsQualifiedNames": {
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "Properties.clear": "java.util.Properties.clear",
          "Properties.load": "java.util.Properties.load"
        },
        "API_Ratio": 0.7777777777777778
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "http://www.avajava.com/tutorials/lessons/how-do-i-send-an-email-in-java.html",
    "url position": 10,
    "segments": [
      {
        "code": "package test;\r\n\r\nimport java.util.Properties;\r\n\r\nimport javax.mail.Message;\r\nimport javax.mail.MessagingException;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\nimport javax.mail.internet.AddressException;\r\nimport javax.mail.internet.InternetAddress;\r\nimport javax.mail.internet.MimeMessage;\r\n\r\npublic class EmailTest {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tString mailSmtpHost = \"cakelycakes.com\";\r\n\r\n\t\tString mailTo = \"bigcakes@cakelycakes.com\";\r\n\t\tString mailCc = \"littlecakes@cakelycakes.com\";\r\n\t\tString mailFrom = \"me@here.there.everywhere\";\r\n\t\tString mailSubject = \"Email from Java\";\r\n\t\tString mailText = \"This is an email from Java\";\r\n\r\n\t\tsendEmail(mailTo, mailCc, mailFrom, mailSubject, mailText, mailSmtpHost);\r\n\t}\r\n\r\n\tpublic static void sendEmail(String to, String cc, String from, String subject, String text, String smtpHost) {\r\n\t\ttry {\r\n\t\t\tProperties properties = new Properties();\r\n\t\t\tproperties.put(\"mail.smtp.host\", smtpHost);\r\n\t\t\tSession emailSession = Session.getDefaultInstance(properties);\r\n\r\n\t\t\tMessage emailMessage = new MimeMessage(emailSession);\r\n\t\t\temailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(to));\r\n\t\t\temailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress(cc));\r\n\t\t\temailMessage.setFrom(new InternetAddress(from));\r\n\t\t\temailMessage.setSubject(subject);\r\n\t\t\temailMessage.setText(text);\r\n\r\n\t\t\temailSession.setDebug(true);\r\n\r\n\t\t\tTransport.send(emailMessage);\r\n\t\t} catch (AddressException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (MessagingException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.addRecipient": true,
          "Message.setFrom": true,
          "Message.setSubject": true,
          "Message.setText": true,
          "Session.setDebug": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.addRecipient": 6,
          "Message.setFrom": 20,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "Session.setDebug": 6
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.addRecipient": 11,
          "Message.setFrom": 39,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "Session.setDebug": 9
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.addRecipient": 11,
          "Message.setFrom": 51,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "Session.setDebug": 11
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.addRecipient": "javax.mail.Message.addRecipient",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "Session.setDebug": "javax.mail.Session.setDebug"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://stackoverflow.com/questions/3649014/send-email-using-java",
    "url position": 2,
    "segments": [
      {
        "code": "import com.sun.mail.smtp.SMTPTransport;\nimport java.security.Security;\nimport java.util.Date;\nimport java.util.Properties;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Session;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\n/**\n *\n * @author doraemon\n */\npublic class GoogleMail {\n    private GoogleMail() {\n    }\n\n    /**\n     * Send email using GMail SMTP server.\n     *\n     * @param username GMail username\n     * @param password GMail password\n     * @param recipientEmail TO recipient\n     * @param title title of the message\n     * @param message message to be sent\n     * @throws AddressException if the email address parse failed\n     * @throws MessagingException if the connection is dead or not in the connected state or if the message is not a MimeMessage\n     */\n    public static void Send(final String username, final String password, String recipientEmail, String title, String message) throws AddressException, MessagingException {\n        GoogleMail.Send(username, password, recipientEmail, \"\", title, message);\n    }\n\n    /**\n     * Send email using GMail SMTP server.\n     *\n     * @param username GMail username\n     * @param password GMail password\n     * @param recipientEmail TO recipient\n     * @param ccEmail CC recipient. Can be empty if there is no CC recipient\n     * @param title title of the message\n     * @param message message to be sent\n     * @throws AddressException if the email address parse failed\n     * @throws MessagingException if the connection is dead or not in the connected state or if the message is not a MimeMessage\n     */\n    public static void Send(final String username, final String password, String recipientEmail, String ccEmail, String title, String message) throws AddressException, MessagingException {\n        Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());\n        final String SSL_FACTORY = \"javax.net.ssl.SSLSocketFactory\";\n\n        // Get a Properties object\n        Properties props = System.getProperties();\n        props.setProperty(\"mail.smtps.host\", \"smtp.gmail.com\");\n        props.setProperty(\"mail.smtp.socketFactory.class\", SSL_FACTORY);\n        props.setProperty(\"mail.smtp.socketFactory.fallback\", \"false\");\n        props.setProperty(\"mail.smtp.port\", \"465\");\n        props.setProperty(\"mail.smtp.socketFactory.port\", \"465\");\n        props.setProperty(\"mail.smtps.auth\", \"true\");\n\n        /*\n        If set to false, the QUIT command is sent and the connection is immediately closed. If set \n        to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        ref :   http://java.sun.com/products/javamail/javadocs/com/sun/mail/smtp/package-summary.html\n                http://forum.java.sun.com/thread.jspa?threadID=5205249\n                smtpsend.java - demo program from javamail\n        */\n        props.put(\"mail.smtps.quitwait\", \"false\");\n\n        Session session = Session.getInstance(props, null);\n\n        // -- Create a new message --\n        final MimeMessage msg = new MimeMessage(session);\n\n        // -- Set the FROM and TO fields --\n        msg.setFrom(new InternetAddress(username + \"@gmail.com\"));\n        msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipientEmail, false));\n\n        if (ccEmail.length() > 0) {\n            msg.setRecipients(Message.RecipientType.CC, InternetAddress.parse(ccEmail, false));\n        }\n\n        msg.setSubject(title);\n        msg.setText(message, \"utf-8\");\n        msg.setSentDate(new Date());\n\n        SMTPTransport t = (SMTPTransport)session.getTransport(\"smtps\");\n\n        t.connect(\"smtp.gmail.com\", username, password);\n        t.sendMessage(msg, msg.getAllRecipients());      \n        t.close();\n    }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": "82",
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Provider.__init__": true,
          "Properties.setProperty": true,
          "Properties.put": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.setRecipients": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "Date.__init__": true,
          "MimeMessage.setSentDate": true,
          "Session.getTransport": true,
          "SMTPTransport.connect": false,
          "MimeMessage.getAllRecipients": true,
          "SMTPTransport.sendMessage": false,
          "SMTPTransport.close": false
        },
        "APIsProjects": {
          "Provider.__init__": 42,
          "Properties.setProperty": 184,
          "Properties.put": 168,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setRecipients": 9,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "Date.__init__": 441,
          "MimeMessage.setSentDate": 7,
          "Session.getTransport": 14,
          "MimeMessage.getAllRecipients": 3
        },
        "APIsFiles": {
          "Provider.__init__": 109,
          "Properties.setProperty": 1282,
          "Properties.put": 752,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setRecipients": 12,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "Date.__init__": 5276,
          "MimeMessage.setSentDate": 9,
          "Session.getTransport": 17,
          "MimeMessage.getAllRecipients": 4
        },
        "APIsSnippets": {
          "Provider.__init__": 189,
          "Properties.setProperty": 5579,
          "Properties.put": 2848,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setRecipients": 17,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "Date.__init__": 13241,
          "MimeMessage.setSentDate": 10,
          "Session.getTransport": 18,
          "MimeMessage.getAllRecipients": 4
        },
        "APIsQualifiedNames": {
          "Provider.__init__": "com.google.inject.Provider.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty",
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setRecipients": "javax.mail.internet.MimeMessage.setRecipients",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "Date.__init__": "java.util.Date.__init__",
          "MimeMessage.setSentDate": "javax.mail.internet.MimeMessage.setSentDate",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients"
        },
        "API_Ratio": 0.8125
      },
      {
        "code": "import com.google.api.client.util.Base64;\nimport com.google.api.services.gmail.Gmail;\nimport com.google.api.services.gmail.model.Message;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.util.Properties;\n\nimport javax.mail.MessagingException;\nimport javax.mail.Session;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\n/**\n *\n * @author doraemon\n */\npublic class GoogleMail {\n    private GoogleMail() {\n    }\n\n    private static MimeMessage createEmail(String to, String cc, String from, String subject, String bodyText) throws MessagingException {\n        Properties props = new Properties();\n        Session session = Session.getDefaultInstance(props, null);\n\n        MimeMessage email = new MimeMessage(session);\n        InternetAddress tAddress = new InternetAddress(to);\n        InternetAddress cAddress = cc.isEmpty() ? null : new InternetAddress(cc);\n        InternetAddress fAddress = new InternetAddress(from);\n\n        email.setFrom(fAddress);\n        if (cAddress != null) {\n            email.addRecipient(javax.mail.Message.RecipientType.CC, cAddress);\n        }\n        email.addRecipient(javax.mail.Message.RecipientType.TO, tAddress);\n        email.setSubject(subject);\n        email.setText(bodyText);\n        return email;\n    }\n\n    private static Message createMessageWithEmail(MimeMessage email) throws MessagingException, IOException {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        email.writeTo(baos);\n        String encodedEmail = Base64.encodeBase64URLSafeString(baos.toByteArray());\n        Message message = new Message();\n        message.setRaw(encodedEmail);\n        return message;\n    }\n\n    public static void Send(Gmail service, String recipientEmail, String ccEmail, String fromEmail, String title, String message) throws IOException, MessagingException {\n        Message m = createMessageWithEmail(createEmail(recipientEmail, ccEmail, fromEmail, title, message));\n        service.users().messages().send(\"me\", m).execute();\n    }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": "82",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "ByteArrayOutputStream.__init__": true,
          "MimeMessage.writeTo": true,
          "ByteArrayOutputStream.toByteArray": true,
          "Message.__init__": true,
          "Message.setRaw": false,
          "MimeMessage.recipientEmail": false,
          "Gmail.users": false
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "ByteArrayOutputStream.__init__": 447,
          "MimeMessage.writeTo": 3,
          "ByteArrayOutputStream.toByteArray": 418,
          "Message.__init__": 109
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "ByteArrayOutputStream.__init__": 3528,
          "MimeMessage.writeTo": 6,
          "ByteArrayOutputStream.toByteArray": 2862,
          "Message.__init__": 718
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "ByteArrayOutputStream.__init__": 6155,
          "MimeMessage.writeTo": 8,
          "ByteArrayOutputStream.toByteArray": 5168,
          "Message.__init__": 1904
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "ByteArrayOutputStream.__init__": "java.io.ByteArrayOutputStream.__init__",
          "MimeMessage.writeTo": "javax.mail.internet.MimeMessage.writeTo",
          "ByteArrayOutputStream.toByteArray": "java.io.ByteArrayOutputStream.toByteArray",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__"
        },
        "API_Ratio": 0.7857142857142857
      },
      {
        "code": "import com.google.api.client.auth.oauth2.Credential;\nimport com.google.api.client.extensions.jetty.auth.oauth2.LocalServerReceiver;\nimport com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;\nimport com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets;\nimport com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.json.gson.GsonFactory;\nimport com.google.api.client.util.store.FileDataStoreFactory;\nimport com.google.api.services.gmail.Gmail;\nimport com.google.api.services.gmail.GmailScopes;\nimport com.google.api.services.oauth2.Oauth2;\nimport com.google.api.services.oauth2.model.Userinfoplus;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.security.GeneralSecurityException;\nimport java.util.HashSet;\nimport java.util.Set;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.yccheok.jstock.engine.Pair;\n\n/**\n *\n * @author yccheok\n */\npublic class Utils {\n    /** Global instance of the JSON factory. */\n    private static final GsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();\n\n    /** Global instance of the HTTP transport. */\n    private static HttpTransport httpTransport;\n\n    private static final Log log = LogFactory.getLog(Utils.class);\n\n    static {\n        try {\n            // initialize the transport\n            httpTransport = GoogleNetHttpTransport.newTrustedTransport();\n\n        } catch (IOException ex) {\n            log.error(null, ex);\n        } catch (GeneralSecurityException ex) {\n            log.error(null, ex);\n        }\n    }\n\n    private static File getGmailDataDirectory() {\n        return new File(org.yccheok.jstock.gui.Utils.getUserDataDirectory() + \"authentication\" + File.separator + \"gmail\");\n    }\n\n    /**\n     * Send a request to the UserInfo API to retrieve the user's information.\n     *\n     * @param credentials OAuth 2.0 credentials to authorize the request.\n     * @return User's information.\n     * @throws java.io.IOException\n     */\n    public static Userinfoplus getUserInfo(Credential credentials) throws IOException\n    {\n        Oauth2 userInfoService =\n            new Oauth2.Builder(httpTransport, JSON_FACTORY, credentials).setApplicationName(\"JStock\").build();\n        Userinfoplus userInfo  = userInfoService.userinfo().get().execute();\n        return userInfo;\n    }\n\n    public static String loadEmail(File dataStoreDirectory)  {\n        File file = new File(dataStoreDirectory, \"email\");\n        try {\n            return new String(Files.readAllBytes(Paths.get(file.toURI())), \"UTF-8\");\n        } catch (IOException ex) {\n            log.error(null, ex);\n            return null;\n        }\n    }\n\n    public static boolean saveEmail(File dataStoreDirectory, String email) {\n        File file = new File(dataStoreDirectory, \"email\");\n        try {\n            //If the constructor throws an exception, the finally block will NOT execute\n            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), \"UTF-8\"));\n            try {\n                writer.write(email);\n            } finally {\n                writer.close();\n            }\n            return true;\n        } catch (IOException ex){\n            log.error(null, ex);\n            return false;\n        }\n    }\n\n    public static void logoutGmail() {\n        File credential = new File(getGmailDataDirectory(), \"StoredCredential\");\n        File email = new File(getGmailDataDirectory(), \"email\");\n        credential.delete();\n        email.delete();\n    }\n\n    public static Pair<Pair<Credential, String>, Boolean> authorizeGmail() throws Exception {\n        // Ask for only the permissions you need. Asking for more permissions will\n        // reduce the number of users who finish the process for giving you access\n        // to their accounts. It will also increase the amount of effort you will\n        // have to spend explaining to users what you are doing with their data.\n        // Here we are listing all of the available scopes. You should remove scopes\n        // that you are not actually using.\n        Set<String> scopes = new HashSet<>();\n\n        // We would like to display what email this credential associated to.\n        scopes.add(\"email\");\n\n        scopes.add(GmailScopes.GMAIL_SEND);\n\n        // load client secrets\n        GoogleClientSecrets clientSecrets = GoogleClientSecrets.load(Utils.JSON_FACTORY,\n            new InputStreamReader(Utils.class.getResourceAsStream(\"/assets/authentication/gmail/client_secrets.json\")));\n\n        return authorize(clientSecrets, scopes, getGmailDataDirectory());\n    }\n\n    /** Authorizes the installed application to access user's protected data.\n     * @return \n     * @throws java.lang.Exception */\n    private static Pair<Pair<Credential, String>, Boolean> authorize(GoogleClientSecrets clientSecrets, Set<String> scopes, File dataStoreDirectory) throws Exception {\n        // Set up authorization code flow.\n\n        GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder(\n            httpTransport, JSON_FACTORY, clientSecrets, scopes)\n            .setDataStoreFactory(new FileDataStoreFactory(dataStoreDirectory))\n            .build();\n        // authorize\n        return new MyAuthorizationCodeInstalledApp(flow, new LocalServerReceiver()).authorize(\"user\");\n    }\n\n    public static Gmail getGmail(Credential credential) {\n        Gmail service = new Gmail.Builder(httpTransport, JSON_FACTORY, credential).setApplicationName(\"JStock\").build();\n        return service;        \n    }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": "82",
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "File.__init__": true,
          "Builder.__init__": true,
          "Oauth2.userinfo": false,
          "File.toURI": true,
          "String.__init__": true,
          "Log.error": true,
          "FileOutputStream.__init__": true,
          "OutputStreamWriter.__init__": true,
          "BufferedWriter.__init__": true,
          "BufferedWriter.write": true,
          "BufferedWriter.close": true,
          "File": true,
          "File.delete": true,
          "Set.__init__": true,
          "Set.add": true,
          "InputStreamReader.__init__": true,
          "Exception.clientSecrets": false,
          "FileDataStoreFactory.__init__": false,
          "LocalServerReceiver.__init__": false,
          "MyAuthorizationCodeInstalledApp.__init__": false,
          "Exception": true
        },
        "APIsProjects": {
          "File.__init__": 591,
          "Builder.__init__": 360,
          "File.toURI": 157,
          "String.__init__": 525,
          "Log.error": 78,
          "FileOutputStream.__init__": 430,
          "OutputStreamWriter.__init__": 232,
          "BufferedWriter.__init__": 182,
          "BufferedWriter.write": 145,
          "BufferedWriter.close": 144,
          "File": 220,
          "File.delete": 369,
          "Set.__init__": 473,
          "Set.add": 494,
          "InputStreamReader.__init__": 463,
          "Exception": 319
        },
        "APIsFiles": {
          "File.__init__": 13065,
          "Builder.__init__": 3775,
          "File.toURI": 524,
          "String.__init__": 5322,
          "Log.error": 2878,
          "FileOutputStream.__init__": 2603,
          "OutputStreamWriter.__init__": 843,
          "BufferedWriter.__init__": 557,
          "BufferedWriter.write": 354,
          "BufferedWriter.close": 371,
          "File": 947,
          "File.delete": 2284,
          "Set.__init__": 8668,
          "Set.add": 9779,
          "InputStreamReader.__init__": 2683,
          "Exception": 5709
        },
        "APIsSnippets": {
          "File.__init__": 40468,
          "Builder.__init__": 8795,
          "File.toURI": 844,
          "String.__init__": 10364,
          "Log.error": 9072,
          "FileOutputStream.__init__": 3767,
          "OutputStreamWriter.__init__": 1158,
          "BufferedWriter.__init__": 828,
          "BufferedWriter.write": 1501,
          "BufferedWriter.close": 511,
          "File": 2880,
          "File.delete": 4120,
          "Set.__init__": 15689,
          "Set.add": 24820,
          "InputStreamReader.__init__": 3903,
          "Exception": 29060
        },
        "APIsQualifiedNames": {
          "File.__init__": "java.io.File.__init__",
          "Builder.__init__": "com.opengamma.bbg.cli.BloombergCliOptions.Builder.__init__",
          "File.toURI": "java.io.File.toURI",
          "String.__init__": "java.lang.String.__init__",
          "Log.error": "org.apache.juli.logging.Log.error",
          "FileOutputStream.__init__": "java.io.FileOutputStream.__init__",
          "OutputStreamWriter.__init__": "java.io.OutputStreamWriter.__init__",
          "BufferedWriter.__init__": "java.io.BufferedWriter.__init__",
          "BufferedWriter.write": "java.io.BufferedWriter.write",
          "BufferedWriter.close": "java.io.BufferedWriter.close",
          "File": "java.io.File.File",
          "File.delete": "java.io.File.delete",
          "Set.__init__": "java.util.Set.__init__",
          "Set.add": "java.util.Set.add",
          "InputStreamReader.__init__": "java.io.InputStreamReader.__init__",
          "Exception": "java.lang.Exception.Exception"
        },
        "API_Ratio": 0.7619047619047619
      },
      {
        "code": "import java.io.UnsupportedEncodingException;\nimport java.util.Properties;\n\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\n\npublic class SendMail {\n\n    public static void main(String[] args) {\n\n        final String username = \"your_user_name@gmail.com\";\n        final String password = \"yourpassword\";\n\n        Properties props = new Properties();\n        props.put(\"mail.smtp.starttls.enable\", \"true\");\n        props.put(\"mail.smtp.auth\", \"true\");\n        props.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n        props.put(\"mail.smtp.port\", \"587\");\n\n        Session session = Session.getInstance(props,\n          new javax.mail.Authenticator() {\n            protected PasswordAuthentication getPasswordAuthentication() {\n                return new PasswordAuthentication(username, password);\n            }\n          });\n\n        try {\n\n            Message message = new MimeMessage(session);\n            message.setFrom(new InternetAddress(\"your_user_name@gmail.com\"));\n            message.setRecipients(Message.RecipientType.TO,\n                InternetAddress.parse(\"to_email_address@domain.com\"));\n            message.setSubject(\"Testing Subject\");\n            message.setText(\"Dear Mail Crawler,\"\n                + \"\\n\\n No spam to my email, please!\");\n\n            Transport.send(message);\n\n            System.out.println(\"Done\");\n\n        } catch (MessagingException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "36",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Message.setText": true,
          "RuntimeException.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "RuntimeException.__init__": 606
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "RuntimeException.__init__": 14398
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "RuntimeException.__init__": 37177
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "RuntimeException.__init__": "java.lang.RuntimeException.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "import java.util.Date;\nimport java.util.Properties;\n\nimport javax.mail.Message;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\n\npublic class SendEmail extends Object{\n\npublic static void main(String [] args)\n{\n\n    try{\n\n        Properties props = new Properties();\n        props.put(\"mail.smtp.host\", \"smtp.mail.yahoo.com\"); // for gmail use smtp.gmail.com\n        props.put(\"mail.smtp.auth\", \"true\");\n        props.put(\"mail.debug\", \"true\"); \n        props.put(\"mail.smtp.starttls.enable\", \"true\");\n        props.put(\"mail.smtp.port\", \"465\");\n        props.put(\"mail.smtp.socketFactory.port\", \"465\");\n        props.put(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\n        props.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n\n        Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {\n\n            protected PasswordAuthentication getPasswordAuthentication() {\n                return new PasswordAuthentication(\"username@yahoo.com\", \"password\");\n            }\n        });\n\n        mailSession.setDebug(true); // Enable the debug mode\n\n        Message msg = new MimeMessage( mailSession );\n\n        //--[ Set the FROM, TO, DATE and SUBJECT fields\n        msg.setFrom( new InternetAddress( \"fromusername@yahoo.com\" ) );\n        msg.setRecipients( Message.RecipientType.TO,InternetAddress.parse(\"tousername@gmail.com\") );\n        msg.setSentDate( new Date());\n        msg.setSubject( \"Hello World!\" );\n\n        //--[ Create the body of the mail\n        msg.setText( \"Hello from my first e-mail sent with JavaMail\" );\n\n        //--[ Ask the Transport class to send our mail message\n        Transport.send( msg );\n\n    }catch(Exception E){\n        System.out.println( \"Oops something has gone pearshaped!\");\n        System.out.println( E );\n    }\n}\n}\n",
        "in_page_order": 3,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "16",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Session.setDebug": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Date.__init__": true,
          "Message.setSentDate": true,
          "Message.setSubject": true,
          "Message.setText": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Session.setDebug": 6,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Date.__init__": 441,
          "Message.setSentDate": 9,
          "Message.setSubject": 20,
          "Message.setText": 5
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Session.setDebug": 9,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Date.__init__": 5276,
          "Message.setSentDate": 12,
          "Message.setSubject": 38,
          "Message.setText": 7
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Session.setDebug": 11,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Date.__init__": 13241,
          "Message.setSentDate": 13,
          "Message.setSubject": 43,
          "Message.setText": 8
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Session.setDebug": "javax.mail.Session.setDebug",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Date.__init__": "java.util.Date.__init__",
          "Message.setSentDate": "javax.mail.Message.setSentDate",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "    final Email email = EmailBuilder.startingBlank();\n        from(\"lollypop\", \"lol.pop@somemail.com\");\n        to(\"C.Cane\", \"candycane@candyshop.org\");\n        withPlainText(\"We should meet up!\");\n        withHTMLText(\"<b>We should meet up!</b>\");\n        withSubject(\"hey\");\n\n    // starting 5.0.0 do the following using the MailerBuilder instead...\n    new Mailer(\"smtp.gmail.com\", 25, \"your user\", \"your password\", TransportStrategy.SMTP_TLS).sendMail(email);\n    new Mailer(\"smtp.gmail.com\", 587, \"your user\", \"your password\", TransportStrategy.SMTP_TLS).sendMail(email);\n    new Mailer(\"smtp.gmail.com\", 465, \"your user\", \"your password\", TransportStrategy.SMTP_SSL).sendMail(email);\n",
        "in_page_order": 5,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "5",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Mailer.__init__": false
        },
        "APIsProjects": {},
        "APIsFiles": {},
        "APIsSnippets": {},
        "APIsQualifiedNames": {},
        "API_Ratio": 0.0
      },
      {
        "code": "/*\n* Created on Feb 21, 2005\n*\n*/\n\nimport java.security.Security;\nimport java.util.Properties;\n\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\npublic class GoogleTest {\n\nprivate static final String SMTP_HOST_NAME = \"smtp.gmail.com\";\nprivate static final String SMTP_PORT = \"465\";\nprivate static final String emailMsgTxt = \"Test Message Contents\";\nprivate static final String emailSubjectTxt = \"A test from gmail\";\nprivate static final String emailFromAddress = \"\";\nprivate static final String SSL_FACTORY = \"javax.net.ssl.SSLSocketFactory\";\nprivate static final String[] sendTo = { \"\"};\n\n\npublic static void main(String args[]) throws Exception {\n\nSecurity.addProvider(new com.sun.net.ssl.internal.ssl.Provider());\n\nnew GoogleTest().sendSSLMessage(sendTo, emailSubjectTxt,\nemailMsgTxt, emailFromAddress);\nSystem.out.println(\"Sucessfully mail to All Users\");\n}\n\npublic void sendSSLMessage(String recipients[], String subject,\nString message, String from) throws MessagingException {\nboolean debug = true;\n\nProperties props = new Properties();\nprops.put(\"mail.smtp.hostTP_HOST_NAME);\nprops.put(\"mail.smtp.authrue\");\nprops.put(\"mail.debugrue\");\nprops.put(\"mail.smtp.portTP_PORT);\nprops.put(\"mail.smtp.socketFactory.portTP_PORT);\nprops.put(\"mail.smtp.socketFactory.classL_FACTORY);\nprops.put(\"mail.smtp.socketFactory.fallbackalse\");\n\nSession session = Session.getDefaultInstance(props,\nnew javax.mail.Authenticator() {\n\nprotected PasswordAuthentication getPasswordAuthentication() {\nreturn new PasswordAuthentication(\"xxxxxx\", \"xxxxxx\");\n}\n});\n\nsession.setDebug(debug);\n\nMessage msg = new MimeMessage(session);\nInternetAddress addressFrom = new InternetAddress(from);\nmsg.setFrom(addressFrom);\n\nInternetAddress[] addressTo = new InternetAddress[recipients.length];\nfor (int i = 0; i < recipients.length; i++) {\naddressTo = new InternetAddress(recipients);\n}\nmsg.setRecipients(Message.RecipientType.TO, addressTo);\n\n// Setting the Subject and Content Type\nmsg.setSubject(subject);\nmsg.setContent(message, \"text/plain\");\nTransport.send(msg);\n}\n}\n",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "4",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Provider.__init__": true,
          "GoogleTest.__init__": false,
          "MessagingException.sendTo": false
        },
        "APIsProjects": {
          "Provider.__init__": 42
        },
        "APIsFiles": {
          "Provider.__init__": 109
        },
        "APIsSnippets": {
          "Provider.__init__": 189
        },
        "APIsQualifiedNames": {
          "Provider.__init__": "com.google.inject.Provider.__init__"
        },
        "API_Ratio": 0.3333333333333333
      },
      {
        "code": "import javax.mail.*;\nimport javax.mail.internet.*;\nimport java.util.*;\n\npublic class MailSender\n{\nfinal String senderEmailID = \"typesendermailid@gmail.com\";\nfinal String senderPassword = \"typesenderpassword\";\nfinal String emailSMTPserver = \"smtp.gmail.com\";\nfinal String emailServerPort = \"465\";\nString receiverEmailID = null;\nstatic String emailSubject = \"Test Mail\";\nstatic String emailBody = \":)\";\npublic MailSender(String receiverEmailID, String emailSubject, String emailBody)\n{\nthis.receiverEmailID=receiverEmailID;\nthis.emailSubject=emailSubject;\nthis.emailBody=emailBody;\nProperties props = new Properties();\nprops.put(\"mail.smtp.user\",senderEmailID);\nprops.put(\"mail.smtp.host\", emailSMTPserver);\nprops.put(\"mail.smtp.port\", emailServerPort);\nprops.put(\"mail.smtp.starttls.enable\", \"true\");\nprops.put(\"mail.smtp.auth\", \"true\");\nprops.put(\"mail.smtp.socketFactory.port\", emailServerPort);\nprops.put(\"mail.smtp.socketFactory.class\",\"javax.net.ssl.SSLSocketFactory\");\nprops.put(\"mail.smtp.socketFactory.fallback\", \"false\");\nSecurityManager security = System.getSecurityManager();\ntry\n{\nAuthenticator auth = new SMTPAuthenticator();\nSession session = Session.getInstance(props, auth);\nMimeMessage msg = new MimeMessage(session);\nmsg.setText(emailBody);\nmsg.setSubject(emailSubject);\nmsg.setFrom(new InternetAddress(senderEmailID));\nmsg.addRecipient(Message.RecipientType.TO,\nnew InternetAddress(receiverEmailID));\nTransport.send(msg);\nSystem.out.println(\"Message send Successfully:)\");\n}\ncatch (Exception mex)\n{\nmex.printStackTrace();\n}\n}\npublic class SMTPAuthenticator extends javax.mail.Authenticator\n{\npublic PasswordAuthentication getPasswordAuthentication()\n{\nreturn new PasswordAuthentication(senderEmailID, senderPassword);\n}\n}\npublic static void main(String[] args)\n{     \nMailSender mailSender=new\nMailSender(\"typereceivermailid@gmail.com\",emailSubject,emailBody);\n}\n}\n",
        "in_page_order": 8,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "2",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "Authenticator.__init__": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setText": true,
          "MimeMessage.setSubject": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "PasswordAuthentication.__init__": true,
          "MailSender.__init__": false
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "Authenticator.__init__": 42,
          "MimeMessage.__init__": 26,
          "MimeMessage.setText": 9,
          "MimeMessage.setSubject": 19,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "PasswordAuthentication.__init__": 40
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "Authenticator.__init__": 55,
          "MimeMessage.__init__": 49,
          "MimeMessage.setText": 13,
          "MimeMessage.setSubject": 25,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "PasswordAuthentication.__init__": 53
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "Authenticator.__init__": 75,
          "MimeMessage.__init__": 79,
          "MimeMessage.setText": 20,
          "MimeMessage.setSubject": 34,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "PasswordAuthentication.__init__": 93
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__"
        },
        "API_Ratio": 0.9090909090909091
      },
      {
        "code": "import javax.mail.*;\nimport javax.mail.internet.*;\nimport java.util.*;\n\npublic class SendEmail {\n\n    final String senderEmail = \"your email address\";\n    final String senderPassword = \"your password\";\n    final String emailSMTPserver = \"smtp.gmail.com\";\n    final String emailServerPort = \"587\";\n    String receiverEmail = null;\n    String emailSubject = null;\n    String emailBody = null;\n\n    public SendEmail(String receiverEmail, String Subject, String message) {\n        this.receiverEmail = receiverEmail;\n        this.emailSubject = Subject;\n        this.emailBody = message;\n\n        Properties props = new Properties();\n        props.put(\"mail.smtp.user\", senderEmail);\n        props.put(\"mail.smtp.host\", emailSMTPserver);\n        props.put(\"mail.smtp.port\", emailServerPort);\n        props.put(\"mail.smtp.starttls.enable\", \"true\");\n        props.put(\"mail.smtp.auth\", \"true\");\n        props.put(\"mail.smtp.socketFactory.port\", emailServerPort);\n        props.put(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\n\n        SecurityManager security = System.getSecurityManager();\n\n        try {\n            Authenticator auth = new SMTPAuthenticator();\n            Session session = Session.getInstance(props, auth);\n\n            Message msg = new MimeMessage(session);\n            msg.setText(emailBody);\n            msg.setSubject(emailSubject);\n            msg.setFrom(new InternetAddress(senderEmail));\n            msg.addRecipient(Message.RecipientType.TO,\n                    new InternetAddress(receiverEmail));\n            Transport.send(msg);\n            System.out.println(\"send successfully\");\n        } catch (Exception ex) {\n            System.err.println(\"Error occurred while sending.!\");\n        }\n\n    }\n\n    private class SMTPAuthenticator extends javax.mail.Authenticator {\n\n        public PasswordAuthentication getPasswordAuthentication() {\n            return new PasswordAuthentication(senderEmail, senderPassword);\n        }\n    }\n\n    public static void main(String[] args) {\n        SendEmail send = new SendEmail(\"receiver email address\", \"subject\", \"message\");\n    }\n\n}\n",
        "in_page_order": 9,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "2",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "Authenticator.__init__": true,
          "Message.__init__": true,
          "Message.setText": true,
          "Message.setSubject": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.addRecipient": true,
          "PasswordAuthentication.__init__": true,
          "SendEmail.__init__": false
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "Authenticator.__init__": 42,
          "Message.__init__": 109,
          "Message.setText": 5,
          "Message.setSubject": 20,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.addRecipient": 6,
          "PasswordAuthentication.__init__": 40
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "Authenticator.__init__": 55,
          "Message.__init__": 718,
          "Message.setText": 7,
          "Message.setSubject": 38,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.addRecipient": 11,
          "PasswordAuthentication.__init__": 53
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "Authenticator.__init__": 75,
          "Message.__init__": 1904,
          "Message.setText": 8,
          "Message.setSubject": 43,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.addRecipient": 11,
          "PasswordAuthentication.__init__": 93
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "Message.setText": "javax.mail.Message.setText",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.addRecipient": "javax.mail.Message.addRecipient",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__"
        },
        "API_Ratio": 0.9090909090909091
      },
      {
        "code": "import javax.mail.*;\nimport javax.mail.internet.*;\nimport java.util.*;\n\npublic class SendEmail {\n\n   final String senderEmailID = \"Sender Email id\";\nfinal String senderPassword = \"Sender Pass word\";\nfinal String emailSMTPserver = \"smtp.gmail.com\";\nfinal String emailServerPort = \"465\";\nString receiverEmailID = null;\nstatic String emailSubject = \"Test Mail\";\nstatic String emailBody = \":)\";\npublic SendEmail(String receiverEmailID, String emailSubject, String emailBody)\n{\nthis.receiverEmailID=receiverEmailID;\nthis.emailSubject=emailSubject;\nthis.emailBody=emailBody;\nProperties props = new Properties();\nprops.put(\"mail.smtp.user\",senderEmailID);\nprops.put(\"mail.smtp.host\", emailSMTPserver);\nprops.put(\"mail.smtp.port\", emailServerPort);\nprops.put(\"mail.smtp.starttls.enable\", \"true\");\nprops.put(\"mail.smtp.auth\", \"true\");\nprops.put(\"mail.smtp.socketFactory.port\", emailServerPort);\nprops.put(\"mail.smtp.socketFactory.class\",\"javax.net.ssl.SSLSocketFactory\");\nprops.put(\"mail.smtp.socketFactory.fallback\", \"false\");\nSecurityManager security = System.getSecurityManager();\ntry\n{\nAuthenticator auth = new SMTPAuthenticator();\nSession session = Session.getInstance(props, auth);\nMimeMessage msg = new MimeMessage(session);\nmsg.setText(emailBody);\nmsg.setSubject(emailSubject);\nmsg.setFrom(new InternetAddress(senderEmailID));\nmsg.addRecipient(Message.RecipientType.TO,\nnew InternetAddress(receiverEmailID));\nTransport.send(msg);\nSystem.out.println(\"Message send Successfully:)\");\n}\ncatch (Exception mex)\n{\nmex.printStackTrace();\n}\n}\npublic class SMTPAuthenticator extends javax.mail.Authenticator\n{\npublic PasswordAuthentication getPasswordAuthentication()\n{\nreturn new PasswordAuthentication(senderEmailID, senderPassword);\n}\n}\n    public static void main(String[] args) {\n       SendEmail mailSender;\n        mailSender = new SendEmail(\"Receiver Email id\",\"Testing Code 2 example\",\"Testing Code Body yess\");\n    }\n\n}\n",
        "in_page_order": 10,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "2",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "Authenticator.__init__": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setText": true,
          "MimeMessage.setSubject": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "PasswordAuthentication.__init__": true,
          "SendEmail.__init__": false
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "Authenticator.__init__": 42,
          "MimeMessage.__init__": 26,
          "MimeMessage.setText": 9,
          "MimeMessage.setSubject": 19,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "PasswordAuthentication.__init__": 40
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "Authenticator.__init__": 55,
          "MimeMessage.__init__": 49,
          "MimeMessage.setText": 13,
          "MimeMessage.setSubject": 25,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "PasswordAuthentication.__init__": 53
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "Authenticator.__init__": 75,
          "MimeMessage.__init__": 79,
          "MimeMessage.setText": 20,
          "MimeMessage.setSubject": 34,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "PasswordAuthentication.__init__": 93
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__"
        },
        "API_Ratio": 0.9090909090909091
      },
      {
        "code": "import java.util.*;\n\nimport javax.mail.*;\nimport javax.mail.internet.*;\n\n//import javax.activation.*;\n\npublic class SendEmail {\n\n    private static String SMPT_HOSTNAME = \"\";\n    private static String USERNAME = \"\";\n    private static String PASSWORD = \"\";\n\n    public static void main(String[] args) {\n\n        // Recipient's email ID needs to be mentioned.\n        String to = \"abcd@gmail.com\";\n\n        // Sender's email ID needs to be mentioned\n        String from = \"web@gmail.com\";\n\n        // Assuming you are sending email from localhost\n        // String host = \"localhost\";\n\n        // Get system properties\n        Properties properties = System.getProperties();\n\n        // Setup mail server\n        properties.setProperty(\"mail.smtp.host\", SMPT_HOSTNAME);\n\n        // Get the default Session object.\n        // Session session = Session.getDefaultInstance(properties);\n\n        // create a session with an Authenticator\n        Session session = Session.getInstance(properties, new Authenticator() {\n            @Override\n            protected PasswordAuthentication getPasswordAuthentication() {\n                return new PasswordAuthentication(USERNAME, PASSWORD);\n            }\n        });\n\n        try {\n            // Create a default MimeMessage object.\n            MimeMessage message = new MimeMessage(session);\n\n            // Set From: header field of the header.\n            message.setFrom(new InternetAddress(from));\n\n            // Set To: header field of the header.\n            message.addRecipient(Message.RecipientType.TO, new InternetAddress(\n                    to));\n\n            // Set Subject: header field\n            message.setSubject(\"This is the Subject Line!\");\n\n            // Now set the actual message\n            message.setText(\"This is actual message\");\n\n            // Send message\n            Transport.send(message);\n            System.out.println(\"Sent message successfully....\");\n        } catch (MessagingException mex) {\n            mex.printStackTrace();\n        }\n    }\n}\n",
        "in_page_order": 12,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "1",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Properties props = new Properties();\n  props.put(\"mail.smtp.auth\", \"true\");\n  props.put(\"mail.smtp.starttls.enable\", \"true\");\n  props.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n  props.put(\"mail.smtp.port\", \"587\");\n",
        "in_page_order": 15,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "-2",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://stackoverflow.com/questions/11356237/sending-mail-from-yahoo-id-to-other-email-ids-using-javamail-api",
    "url position": 3,
    "segments": [
      {
        "code": "public class SendMail {\n\n    String host, port, emailid,username, password;\n    Properties props = System.getProperties();\n    Session l_session = null;\n\n    public BSendMail() {\n        host = \"smtp.mail.yahoo.com\";\n        port = \"587\";\n        emailid = \"a@yahoo.com\";\n        username = \"a\";\n        password = \"pwd\";\n\n        emailSettings();\n        createSession();\n        sendMessage(\"a@yahoo.com\", \"rahul@gmail.com\",\"Test\",\"test Mail\");\n    }\n\n    public void emailSettings() {\n        props.put(\"mail.smtp.host\", host);\n        props.put(\"mail.smtp.auth\", \"true\");\n        props.put(\"mail.debug\", \"false\");\n        props.put(\"mail.smtp.port\", port);\n//        props.put(\"mail.smtp.socketFactory.port\", port);\n//        props.put(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\n//        props.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n\n    }\n\n    public void createSession() {\n\n        l_session = Session.getInstance(props,\n                new javax.mail.Authenticator() {\n                    protected PasswordAuthentication getPasswordAuthentication() {\n                        return new PasswordAuthentication(username, password);\n                    }\n                });\n\n        l_session.setDebug(true); // Enable the debug mode\n\n    }\n\n    public boolean sendMessage(String emailFromUser, String toEmail, String subject, String msg) {\n        //System.out.println(\"Inside sendMessage 2 :: >> \");\n        try {\n            //System.out.println(\"Sending Message *********************************** \");\n            MimeMessage message = new MimeMessage(l_session);\n            emailid = emailFromUser;\n            //System.out.println(\"mail id in property ============= >>>>>>>>>>>>>> \" + emailid);\n            //message.setFrom(new InternetAddress(emailid));\n            message.setFrom(new InternetAddress(this.emailid));\n\n            message.addRecipient(Message.RecipientType.TO, new InternetAddress(toEmail));\n            message.addRecipient(Message.RecipientType.BCC, new InternetAddress(AppConstants.fromEmail));\n            message.setSubject(subject);\n            message.setContent(msg, \"text/html\");\n\n            //message.setText(msg);\n            Transport.send(message);\n            System.out.println(\"Message Sent\");\n        } catch (MessagingException mex) {\n            mex.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }//end catch block\n        return true;\n    }\n\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": true,
        "answer_votes": "2",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Session.setDebug": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Session.setDebug": 6,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Session.setDebug": 9,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Session.setDebug": 11,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Session.setDebug": "javax.mail.Session.setDebug",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "package ripon.java.mail;\nimport java.util.*;\nimport javax.mail.*;\nimport javax.mail.internet.*;\n\npublic class SendFromYahoo\n{\npublic static void main(String [] args)\n{    \n    // Sender's email ID needs to be mentioned\n     String from = \"test123@yahoo.com\";\n     String pass =\"test123\";\n    // Recipient's email ID needs to be mentioned.\n   String to = \"riponalwasim@yahoo.com\";\n   String host = \"smtp.mail.yahoo.com\";\n\n   // Get system properties\n   Properties properties = System.getProperties();\n   // Setup mail server\n   properties.put(\"mail.smtp.starttls.enable\", \"true\");\n   properties.put(\"mail.smtp.host\", host);\n   properties.put(\"mail.smtp.user\", from);\n   properties.put(\"mail.smtp.password\", pass);\n   properties.put(\"mail.smtp.port\", \"587\");\n   properties.put(\"mail.smtp.auth\", \"true\");\n\n   // Get the default Session object.\n   Session session = Session.getDefaultInstance(properties);\n\n   try{\n      // Create a default MimeMessage object.\n      MimeMessage message = new MimeMessage(session);\n\n      // Set From: header field of the header.\n      message.setFrom(new InternetAddress(from));\n\n      // Set To: header field of the header.\n      message.addRecipient(Message.RecipientType.TO,\n                               new InternetAddress(to));\n\n      // Set Subject: header field\n      message.setSubject(\"This is the Subject Line!\");\n\n      // Now set the actual message\n      message.setText(\"This is actual message\");\n\n      // Send message\n      Transport transport = session.getTransport(\"smtp\");\n      transport.connect(host, from, pass);\n      transport.sendMessage(message, message.getAllRecipients());\n      transport.close();\n      System.out.println(\"Sent message successfully....\");\n   }catch (MessagingException mex) {\n      mex.printStackTrace();\n   }\n}\n}\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "4",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "MimeMessage.getAllRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "MimeMessage.getAllRecipients": 3,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.put": 752,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/javamail/javamail.html",
    "url position": 11,
    "segments": [
      {
        "code": "javax.mail.internet.InternetAddress ia = new javax.mail.internet.InternetAddress(to);\r\ntry {\r\n    ia.validate();\r\n} catch (javax.mail.internet.AddressException ae) {\r\n\r\n}",
        "in_page_order": 4,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "InternetAddress.__init__": true,
          "InternetAddress.validate": true
        },
        "APIsProjects": {
          "InternetAddress.__init__": 34,
          "InternetAddress.validate": 3
        },
        "APIsFiles": {
          "InternetAddress.__init__": 69,
          "InternetAddress.validate": 3
        },
        "APIsSnippets": {
          "InternetAddress.__init__": 183,
          "InternetAddress.validate": 3
        },
        "APIsQualifiedNames": {
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "InternetAddress.validate": "javax.mail.internet.InternetAddress.validate"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Properties props = new Properties();\r\nprops.put(\"mail.smtp.host\", host);\r\nprops.put(\"mail.smtp.port\", port);\r\nswitch (protocol) {\r\n    case SMTPS:\r\n        props.put(\"mail.smtp.ssl.enable\", true);\r\n        break;\r\n    case TLS:\r\n        props.put(\"mail.smtp.starttls.enable\", true);\r\n        break;\r\n}",
        "in_page_order": 8,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Authenticator authenticator = null;\r\nif (auth) {\r\n    props.put(\"mail.smtp.auth\", true);\r\n    authenticator = new Authenticator() {\r\n        private PasswordAuthentication pa = new PasswordAuthentication(username, password);\r\n        @Override\r\n        public PasswordAuthentication getPasswordAuthentication() {\r\n            return pa;\r\n        }\r\n    };\r\n}",
        "in_page_order": 9,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true
        },
        "APIsProjects": {
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42
        },
        "APIsFiles": {
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55
        },
        "APIsSnippets": {
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75
        },
        "APIsQualifiedNames": {
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Session session = Session.getInstance(props, authenticator);\r\nsession.setDebug(debug);",
        "in_page_order": 10,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Session.setDebug": true
        },
        "APIsProjects": {
          "Session.setDebug": 6
        },
        "APIsFiles": {
          "Session.setDebug": 9
        },
        "APIsSnippets": {
          "Session.setDebug": 11
        },
        "APIsQualifiedNames": {
          "Session.setDebug": "javax.mail.Session.setDebug"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "MimeMessage message = new MimeMessage(session);\r\ntry {\r\n    message.setFrom(new InternetAddress(from));\r\n    InternetAddress[] address = {new InternetAddress(to)};\r\n    message.setRecipients(Message.RecipientType.TO, address);\r\n    message.setSubject(subject);\r\n    message.setSentDate(new Date());\r\n    message.setText(body);\r\n    Transport.send(message);\r\n} catch (MessagingException ex) {\r\n    ex.printStackTrace();\r\n}",
        "in_page_order": 11,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.setRecipients": true,
          "MimeMessage.setSubject": true,
          "Date.__init__": true,
          "MimeMessage.setSentDate": true,
          "MimeMessage.setText": true
        },
        "APIsProjects": {
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setRecipients": 9,
          "MimeMessage.setSubject": 19,
          "Date.__init__": 441,
          "MimeMessage.setSentDate": 7,
          "MimeMessage.setText": 9
        },
        "APIsFiles": {
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setRecipients": 12,
          "MimeMessage.setSubject": 25,
          "Date.__init__": 5276,
          "MimeMessage.setSentDate": 9,
          "MimeMessage.setText": 13
        },
        "APIsSnippets": {
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setRecipients": 17,
          "MimeMessage.setSubject": 34,
          "Date.__init__": 13241,
          "MimeMessage.setSentDate": 10,
          "MimeMessage.setText": 20
        },
        "APIsQualifiedNames": {
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setRecipients": "javax.mail.internet.MimeMessage.setRecipients",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "Date.__init__": "java.util.Date.__init__",
          "MimeMessage.setSentDate": "javax.mail.internet.MimeMessage.setSentDate",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Multipart multipart = new MimeMultipart(\"alternative\");",
        "in_page_order": 12,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Multipart.__init__": true
        },
        "APIsProjects": {
          "Multipart.__init__": 8
        },
        "APIsFiles": {
          "Multipart.__init__": 9
        },
        "APIsSnippets": {
          "Multipart.__init__": 14
        },
        "APIsQualifiedNames": {
          "Multipart.__init__": "javax.mail.Multipart.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "MimeBodyPart textPart = new MimeBodyPart();\r\nString textContent = \"Hi, Nice to meet you!\";\r\ntextPart.setText(textContent);",
        "in_page_order": 13,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setText": true
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setText": 4
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setText": 5
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setText": 6
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setText": "javax.mail.internet.MimeBodyPart.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "MimeBodyPart htmlPart = new MimeBodyPart();\r\nString htmlContent = \"<html><h1>Hi</h1><p>Nice to meet you!</p></html>\";\r\nhtmlPart.setContent(htmlContent, \"text/html\");",
        "in_page_order": 14,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setContent": true
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setContent": 12
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setContent": 14
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setContent": 26
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setContent": "javax.mail.internet.MimeBodyPart.setContent"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://www.geeksforgeeks.org/send-email-using-java-program/",
    "url position": 16,
    "segments": [
      {
        "code": "\r\n// Java program to send email\r\n\r\nimport java.util.*;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\nimport javax.activation.*;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\n\r\n\r\npublic class SendEmail \r\n{\r\n\r\n   public static void main(String [] args) \r\n   {    \r\n      // email ID of Recipient.\r\n      String recipient = \"recipient@gmail.com\";\r\n\r\n      // email ID of  Sender.\r\n      String sender = \"sender@gmail.com\";\r\n\r\n      // using host as localhost\r\n      String host = \"127.0.0.1\";\r\n\r\n      // Getting system properties\r\n      Properties properties = System.getProperties();\r\n\r\n      // Setting up mail server\r\n      properties.setProperty(\"mail.smtp.host\", host);\r\n\r\n      // creating session object to get properties\r\n      Session session = Session.getDefaultInstance(properties);\r\n\r\n      try \r\n      {\r\n         // MimeMessage object.\r\n         MimeMessage message = new MimeMessage(session);\r\n\r\n         // Set From Field: adding senders email to from field.\r\n         message.setFrom(new InternetAddress(sender));\r\n\r\n         // Set To Field: adding recipient's email to from field.\r\n         message.addRecipient(Message.RecipientType.TO, new InternetAddress(recipient));\r\n\r\n         // Set Subject: subject of the email\r\n         message.setSubject(\"This is Suject\");\r\n\r\n         // set body of the email.\r\n         message.setText(\"This is a test mail\");\r\n\r\n         // Send email.\r\n         Transport.send(message);\r\n         System.out.println(\"Mail successfully sent\");\r\n      }\r\n      catch (MessagingException mex) \r\n      {\r\n         mex.printStackTrace();\r\n      }\r\n   }\r\n}\r\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\r\n// Java program to send email\r\n// with HTML templates\r\n\r\nimport java.util.*;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\nimport javax.activation.*;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\n\r\n\r\npublic class SendEmail \r\n{\r\n\r\n   public static void main(String [] args) \r\n   {    \r\n      // email ID of Recipient.\r\n      String recipient = \"recipient@gmail.com\";\r\n\r\n      // email ID of  Sender.\r\n      String sender = \"sender@gmail.com\";\r\n\r\n      // using host as localhost\r\n      String host = \"127.0.0.1\";\r\n\r\n      // Getting system properties\r\n      Properties properties = System.getProperties();\r\n\r\n      // Setting up mail server\r\n      properties.setProperty(\"mail.smtp.host\", host);\r\n\r\n      // creating session object to get properties\r\n      Session session = Session.getDefaultInstance(properties);\r\n\r\n      try \r\n      {\r\n         // MimeMessage object.\r\n         MimeMessage message = new MimeMessage(session);\r\n\r\n         // Set From Field: adding senders email to from field.\r\n         message.setFrom(new InternetAddress(sender));\r\n\r\n         // Set To Field: adding recipient's email to from field.\r\n         message.addRecipient(Message.RecipientType.TO, new InternetAddress(recipient));\r\n\r\n         // Set Subject: subject of the email\r\n         message.setSubject(\"This is Suject\");\r\n\r\n         // set body of the email.\r\n         message.setContent(\"<h1>This is a HTML text</h1>\",\"text/html\");\r\n\r\n         // Send email.\r\n         Transport.send(message);\r\n         System.out.println(\"Mail successfully sent\");\r\n      }\r\n      catch (MessagingException mex) \r\n      {\r\n         mex.printStackTrace();\r\n      }\r\n   }\r\n}\r\n",
        "in_page_order": 5,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://stackoverflow.com/questions/5068827/how-do-i-send-an-html-email",
    "url position": 4,
    "segments": [
      {
        "code": "Properties props = new Properties();\n  props.put(\"mail.smtp.auth\", \"true\");\n  props.put(\"mail.smtp.starttls.enable\", \"true\");\n  props.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n  props.put(\"mail.smtp.port\", \"587\");\n",
        "in_page_order": 7,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "0",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "package com.action;\nimport javax.mail.Multipart;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.MimeMessage;\nimport javax.mail.internet.MimeMultipart;\nimport com.opensymphony.xwork2.Action;\nimport com.bo.LoginBo;\nimport com.manager.AttendanceManager;\nimport com.manager.LoginManager;\nimport com.manager.SSLEmail;\nimport com.vo.AttendanceManagementVo;\nimport com.vo.LeaveManagementVo;\nimport com.vo.LoginVo;\nimport com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimeBodyPart;\n\npublic class InsertApplyLeaveAction implements Action {\nprivate AttendanceManagementVo attendanceManagementVo;\n\npublic AttendanceManagementVo getAttendanceManagementVo() {\n    return attendanceManagementVo;\n}\n\npublic void setAttendanceManagementVo(\n        AttendanceManagementVo attendanceManagementVo) {\n    this.attendanceManagementVo = attendanceManagementVo;\n}\n\n@Override\npublic String execute() throws Exception {\n    String empId=attendanceManagementVo.getEmpId();\n    String leaveType=attendanceManagementVo.getLeaveType();\n    String leaveStartDate=attendanceManagementVo.getLeaveStartDate();\n    String leaveEndDate=attendanceManagementVo.getLeaveEndDate();\n    String reason=attendanceManagementVo.getReason();\n    String employeeName=attendanceManagementVo.getEmployeeName();\n    String manageEmployeeId=empId;\n    float totalLeave=attendanceManagementVo.getTotalLeave();\n    String leaveStatus=attendanceManagementVo.getLeaveStatus();\n//  String approverId=attendanceManagementVo.getApproverId();\n    attendanceManagementVo.setEmpId(empId);\n    attendanceManagementVo.setLeaveType(leaveType);\n    attendanceManagementVo.setLeaveStartDate(leaveStartDate);\n    attendanceManagementVo.setLeaveEndDate(leaveEndDate);\n    attendanceManagementVo.setReason(reason);\n    attendanceManagementVo.setManageEmployeeId(manageEmployeeId);\n    attendanceManagementVo.setTotalLeave(totalLeave);\n    attendanceManagementVo.setLeaveStatus(leaveStatus);\n    attendanceManagementVo.setEmployeeName(employeeName);\n\n    AttendanceManagementVo attendanceManagementVo1=new AttendanceManagementVo();\n    AttendanceManager attendanceManager=new AttendanceManager();    \n    attendanceManagementVo1=attendanceManager.insertLeaveData(attendanceManagementVo);\n    attendanceManagementVo1=attendanceManager.getApproverId(attendanceManagementVo);\n    String approverId=attendanceManagementVo1.getApproverId();\n    String approverEmployeeName=attendanceManagementVo1.getApproverEmployeeName();\n    LoginVo loginVo=new LoginVo();\n    LoginManager loginManager=new LoginManager();\n    loginVo.setEmpId(approverId);\n    loginVo=loginManager.getEmailAddress(loginVo);\n    String emailAddress=loginVo.getEmailAddress();\n    String subject=\"LEAVE IS SUBMITTED FOR AN APPROVAL BY THE  - \" +employeeName;\n//  String body =   \"Hi \"+approverEmployeeName+\" ,\" + \"\\n\" + \"\\n\" +\n//          leaveType+\" is Applied for \"+totalLeave+\" days by the  \" +employeeName+ \"\\n\" + \"\\n\" +\n//          \" Employee Name: \" + employeeName +\"\\n\" +\n//          \" Applied Leave Type: \" + leaveType +\"\\n\" +\n//          \" Total Days: \" + totalLeave +\"\\n\" + \"\\n\" +\n  //        \" To view Leave History, Please visit the employee poratal or copy and paste the below link in your browser: \" + \"\\n\" +  \n\n  //        \" NOTE : This is an automated message. Please do not reply.\"+ \"\\n\" +  \"\\n\" +                        \n\n    Session session = null;\n\n    MimeBodyPart messageBodyPart = new MimeBodyPart();\n    MimeMessage message = new MimeMessage(session);\n    Multipart multipart = new MimeMultipart();\n\n    String htmlText = (\"<div style=\\\"color:red;\\\">BRIDGEYE</div>\");\n    messageBodyPart.setContent(htmlText, \"text/html\");\n\n    loginVo.setHtmlBody(messageBodyPart);\n\n    message.setContent(multipart);\n    Transport.send(message);\n\n\n    loginVo.setSubject(subject);\n//  loginVo.setBody(body);\n    loginVo.setEmailAddress(emailAddress);\n    SSLEmail sSSEmail=new SSLEmail();\n    sSSEmail.sendEmail(loginVo);\n    return \"success\";\n }\n\n }\n",
        "in_page_order": 8,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "0",
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "AttendanceManagementVo.getEmpId": false,
          "AttendanceManagementVo.getLeaveType": false,
          "AttendanceManagementVo.getLeaveStartDate": false,
          "AttendanceManagementVo.getLeaveEndDate": false,
          "AttendanceManagementVo.getReason": false,
          "AttendanceManagementVo.getEmployeeName": false,
          "AttendanceManagementVo.getTotalLeave": false,
          "AttendanceManagementVo.getLeaveStatus": false,
          "AttendanceManagementVo.setEmpId": false,
          "AttendanceManagementVo.setLeaveType": false,
          "AttendanceManagementVo.setLeaveStartDate": false,
          "AttendanceManagementVo.setLeaveEndDate": false,
          "AttendanceManagementVo.setReason": false,
          "AttendanceManagementVo.setManageEmployeeId": false,
          "AttendanceManagementVo.setTotalLeave": false,
          "AttendanceManagementVo.setLeaveStatus": false,
          "AttendanceManagementVo.setEmployeeName": false,
          "AttendanceManagementVo.__init__": false,
          "AttendanceManager.__init__": false,
          "AttendanceManager.insertLeaveData": false,
          "AttendanceManager.getApproverId": false,
          "AttendanceManagementVo.getApproverId": false,
          "AttendanceManagementVo.getApproverEmployeeName": false,
          "LoginVo.__init__": false,
          "LoginManager.__init__": false,
          "LoginVo.setEmpId": false,
          "LoginManager.getEmailAddress": false,
          "LoginVo.getEmailAddress": false,
          "MimeBodyPart.__init__": true,
          "MimeMessage.__init__": true,
          "Multipart.__init__": true,
          "MimeBodyPart.setContent": true,
          "LoginVo.setHtmlBody": false,
          "MimeMessage.setContent": true,
          "LoginVo.setSubject": false,
          "LoginVo.setEmailAddress": false,
          "SSLEmail.__init__": false,
          "SSLEmail.sendEmail": false
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18,
          "MimeMessage.__init__": 26,
          "Multipart.__init__": 8,
          "MimeBodyPart.setContent": 12,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31,
          "MimeMessage.__init__": 49,
          "Multipart.__init__": 9,
          "MimeBodyPart.setContent": 14,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93,
          "MimeMessage.__init__": 79,
          "Multipart.__init__": 14,
          "MimeBodyPart.setContent": 26,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "MimeBodyPart.setContent": "javax.mail.internet.MimeBodyPart.setContent",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 0.13157894736842105
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://javaee.github.io/javamail/FAQ",
    "url position": 17,
    "segments": [
      {
        "code": "\n    Properties props = (Properties)System.getProperties().clone();\n    props.put(\"mail.smtp.host\", \"whatever\");\n    // set as properties as needed\n    Session session = Session.getInstance(props, null);\n",
        "in_page_order": 3,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true
        },
        "APIsProjects": {
          "Properties.put": 168
        },
        "APIsFiles": {
          "Properties.put": 752
        },
        "APIsSnippets": {
          "Properties.put": 2848
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    String host = \"imap.gmail.com\";\n    String username = \"user\";\n    String password = \"passwd\";\n    Properties props = new Properties();\n    props.setProperty(\"mail.imap.ssl.enable\", \"true\");\n    // set any other needed mail.imap.* properties here\n    Session session = Session.getInstance(props);\n    Store store = session.getStore(\"imap\");\n    store.connect(host, username, password);\n",
        "in_page_order": 5,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.setProperty": true,
          "Session.getStore": true,
          "Store.connect": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.setProperty": 184,
          "Session.getStore": 9,
          "Store.connect": 11
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.setProperty": 1282,
          "Session.getStore": 13,
          "Store.connect": 30
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.setProperty": 5579,
          "Session.getStore": 17,
          "Store.connect": 32
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty",
          "Session.getStore": "javax.mail.Session.getStore",
          "Store.connect": "javax.mail.Store.connect"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    String host = \"smtp.gmail.com\";\n    String username = \"user\";\n    String password = \"passwd\";\n    Properties props = new Properties();\n    props.setProperty(\"mail.smtp.ssl.enable\", \"true\");\n    // set any other needed mail.smtp.* properties here\n    Session session = Session.getInstance(props);\n    MimeMessage msg = new MimeMessage(session);\n    // set the message content here\n    Transport.send(msg, username, password);\n",
        "in_page_order": 7,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.setProperty": true,
          "MimeMessage.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.setProperty": 184,
          "MimeMessage.__init__": 26
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.setProperty": 1282,
          "MimeMessage.__init__": 49
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.setProperty": 5579,
          "MimeMessage.__init__": 79
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    String host = \"smtp-mail.outlook.com\";\n    String username = \"user@outlook.com\";\n    String password = \"passwd\";\n    Properties props = new Properties();\n    props.put(\"mail.smtp.starttls.enable\", \"true\");\n    Session session = Session.getInstance(props);\n    MimeMessage msg = new MimeMessage(session);\n    // set the message content here\n    Transport.send(msg, username, password);\n",
        "in_page_order": 14,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "MimeMessage.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "MimeMessage.__init__": 26
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "MimeMessage.__init__": 49
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "MimeMessage.__init__": 79
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    boolean hasAttachments(Message msg) throws MessagingException {\n\tif (msg.isMimeType(\"multipart/mixed\")) {\n\t    Multipart mp = (Multipart)msg.getContent();\n\t    if (mp.getCount() > 1)\n\t\treturn true;\n\t}\n\treturn false;\n    }\n",
        "in_page_order": 15,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Message.isMimeType": false,
          "Message.getContent": true,
          "Multipart.getCount": true
        },
        "APIsProjects": {
          "Message.getContent": 11,
          "Multipart.getCount": 11
        },
        "APIsFiles": {
          "Message.getContent": 51,
          "Multipart.getCount": 17
        },
        "APIsSnippets": {
          "Message.getContent": 121,
          "Multipart.getCount": 31
        },
        "APIsQualifiedNames": {
          "Message.getContent": "javax.mail.Message.getContent",
          "Multipart.getCount": "javax.mail.Multipart.getCount"
        },
        "API_Ratio": 0.6666666666666666
      },
      {
        "code": "\n\tMessage[] unreadMessages = folder.search(\n\t\tnew FlagTerm(new Flags(Flags.Flag.SEEN), false));\n",
        "in_page_order": 17,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Flags.__init__": true,
          "FlagTerm.__init__": false
        },
        "APIsProjects": {
          "Flags.__init__": 9
        },
        "APIsFiles": {
          "Flags.__init__": 23
        },
        "APIsSnippets": {
          "Flags.__init__": 57
        },
        "APIsQualifiedNames": {
          "Flags.__init__": "javax.mail.Flags.__init__"
        },
        "API_Ratio": 0.5
      },
      {
        "code": "\n    File file = new File(\"filename\");\n    DataSource ds = new FileDataSource(file) {\n\tpublic String getContentType() {\n\t    return \"mytype/mysubtype\";\n\t}\n    };\n    MimeBodyPart mbp = new MimeBodyPart();\n    mbp.setDataHandler(new DataHandler(ds));\n    mbp.setFileName(file.getName());\n    mbp.setDisposition(Part.ATTACHMENT);\n",
        "in_page_order": 20,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "File.__init__": true,
          "DataSource.__init__": true,
          "MimeBodyPart.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true,
          "File.getName": true,
          "MimeBodyPart.setFileName": true,
          "MimeBodyPart.setDisposition": true
        },
        "APIsProjects": {
          "File.__init__": 591,
          "DataSource.__init__": 35,
          "MimeBodyPart.__init__": 18,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9,
          "File.getName": 300,
          "MimeBodyPart.setFileName": 9,
          "MimeBodyPart.setDisposition": 4
        },
        "APIsFiles": {
          "File.__init__": 13065,
          "DataSource.__init__": 72,
          "MimeBodyPart.__init__": 31,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11,
          "File.getName": 1846,
          "MimeBodyPart.setFileName": 11,
          "MimeBodyPart.setDisposition": 5
        },
        "APIsSnippets": {
          "File.__init__": 40468,
          "DataSource.__init__": 141,
          "MimeBodyPart.__init__": 93,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17,
          "File.getName": 3551,
          "MimeBodyPart.setFileName": 12,
          "MimeBodyPart.setDisposition": 6
        },
        "APIsQualifiedNames": {
          "File.__init__": "java.io.File.__init__",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler",
          "File.getName": "java.io.File.getName",
          "MimeBodyPart.setFileName": "javax.mail.internet.MimeBodyPart.setFileName",
          "MimeBodyPart.setDisposition": "javax.mail.internet.MimeBodyPart.setDisposition"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    MimeBodyPart mbp = new MimeBodyPart();\n    String data = \"any ASCII data\";\n    DataSource ds = new ByteArrayDataSource(data, \"application/x-any\");\n    mbp.setDataHandler(new DataHandler(ds));\n",
        "in_page_order": 21,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeBodyPart.__init__": true,
          "DataSource.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18,
          "DataSource.__init__": 35,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31,
          "DataSource.__init__": 72,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93,
          "DataSource.__init__": 141,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    // Get the message object from the folder in the\n    // usual way, for example:\n    MimeMessage msg = (MimeMessage)folder.getMessage(n);\n\n    // Use the MimeMessage copy constructor to make a copy\n    // of the entire message, which will fetch the entire\n    // message from the server and parse it on the client:\n    MimeMessage cmsg = new MimeMessage(msg);\n\n    // The cmsg object is disconnected from the server so\n    // setFlags will have no effect (for example).  Use\n    // the original msg object for such operations.  Use\n    // the cmsg object to access the content of the message.\n",
        "in_page_order": 22,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeMessage.__init__": true
        },
        "APIsProjects": {
          "MimeMessage.__init__": 26
        },
        "APIsFiles": {
          "MimeMessage.__init__": 49
        },
        "APIsSnippets": {
          "MimeMessage.__init__": 79
        },
        "APIsQualifiedNames": {
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    // Get the message object from the folder in the\n    // usual way, for example:\n    MimeMessage msg = (MimeMessage)folder.getMessage(n);\n\n    // Copy the message by writing into a byte array and\n    // creating a new MimeMessage object based on the contents\n    // of the byte array:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    msg.writeTo(bos);\n    bos.close();\n    SharedByteArrayInputStream bis =\n\t\t    new SharedByteArrayInputStream(bos.toByteArray());\n    MimeMessage cmsg = new MimeMessage(session, bis);\n    bis.close();\n\n    // The cmsg object is disconnected from the server so\n    // setFlags will have no effect (for example).  Use\n    // the original msg object for such operations.  Use\n    // the cmsg object to access the content of the message.\n",
        "in_page_order": 23,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "ByteArrayOutputStream.__init__": true,
          "MimeMessage.writeTo": true,
          "ByteArrayOutputStream.close": true,
          "ByteArrayOutputStream.toByteArray": true,
          "SharedByteArrayInputStream.__init__": false,
          "MimeMessage.__init__": true,
          "SharedByteArrayInputStream.close": false
        },
        "APIsProjects": {
          "ByteArrayOutputStream.__init__": 447,
          "MimeMessage.writeTo": 3,
          "ByteArrayOutputStream.close": 150,
          "ByteArrayOutputStream.toByteArray": 418,
          "MimeMessage.__init__": 26
        },
        "APIsFiles": {
          "ByteArrayOutputStream.__init__": 3528,
          "MimeMessage.writeTo": 6,
          "ByteArrayOutputStream.close": 372,
          "ByteArrayOutputStream.toByteArray": 2862,
          "MimeMessage.__init__": 49
        },
        "APIsSnippets": {
          "ByteArrayOutputStream.__init__": 6155,
          "MimeMessage.writeTo": 8,
          "ByteArrayOutputStream.close": 524,
          "ByteArrayOutputStream.toByteArray": 5168,
          "MimeMessage.__init__": 79
        },
        "APIsQualifiedNames": {
          "ByteArrayOutputStream.__init__": "java.io.ByteArrayOutputStream.__init__",
          "MimeMessage.writeTo": "javax.mail.internet.MimeMessage.writeTo",
          "ByteArrayOutputStream.close": "java.io.ByteArrayOutputStream.close",
          "ByteArrayOutputStream.toByteArray": "java.io.ByteArrayOutputStream.toByteArray",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__"
        },
        "API_Ratio": 0.7142857142857143
      },
      {
        "code": "\n    folder.open(Folder.READ_WRITE); // or READ_ONLY\n\n    // first batch of messages\n    int start = 1;\n    int end = folder.getMessageCount();\n    while (start <= end) {\n\tMessage[] msgs = folder.getMessages(start, end);\n\tfor (Message msg : msgs)\n\t    processMessage(msg);\n\t// new messages that have arrived\n\tstart = end + 1;\n\tend = folder.getMessageCount();\n    }\n    // processed all messages\n\n    // add MessageCountListener to listen for new messages\n    folder.addMessageCountListener(new MessageCountAdapter() {\n\tpublic void messagesAdded(MessageCountEvent ev) {\n\t    Message[] msgs = ev.getMessages();\n\t    for (Message msg : msgs)\n\t\tprocessMessage(msg);\n\t}\n    });\n\n    // wait for new messages\n    for (;;)\n\t((IMAPFolder)folder).idle();\n",
        "in_page_order": 26,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MessageCountAdapter.__init__": false,
          "MessageCountEvent.getMessages": false
        },
        "APIsProjects": {},
        "APIsFiles": {},
        "APIsSnippets": {},
        "APIsQualifiedNames": {},
        "API_Ratio": 0.0
      },
      {
        "code": "\n    String text = (String)msg.getContent();\n    Message reply = msg.reply();\n    String replyText = text.replaceAll(\"(?m)^\", \"> \");\n    // allow user to edit replyText,\n    // e.g., using a Swing GUI or a web form\n    reply.setText(replyText);\n",
        "in_page_order": 27,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Message.setText": true
        },
        "APIsProjects": {
          "Message.setText": 5
        },
        "APIsFiles": {
          "Message.setText": 7
        },
        "APIsSnippets": {
          "Message.setText": 8
        },
        "APIsQualifiedNames": {
          "Message.setText": "javax.mail.Message.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n    MimeMessage msg = new MimeMessage(session);\n    // set To, From, Subject, Date, etc.\n    MimeMultipart mp = new MimeMultipart();\n    // create a body part to contain whatever text you want to include\n    MimeBodyPart mbp = new MimeBodyPart();\n    mbp.setText(\"Here's the forwarded message\\n\");\n    mp.addPart(mbp);\n    // create another body part to contain the message to be forwarded\n    MimeBodyPart fmbp = new MimeBodyPart();\n    // forwardedMsg is the MimeMessage object you want to forward\n    // as an attachment\n    fmbp.setContent(forwardedMsg, \"message/rfc822\");\n    fmbp.setDisposition(Part.ATTACHMENT);\n    mp.addPart(fmbp);\n    msg.setContent(mp);\n",
        "in_page_order": 28,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeMessage.__init__": true,
          "MimeMultipart.__init__": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setText": true,
          "MimeMultipart.addPart": false,
          "MimeBodyPart.setContent": true,
          "MimeBodyPart.setDisposition": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "MimeMessage.__init__": 26,
          "MimeMultipart.__init__": 20,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setText": 4,
          "MimeBodyPart.setContent": 12,
          "MimeBodyPart.setDisposition": 4,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "MimeMessage.__init__": 49,
          "MimeMultipart.__init__": 35,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setText": 5,
          "MimeBodyPart.setContent": 14,
          "MimeBodyPart.setDisposition": 5,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "MimeMessage.__init__": 79,
          "MimeMultipart.__init__": 61,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setText": 6,
          "MimeBodyPart.setContent": 26,
          "MimeBodyPart.setDisposition": 6,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMultipart.__init__": "javax.mail.internet.MimeMultipart.__init__",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setText": "javax.mail.internet.MimeBodyPart.setText",
          "MimeBodyPart.setContent": "javax.mail.internet.MimeBodyPart.setContent",
          "MimeBodyPart.setDisposition": "javax.mail.internet.MimeBodyPart.setDisposition",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 0.875
      },
      {
        "code": "\n        Multipart multipart = new MimeMultipart(\"related\");\n\n        MimeBodyPart htmlPart = new MimeBodyPart();\n        // messageBody contains html that references image\n        // using something like <img src=\"cid:XXX\"> where\n        // \"XXX\" is an identifier that you make up to refer\n        // to the image\n        htmlPart.setText(messageBody, \"utf-8\", \"html\");\n        multipart.addBodyPart(htmlPart);\n\n        MimeBodyPart imgPart = new MimeBodyPart();\n        // imageFile is the file containing the image\n        imgPart.attachFile(imageFile);\n        // or, if the image is in a byte array in memory, use\n        // imgPart.setDataHandler(new DataHandler(\n        //      new ByteArrayDataSource(bytes, \"image/whatever\")));\n\n        // \"XXX\" below matches \"XXX\" above in html code\n        imgPart.setContentID(\"<XXX>\");\n        multipart.addBodyPart(imgPart);\n\n        message.setContent(multipart);\n",
        "in_page_order": 31,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Multipart.__init__": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setText": true,
          "Multipart.addBodyPart": true,
          "MimeBodyPart.attachFile": false,
          "MimeBodyPart.setContentID": true
        },
        "APIsProjects": {
          "Multipart.__init__": 8,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setText": 4,
          "Multipart.addBodyPart": 8,
          "MimeBodyPart.setContentID": 3
        },
        "APIsFiles": {
          "Multipart.__init__": 9,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setText": 5,
          "Multipart.addBodyPart": 9,
          "MimeBodyPart.setContentID": 4
        },
        "APIsSnippets": {
          "Multipart.__init__": 14,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setText": 6,
          "Multipart.addBodyPart": 27,
          "MimeBodyPart.setContentID": 4
        },
        "APIsQualifiedNames": {
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setText": "javax.mail.internet.MimeBodyPart.setText",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "MimeBodyPart.setContentID": "javax.mail.internet.MimeBodyPart.setContentID"
        },
        "API_Ratio": 0.8333333333333334
      },
      {
        "code": "\n    Properties props = new Properties();\n    props.put(\"mail.smtp.ssl.enable\", \"true\");\n    // or: props.put(\"mail.smtp.starttls.enable\", \"true\");\n    Session session = Session.getInstance(props);\n    MimeMessage msg = new MimeMessage(session);\n    // set message content here\n    Transport.send(msg, username, password);\n",
        "in_page_order": 32,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "MimeMessage.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "MimeMessage.__init__": 26
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "MimeMessage.__init__": 49
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "MimeMessage.__init__": 79
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://stackoverflow.com/questions/46663/how-can-i-send-an-email-by-java-application-using-gmail-yahoo-or-hotmail",
    "url position": 6,
    "segments": [
      {
        "code": "import java.util.*;\nimport javax.mail.*;\nimport javax.mail.internet.*;\n\npublic class Main {\n\n    private static String USER_NAME = \"*****\";  // GMail user name (just the part before \"@gmail.com\")\n    private static String PASSWORD = \"********\"; // GMail password\n    private static String RECIPIENT = \"lizard.bill@myschool.edu\";\n\n    public static void main(String[] args) {\n        String from = USER_NAME;\n        String pass = PASSWORD;\n        String[] to = { RECIPIENT }; // list of recipient email addresses\n        String subject = \"Java send mail example\";\n        String body = \"Welcome to JavaMail!\";\n\n        sendFromGMail(from, pass, to, subject, body);\n    }\n\n    private static void sendFromGMail(String from, String pass, String[] to, String subject, String body) {\n        Properties props = System.getProperties();\n        String host = \"smtp.gmail.com\";\n        props.put(\"mail.smtp.starttls.enable\", \"true\");\n        props.put(\"mail.smtp.host\", host);\n        props.put(\"mail.smtp.user\", from);\n        props.put(\"mail.smtp.password\", pass);\n        props.put(\"mail.smtp.port\", \"587\");\n        props.put(\"mail.smtp.auth\", \"true\");\n\n        Session session = Session.getDefaultInstance(props);\n        MimeMessage message = new MimeMessage(session);\n\n        try {\n            message.setFrom(new InternetAddress(from));\n            InternetAddress[] toAddress = new InternetAddress[to.length];\n\n            // To get the array of addresses\n            for( int i = 0; i < to.length; i++ ) {\n                toAddress[i] = new InternetAddress(to[i]);\n            }\n\n            for( int i = 0; i < toAddress.length; i++) {\n                message.addRecipient(Message.RecipientType.TO, toAddress[i]);\n            }\n\n            message.setSubject(subject);\n            message.setText(body);\n            Transport transport = session.getTransport(\"smtp\");\n            transport.connect(host, from, pass);\n            transport.sendMessage(message, message.getAllRecipients());\n            transport.close();\n        }\n        catch (AddressException ae) {\n            ae.printStackTrace();\n        }\n        catch (MessagingException me) {\n            me.printStackTrace();\n        }\n    }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": true,
        "answer_votes": "160",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "MimeMessage.getAllRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "MimeMessage.getAllRecipients": 3,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.put": 752,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "String host = \"smtp.gmail.com\";\nString from = \"user name\";\nProperties props = System.getProperties();\nprops.put(\"mail.smtp.host\", host);\nprops.put(\"mail.smtp.user\", from);\nprops.put(\"mail.smtp.password\", \"asdfgh\");\nprops.put(\"mail.smtp.port\", \"587\"); // 587 is the port number of yahoo mail\nprops.put(\"mail.smtp.auth\", \"true\");\n\nSession session = Session.getDefaultInstance(props, null);\nMimeMessage message = new MimeMessage(session);\nmessage.setFrom(new InternetAddress(from));\n\nInternetAddress[] to_address = new InternetAddress[to.length];\nint i = 0;\n// To get the array of addresses\nwhile (to[i] != null) {\n    to_address[i] = new InternetAddress(to[i]);\n    i++;\n}\nSystem.out.println(Message.RecipientType.TO);\ni = 0;\nwhile (to_address[i] != null) {\n\n    message.addRecipient(Message.RecipientType.TO, to_address[i]);\n    i++;\n}\nmessage.setSubject(\"sending in a group\");\nmessage.setText(\"Welcome to JavaMail\");\n// alternately, to send HTML mail:\n// message.setContent(\"<p>Welcome to JavaMail</p>\", \"text/html\");\nTransport transport = session.getTransport(\"smtp\");\ntransport.connect(\"smtp.mail.yahoo.co.in\", \"user name\", \"asdfgh\");\ntransport.sendMessage(message, message.getAllRecipients());\ntransport.close();\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "105",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "MimeMessage.getAllRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "MimeMessage.getAllRecipients": 3,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.put": 752,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "final Email email = new Email();\n\nString host = \"smtp.gmail.com\";\nInteger port = 587;\nString from = \"username\";\nString pass = \"password\";\nString[] to = {\"to@gmail.com\"};\n\nemail.setFromAddress(\"\", from);\nemail.setSubject(\"sending in a group\");\nfor( int i=0; i < to.length; i++ ) {\n    email.addRecipient(\"\", to[i], RecipientType.TO);\n}\nemail.setText(\"Welcome to JavaMail\");\n\nnew Mailer(host, port, from, pass).sendMail(email);\n// you could also still use your mail session instead\nnew Mailer(session).sendMail(email);\n",
        "in_page_order": 4,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "13",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Email.__init__": true,
          "Email.setFromAddress": false,
          "Email.setSubject": false,
          "Email.setText": false,
          "Mailer.__init__": false
        },
        "APIsProjects": {
          "Email.__init__": 9
        },
        "APIsFiles": {
          "Email.__init__": 13
        },
        "APIsSnippets": {
          "Email.__init__": 25
        },
        "APIsQualifiedNames": {
          "Email.__init__": "quickfix.fix42.Email.__init__"
        },
        "API_Ratio": 0.2
      },
      {
        "code": "package ripon.java.mail;\nimport java.util.*;\nimport javax.mail.*;\nimport javax.mail.internet.*;\n\npublic class SendEmail\n{\npublic static void main(String [] args)\n{    \n    // Sender's email ID needs to be mentioned\n     String from = \"test@gmail.com\";\n     String pass =\"test123\";\n    // Recipient's email ID needs to be mentioned.\n   String to = \"ripon420@yahoo.com\";\n\n   String host = \"smtp.gmail.com\";\n\n   // Get system properties\n   Properties properties = System.getProperties();\n   // Setup mail server\n   properties.put(\"mail.smtp.starttls.enable\", \"true\");\n   properties.put(\"mail.smtp.host\", host);\n   properties.put(\"mail.smtp.user\", from);\n   properties.put(\"mail.smtp.password\", pass);\n   properties.put(\"mail.smtp.port\", \"587\");\n   properties.put(\"mail.smtp.auth\", \"true\");\n\n   // Get the default Session object.\n   Session session = Session.getDefaultInstance(properties);\n\n   try{\n      // Create a default MimeMessage object.\n      MimeMessage message = new MimeMessage(session);\n\n      // Set From: header field of the header.\n      message.setFrom(new InternetAddress(from));\n\n      // Set To: header field of the header.\n      message.addRecipient(Message.RecipientType.TO,\n                               new InternetAddress(to));\n\n      // Set Subject: header field\n      message.setSubject(\"This is the Subject Line!\");\n\n      // Now set the actual message\n      message.setText(\"This is actual message\");\n\n      // Send message\n      Transport transport = session.getTransport(\"smtp\");\n      transport.connect(host, from, pass);\n      transport.sendMessage(message, message.getAllRecipients());\n      transport.close();\n      System.out.println(\"Sent message successfully....\");\n   }catch (MessagingException mex) {\n      mex.printStackTrace();\n   }\n}\n}\n",
        "in_page_order": 5,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "5",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "MimeMessage.getAllRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "MimeMessage.getAllRecipients": 3,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.put": 752,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "//set CLASSPATH=%CLASSPATH%;activation.jar;mail.jar\nimport javax.mail.*;\nimport javax.mail.internet.*;\nimport java.util.*;\n\npublic class Mail\n{\n    String  d_email = \"iamdvr@gmail.com\",\n            d_password = \"****\",\n            d_host = \"smtp.gmail.com\",\n            d_port  = \"465\",\n            m_to = \"iamdvr@yahoo.com\",\n            m_subject = \"Testing\",\n            m_text = \"Hey, this is the testing email using smtp.gmail.com.\";\n    public static void main(String[] args)\n    {\n        String[] to={\"XXX@yahoo.com\"};\n        String[] cc={\"XXX@yahoo.com\"};\n        String[] bcc={\"XXX@yahoo.com\"};\n        //This is for google\n        Mail.sendMail(\"venkatesh@dfdf.com\", \"password\", \"smtp.gmail.com\", \n                      \"465\", \"true\", \"true\", \n                      true, \"javax.net.ssl.SSLSocketFactory\", \"false\", \n                      to, cc, bcc, \n                      \"hi baba don't send virus mails..\", \n                      \"This is my style...of reply..If u send virus mails..\");\n    }\n\n    public synchronized static boolean sendMail(\n        String userName, String passWord, String host, \n        String port, String starttls, String auth, \n        boolean debug, String socketFactoryClass, String fallback, \n        String[] to, String[] cc, String[] bcc, \n        String subject, String text) \n    {\n        Properties props = new Properties();\n        //Properties props=System.getProperties();\n        props.put(\"mail.smtp.user\", userName);\n        props.put(\"mail.smtp.host\", host);\n        if(!\"\".equals(port))\n            props.put(\"mail.smtp.port\", port);\n        if(!\"\".equals(starttls))\n            props.put(\"mail.smtp.starttls.enable\",starttls);\n        props.put(\"mail.smtp.auth\", auth);\n        if(debug) {\n            props.put(\"mail.smtp.debug\", \"true\");\n        } else {\n            props.put(\"mail.smtp.debug\", \"false\");         \n        }\n        if(!\"\".equals(port))\n            props.put(\"mail.smtp.socketFactory.port\", port);\n        if(!\"\".equals(socketFactoryClass))\n            props.put(\"mail.smtp.socketFactory.class\",socketFactoryClass);\n        if(!\"\".equals(fallback))\n            props.put(\"mail.smtp.socketFactory.fallback\", fallback);\n\n        try\n        {\n            Session session = Session.getDefaultInstance(props, null);\n            session.setDebug(debug);\n            MimeMessage msg = new MimeMessage(session);\n            msg.setText(text);\n            msg.setSubject(subject);\n            msg.setFrom(new InternetAddress(\"p_sambasivarao@sutyam.com\"));\n            for(int i=0;i<to.length;i++) {\n                msg.addRecipient(Message.RecipientType.TO, \n                                 new InternetAddress(to[i]));\n            }\n            for(int i=0;i<cc.length;i++) {\n                msg.addRecipient(Message.RecipientType.CC, \n                                 new InternetAddress(cc[i]));\n            }\n            for(int i=0;i<bcc.length;i++) {\n                msg.addRecipient(Message.RecipientType.BCC, \n                                 new InternetAddress(bcc[i]));\n            }\n            msg.saveChanges();\n            Transport transport = session.getTransport(\"smtp\");\n            transport.connect(host, userName, passWord);\n            transport.sendMessage(msg, msg.getAllRecipients());\n            transport.close();\n            return true;\n        }\n        catch (Exception mex)\n        {\n            mex.printStackTrace();\n            return false;\n        }\n    }\n\n}\n",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "3",
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "Session.setDebug": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setText": true,
          "MimeMessage.setSubject": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.saveChanges": false,
          "Session.getTransport": true,
          "Transport.connect": true,
          "MimeMessage.getAllRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "Session.setDebug": 6,
          "MimeMessage.__init__": 26,
          "MimeMessage.setText": 9,
          "MimeMessage.setSubject": 19,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "MimeMessage.getAllRecipients": 3,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "Session.setDebug": 9,
          "MimeMessage.__init__": 49,
          "MimeMessage.setText": 13,
          "MimeMessage.setSubject": 25,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "Session.setDebug": 11,
          "MimeMessage.__init__": 79,
          "MimeMessage.setText": 20,
          "MimeMessage.setSubject": 34,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "Session.setDebug": "javax.mail.Session.setDebug",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 0.9285714285714286
      },
      {
        "code": "import java.util.Properties;\n\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\npublic class MessageSender {\n\n    public static void sendHardCoded() throws AddressException, MessagingException {\n        String to = \"a@a.info\";\n        final String from = \"b@gmail.com\";\n\n        Properties properties = new Properties();\n        properties.put(\"mail.smtp.starttls.enable\", \"true\");\n        properties.put(\"mail.smtp.auth\", \"true\");\n        properties.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n        properties.put(\"mail.smtp.port\", \"587\");\n\n        Session session = Session.getInstance(properties,\n                new javax.mail.Authenticator() {\n                    protected PasswordAuthentication getPasswordAuthentication() {\n                        return new PasswordAuthentication(from, \"BeNice\");\n                    }\n                });\n\n        MimeMessage message = new MimeMessage(session);\n        message.setFrom(new InternetAddress(from));\n        message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));\n        message.setSubject(\"Hello\");\n        message.setText(\"What's up?\");\n\n        Transport.send(message);\n    }\n\n}\n",
        "in_page_order": 7,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "3",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": " public class NewClass {\n\n    public static void main(String[] args) {\n        try {\n            Properties props = System.getProperties();\n            props.put(\"mail.smtp.starttls.enable\", \"true\");\n            props.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n            props.put(\"mail.smtp.auth\", \"true\");\n            props.put(\"mail.smtp.port\", \"465\"); // smtp port\n            Authenticator auth = new Authenticator() {\n\n                @Override\n                protected PasswordAuthentication getPasswordAuthentication() {\n                    return new PasswordAuthentication(\"username-gmail\", \"password-gmail\");\n                }\n            };\n            Session session = Session.getDefaultInstance(props, auth);\n            MimeMessage msg = new MimeMessage(session);\n            msg.setFrom(new InternetAddress(\"username-gmail@gmail.com\"));\n            msg.setSubject(\"Try attachment gmail\");\n            msg.setRecipient(RecipientType.TO, new InternetAddress(\"username-gmail@gmail.com\"));\n            //add atleast simple body\n            MimeBodyPart body = new MimeBodyPart();\n            body.setText(\"Try attachment\");\n            //do attachment\n            MimeBodyPart attachMent = new MimeBodyPart();\n            FileDataSource dataSource = new FileDataSource(new File(\"file-sent.txt\"));\n            attachMent.setDataHandler(new DataHandler(dataSource));\n            attachMent.setFileName(\"file-sent.txt\");\n            attachMent.setDisposition(MimeBodyPart.ATTACHMENT);\n            Multipart multipart = new MimeMultipart();\n            multipart.addBodyPart(body);\n            multipart.addBodyPart(attachMent);\n            msg.setContent(multipart);\n            Transport.send(msg);\n        } catch (AddressException ex) {\n            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);\n        } catch (MessagingException ex) {\n            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }\n\n}\n",
        "in_page_order": 9,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "1",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setRecipient": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setText": true,
          "File.__init__": true,
          "FileDataSource.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true,
          "MimeBodyPart.setFileName": true,
          "MimeBodyPart.setDisposition": true,
          "Multipart.__init__": true,
          "Multipart.addBodyPart": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setRecipient": 5,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setText": 4,
          "File.__init__": 591,
          "FileDataSource.__init__": 9,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9,
          "MimeBodyPart.setFileName": 9,
          "MimeBodyPart.setDisposition": 4,
          "Multipart.__init__": 8,
          "Multipart.addBodyPart": 8,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setRecipient": 5,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setText": 5,
          "File.__init__": 13065,
          "FileDataSource.__init__": 94,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11,
          "MimeBodyPart.setFileName": 11,
          "MimeBodyPart.setDisposition": 5,
          "Multipart.__init__": 9,
          "Multipart.addBodyPart": 9,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setRecipient": 14,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setText": 6,
          "File.__init__": 40468,
          "FileDataSource.__init__": 206,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17,
          "MimeBodyPart.setFileName": 12,
          "MimeBodyPart.setDisposition": 6,
          "Multipart.__init__": 14,
          "Multipart.addBodyPart": 27,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setRecipient": "javax.mail.internet.MimeMessage.setRecipient",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setText": "javax.mail.internet.MimeBodyPart.setText",
          "File.__init__": "java.io.File.__init__",
          "FileDataSource.__init__": "javax.activation.FileDataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler",
          "MimeBodyPart.setFileName": "javax.mail.internet.MimeBodyPart.setFileName",
          "MimeBodyPart.setDisposition": "javax.mail.internet.MimeBodyPart.setDisposition",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "package my.test.service;\n\nimport java.util.Properties;\n\nimport javax.mail.Authenticator;\nimport javax.mail.MessagingException;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Message;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\npublic class Sample {\n    public static void main(String args[]) {\n        final String SMTP_HOST = \"smtp.gmail.com\";\n        final String SMTP_PORT = \"587\";\n        final String GMAIL_USERNAME = \"xxxxxxxxxx@gmail.com\";\n        final String GMAIL_PASSWORD = \"xxxxxxxxxx\";\n\n        System.out.println(\"Process Started\");\n\n        Properties prop = System.getProperties();\n        prop.setProperty(\"mail.smtp.starttls.enable\", \"true\");\n        prop.setProperty(\"mail.smtp.host\", SMTP_HOST);\n        prop.setProperty(\"mail.smtp.user\", GMAIL_USERNAME);\n        prop.setProperty(\"mail.smtp.password\", GMAIL_PASSWORD);\n        prop.setProperty(\"mail.smtp.port\", SMTP_PORT);\n        prop.setProperty(\"mail.smtp.auth\", \"true\");\n        System.out.println(\"Props : \" + prop);\n\n        Session session = Session.getInstance(prop, new Authenticator() {\n            protected PasswordAuthentication getPasswordAuthentication() {\n                return new PasswordAuthentication(GMAIL_USERNAME,\n                        GMAIL_PASSWORD);\n            }\n        });\n\n        System.out.println(\"Got Session : \" + session);\n\n        MimeMessage message = new MimeMessage(session);\n        try {\n            System.out.println(\"before sending\");\n            message.setFrom(new InternetAddress(GMAIL_USERNAME));\n            message.addRecipients(Message.RecipientType.TO,\n                    InternetAddress.parse(GMAIL_USERNAME));\n            message.setSubject(\"My First Email Attempt from Java\");\n            message.setText(\"Hi, This mail came from Java Application.\");\n            message.setRecipients(Message.RecipientType.TO,\n                    InternetAddress.parse(GMAIL_USERNAME));\n            Transport transport = session.getTransport(\"smtp\");\n            System.out.println(\"Got Transport\" + transport);\n            transport.connect(SMTP_HOST, GMAIL_USERNAME, GMAIL_PASSWORD);\n            transport.sendMessage(message, message.getAllRecipients());\n            System.out.println(\"message Object : \" + message);\n            System.out.println(\"Email Sent Successfully\");\n        } catch (AddressException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (MessagingException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n}\n",
        "in_page_order": 11,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "0",
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipients": false,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true,
          "MimeMessage.setRecipients": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "MimeMessage.getAllRecipients": true,
          "Transport.sendMessage": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9,
          "MimeMessage.setRecipients": 9,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "MimeMessage.getAllRecipients": 3,
          "Transport.sendMessage": 13
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13,
          "MimeMessage.setRecipients": 12,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 15
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20,
          "MimeMessage.setRecipients": 17,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "MimeMessage.getAllRecipients": 4,
          "Transport.sendMessage": 16
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText",
          "MimeMessage.setRecipients": "javax.mail.internet.MimeMessage.setRecipients",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getAllRecipients": "javax.mail.internet.MimeMessage.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage"
        },
        "API_Ratio": 0.9285714285714286
      },
      {
        "code": "import java.util.Properties;\n\nimport javax.activation.DataHandler;\nimport javax.activation.DataSource;\nimport javax.activation.FileDataSource;\nimport javax.mail.BodyPart;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Multipart;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeBodyPart;\nimport javax.mail.internet.MimeMessage;\nimport javax.mail.internet.MimeMultipart;\n\npublic class GmailSender\n{\n    private static String protocol = \"smtp\";\n\n    private String username;\n    private String password;\n\n    private Session session;\n    private Message message;\n    private Multipart multipart;\n\n    public GmailSender()\n    {\n        this.multipart = new MimeMultipart();\n    }\n\n    public void setSender(String username, String password)\n    {\n        this.username = username;\n        this.password = password;\n\n        this.session = getSession();\n        this.message = new MimeMessage(session);\n    }\n\n    public void addRecipient(String recipient) throws AddressException, MessagingException\n    {\n        message.addRecipient(Message.RecipientType.TO, new InternetAddress(recipient));\n    }\n\n    public void setSubject(String subject) throws MessagingException\n    {\n        message.setSubject(subject);\n    }\n\n    public void setBody(String body) throws MessagingException\n    {\n        BodyPart messageBodyPart = new MimeBodyPart();\n        messageBodyPart.setText(body);\n        multipart.addBodyPart(messageBodyPart);\n\n        message.setContent(multipart);\n    }\n\n    public void send() throws MessagingException\n    {\n        Transport transport = session.getTransport(protocol);\n        transport.connect(username, password);\n        transport.sendMessage(message, message.getAllRecipients());\n\n        transport.close();\n    }\n\n    public void addAttachment(String filePath) throws MessagingException\n    {\n        BodyPart messageBodyPart = getFileBodyPart(filePath);\n        multipart.addBodyPart(messageBodyPart);\n\n        message.setContent(multipart);\n    }\n\n    private BodyPart getFileBodyPart(String filePath) throws MessagingException\n    {\n        BodyPart messageBodyPart = new MimeBodyPart();\n        DataSource dataSource = new FileDataSource(filePath);\n        messageBodyPart.setDataHandler(new DataHandler(dataSource));\n        messageBodyPart.setFileName(filePath);\n\n        return messageBodyPart;\n    }\n\n    private Session getSession()\n    {\n        Properties properties = getMailServerProperties();\n        Session session = Session.getDefaultInstance(properties);\n\n        return session;\n    }\n\n    private Properties getMailServerProperties()\n    {\n        Properties properties = System.getProperties();\n        properties.put(\"mail.smtp.starttls.enable\", \"true\");\n        properties.put(\"mail.smtp.host\", protocol + \".gmail.com\");\n        properties.put(\"mail.smtp.user\", username);\n        properties.put(\"mail.smtp.password\", password);\n        properties.put(\"mail.smtp.port\", \"587\");\n        properties.put(\"mail.smtp.auth\", \"true\");\n\n        return properties;\n    }\n}\n",
        "in_page_order": 12,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "0",
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "MimeMultipart.__init__": true,
          "Session": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "Message.addRecipient": true,
          "Message.setSubject": true,
          "BodyPart.__init__": true,
          "BodyPart.setText": false,
          "Multipart.addBodyPart": true,
          "Message.setContent": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "Message.getAllRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true,
          "DataSource.__init__": true,
          "DataHandler.__init__": true,
          "BodyPart.setDataHandler": true,
          "BodyPart.setFileName": true,
          "Properties.put": true
        },
        "APIsProjects": {
          "MimeMultipart.__init__": 20,
          "Session": 39,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "Message.addRecipient": 6,
          "Message.setSubject": 20,
          "BodyPart.__init__": 12,
          "Multipart.addBodyPart": 8,
          "Message.setContent": 14,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "Message.getAllRecipients": 9,
          "Transport.sendMessage": 13,
          "Transport.close": 17,
          "DataSource.__init__": 35,
          "DataHandler.__init__": 22,
          "BodyPart.setDataHandler": 6,
          "BodyPart.setFileName": 5,
          "Properties.put": 168
        },
        "APIsFiles": {
          "MimeMultipart.__init__": 35,
          "Session": 79,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "Message.addRecipient": 11,
          "Message.setSubject": 38,
          "BodyPart.__init__": 20,
          "Multipart.addBodyPart": 9,
          "Message.setContent": 24,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "Message.getAllRecipients": 11,
          "Transport.sendMessage": 15,
          "Transport.close": 36,
          "DataSource.__init__": 72,
          "DataHandler.__init__": 61,
          "BodyPart.setDataHandler": 8,
          "BodyPart.setFileName": 6,
          "Properties.put": 752
        },
        "APIsSnippets": {
          "MimeMultipart.__init__": 61,
          "Session": 344,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "Message.addRecipient": 11,
          "Message.setSubject": 43,
          "BodyPart.__init__": 38,
          "Multipart.addBodyPart": 27,
          "Message.setContent": 32,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "Message.getAllRecipients": 13,
          "Transport.sendMessage": 16,
          "Transport.close": 66,
          "DataSource.__init__": 141,
          "DataHandler.__init__": 111,
          "BodyPart.setDataHandler": 11,
          "BodyPart.setFileName": 9,
          "Properties.put": 2848
        },
        "APIsQualifiedNames": {
          "MimeMultipart.__init__": "javax.mail.internet.MimeMultipart.__init__",
          "Session": "org.apache.catalina.Session.Session",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.addRecipient": "javax.mail.Message.addRecipient",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "BodyPart.__init__": "com.dotcms.repackage.jersey_1_12.com.sun.jersey.multipart.BodyPart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "Message.setContent": "javax.mail.Message.setContent",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "Message.getAllRecipients": "javax.mail.Message.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "BodyPart.setDataHandler": "javax.mail.BodyPart.setDataHandler",
          "BodyPart.setFileName": "javax.mail.BodyPart.setFileName",
          "Properties.put": "java.util.Properties.put"
        },
        "API_Ratio": 0.95
      },
      {
        "code": "GmailSender sender = new GmailSender();\nsender.setSender(\"myEmailNameWithout@gmail.com\", \"mypassword\");\nsender.addRecipient(\"recipient@somehost.com\");\nsender.setSubject(\"The subject\");\nsender.setBody(\"The body\");\nsender.addAttachment(\"TestFile.txt\");\nsender.send();\n",
        "in_page_order": 12,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": "0",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "GmailSender.__init__": false,
          "GmailSender.setSender": false,
          "GmailSender.addRecipient": false,
          "GmailSender.setSubject": false,
          "GmailSender.setBody": false,
          "GmailSender.addAttachment": false,
          "GmailSender.send": false
        },
        "APIsProjects": {},
        "APIsFiles": {},
        "APIsSnippets": {},
        "APIsQualifiedNames": {},
        "API_Ratio": 0.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://stackoverflow.com/questions/73580/how-do-i-send-an-smtp-message-from-java",
    "url position": 5,
    "segments": [
      {
        "code": "import java.io.*;\nimport java.net.InetAddress;\nimport java.util.Properties;\nimport java.util.Date;\n\nimport javax.mail.*;\n\nimport javax.mail.internet.*;\n\nimport com.sun.mail.smtp.*;\n\n\npublic class Distribution {\n\n    public static void main(String args[]) throws Exception {\n        Properties props = System.getProperties();\n        props.put(\"mail.smtps.host\",\"smtp.gmail.com\");\n        props.put(\"mail.smtps.auth\",\"true\");\n        Session session = Session.getInstance(props, null);\n        Message msg = new MimeMessage(session);\n        msg.setFrom(new InternetAddress(\"mail@tovare.com\"));;\n        msg.setRecipients(Message.RecipientType.TO,\n        InternetAddress.parse(\"tov.are.jacobsen@iss.no\", false));\n        msg.setSubject(\"Heisann \"+System.currentTimeMillis());\n        msg.setText(\"Med vennlig hilsennTov Are Jacobsen\");\n        msg.setHeader(\"X-Mailer\", \"Tov Are's program\");\n        msg.setSentDate(new Date());\n        SMTPTransport t =\n            (SMTPTransport)session.getTransport(\"smtps\");\n        t.connect(\"smtp.gmail.com\", \"admin@tovare.com\", \"<insert password here>\");\n        t.sendMessage(msg, msg.getAllRecipients());\n        System.out.println(\"Response: \" + t.getLastServerResponse());\n        t.close();\n    }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": true,
        "answer_votes": "31",
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Message.setText": true,
          "Message.setHeader": true,
          "Date.__init__": true,
          "Message.setSentDate": true,
          "Session.getTransport": true,
          "SMTPTransport.connect": false,
          "Message.getAllRecipients": true,
          "SMTPTransport.sendMessage": false,
          "SMTPTransport.getLastServerResponse": false,
          "SMTPTransport.close": false
        },
        "APIsProjects": {
          "Properties.put": 168,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "Message.setHeader": 12,
          "Date.__init__": 441,
          "Message.setSentDate": 9,
          "Session.getTransport": 14,
          "Message.getAllRecipients": 9
        },
        "APIsFiles": {
          "Properties.put": 752,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "Message.setHeader": 185,
          "Date.__init__": 5276,
          "Message.setSentDate": 12,
          "Session.getTransport": 17,
          "Message.getAllRecipients": 11
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "Message.setHeader": 501,
          "Date.__init__": 13241,
          "Message.setSentDate": 13,
          "Session.getTransport": 18,
          "Message.getAllRecipients": 13
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "Message.setHeader": "javax.mail.Message.setHeader",
          "Date.__init__": "java.util.Date.__init__",
          "Message.setSentDate": "javax.mail.Message.setSentDate",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Message.getAllRecipients": "javax.mail.Message.getAllRecipients"
        },
        "API_Ratio": 0.75
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://www.javatpoint.com/example-of-sending-email-using-java-mail-api",
    "url position": 7,
    "segments": [
      {
        "code": "\nProperties properties=new Properties();\n//fill all the information like host name etc.\nSession session=Session.getInstance(properties,null);\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302
        },
        "APIsFiles": {
          "Properties.__init__": 2658
        },
        "APIsSnippets": {
          "Properties.__init__": 4618
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://docs.microsoft.com/en-us/azure/store-sendgrid-java-how-to-send-email",
    "url position": 19,
    "segments": [
      {
        "code": "        import java.util.Properties;\n        import javax.activation.*;\n        import javax.mail.*;\n        import javax.mail.internet.*;\n\n        public class MyEmailer {\n           private static final String SMTP_HOST_NAME = \"smtp.sendgrid.net\";\n           private static final String SMTP_AUTH_USER = \"your_sendgrid_username\";\n           private static final String SMTP_AUTH_PWD = \"your_sendgrid_password\";\n\n           public static void main(String[] args) throws Exception{\n               new MyEmailer().SendMail();\n           }\n\n           public void SendMail() throws Exception\n           {\n              Properties properties = new Properties();\n                 properties.put(\"mail.transport.protocol\", \"smtp\");\n                 properties.put(\"mail.smtp.host\", SMTP_HOST_NAME);\n                 properties.put(\"mail.smtp.port\", 587);\n                 properties.put(\"mail.smtp.auth\", \"true\");\n                 // \n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MyEmailer.__init__": false,
          "Exception": true
        },
        "APIsProjects": {
          "Exception": 319
        },
        "APIsFiles": {
          "Exception": 5709
        },
        "APIsSnippets": {
          "Exception": 29060
        },
        "APIsQualifiedNames": {
          "Exception": "java.lang.Exception.Exception"
        },
        "API_Ratio": 0.5
      },
      {
        "code": "private class SMTPAuthenticator extends javax.mail.Authenticator {\npublic PasswordAuthentication getPasswordAuthentication() {\n   String username = SMTP_AUTH_USER;\n   String password = SMTP_AUTH_PWD;\n   return new PasswordAuthentication(username, password);\n}\n",
        "in_page_order": 3,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "PasswordAuthentication.__init__": true
        },
        "APIsProjects": {
          "PasswordAuthentication.__init__": 40
        },
        "APIsFiles": {
          "PasswordAuthentication.__init__": 53
        },
        "APIsSnippets": {
          "PasswordAuthentication.__init__": 93
        },
        "APIsQualifiedNames": {
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Authenticator auth = new SMTPAuthenticator();\nSession mailSession = Session.getDefaultInstance(properties, auth);\n",
        "in_page_order": 4,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Authenticator.__init__": true
        },
        "APIsProjects": {
          "Authenticator.__init__": 42
        },
        "APIsFiles": {
          "Authenticator.__init__": 55
        },
        "APIsSnippets": {
          "Authenticator.__init__": 75
        },
        "APIsQualifiedNames": {
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Transport transport = mailSession.getTransport();\n// Connect the transport object.\ntransport.connect();\n// Send the message.\ntransport.sendMessage(message, message.getAllRecipients());\n// Close the connection.\ntransport.close();\n",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Transport.connect": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Transport.connect": 13,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Transport.connect": 16,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Transport.connect": 18,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Transport.connect": "javax.mail.Transport.connect",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "// Local file name and path.\nString attachmentName = \"myfile.zip\";\nString attachmentPath = \"c:\\\\myfiles\\\\\";\nMimeBodyPart attachmentPart = new MimeBodyPart();\n// Specify the local file to attach.\nDataSource source = new FileDataSource(attachmentPath + attachmentName);\nattachmentPart.setDataHandler(new DataHandler(source));\n// This example uses the local file name as the attachment name.\n// They could be different if you prefer.\nattachmentPart.setFileName(attachmentName);\nmultipart.addBodyPart(attachmentPart);\n",
        "in_page_order": 7,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeBodyPart.__init__": true,
          "DataSource.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true,
          "MimeBodyPart.setFileName": true
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18,
          "DataSource.__init__": 35,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9,
          "MimeBodyPart.setFileName": 9
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31,
          "DataSource.__init__": 72,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11,
          "MimeBodyPart.setFileName": 11
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93,
          "DataSource.__init__": 141,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17,
          "MimeBodyPart.setFileName": 12
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler",
          "MimeBodyPart.setFileName": "javax.mail.internet.MimeBodyPart.setFileName"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "InternetAddress addresses[] =\n    { new InternetAddress(\"john@contoso.com\"),\n      new InternetAddress(\"wendy@contoso.com\") };\n\nmessage.setReplyTo(addresses);\n",
        "in_page_order": 11,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "InternetAddress.__init__": true
        },
        "APIsProjects": {
          "InternetAddress.__init__": 34
        },
        "APIsFiles": {
          "InternetAddress.__init__": 69
        },
        "APIsSnippets": {
          "InternetAddress.__init__": 183
        },
        "APIsQualifiedNames": {
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "message.addRecipient(Message.RecipientType.CC, new\nInternetAddress(\"john@contoso.com\"));\n",
        "in_page_order": 12,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "InternetAddress.__init__": true
        },
        "APIsProjects": {
          "InternetAddress.__init__": 34
        },
        "APIsFiles": {
          "InternetAddress.__init__": 69
        },
        "APIsSnippets": {
          "InternetAddress.__init__": 183
        },
        "APIsQualifiedNames": {
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://docs.microsoft.com/en-us/azure/store-sendgrid-java-how-to-send-email-example",
    "url position": 18,
    "segments": [
      {
        "code": "<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\"\n    pageEncoding=\"ISO-8859-1\" import=\"javax.activation.*, javax.mail.*, javax.mail.internet.*, java.util.Date, java.util.Properties\" %>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<title>Email processing happens here</title>\n</head>\n<body>\n    <b>This is my send mail page.</b><p/>\n <%\n\n final String sendGridUser = request.getParameter(\"sendGridUser\");\n final String sendGridPassword = request.getParameter(\"sendGridPassword\");\n\n class SMTPAuthenticator extends Authenticator\n {\n   public PasswordAuthentication getPasswordAuthentication()\n   {\n        String username = sendGridUser;\n        String password = sendGridPassword;\n\n        return new PasswordAuthentication(username, password);   \n   }\n }\n try\n {\n\n     // The SendGrid SMTP server.\n     String SMTP_HOST_NAME = \"smtp.sendgrid.net\";\n\n     Properties properties;\n\n     properties = new Properties();\n\n     // Specify SMTP values.\n     properties.put(\"mail.transport.protocol\", \"smtp\");\n     properties.put(\"mail.smtp.host\", SMTP_HOST_NAME);\n     properties.put(\"mail.smtp.port\", 587);\n     properties.put(\"mail.smtp.auth\", \"true\");\n\n     // Display the email fields entered by the user. \n     out.println(\"Value entered for email Subject: \" + request.getParameter(\"emailSubject\") + \"<br/>\");        \n     out.println(\"Value entered for email      To: \" + request.getParameter(\"emailTo\") + \"<br/>\");\n     out.println(\"Value entered for email    From: \" + request.getParameter(\"emailFrom\") + \"<br/>\");\n     out.println(\"Value entered for email    Text: \" + \"<br/>\" + request.getParameter(\"emailText\") + \"<br/>\");\n\n     // Create the authenticator object.\n     Authenticator authenticator = new SMTPAuthenticator();\n\n     // Create the mail session object.\n     Session mailSession;\n     mailSession = Session.getDefaultInstance(properties, authenticator);\n\n     // Display debug information to stdout, useful when using the\n     // compute emulator during development.\n     mailSession.setDebug(true);\n\n     // Create the message and message part objects.\n     MimeMessage message;\n     Multipart multipart;\n     MimeBodyPart messagePart; \n\n     message = new MimeMessage(mailSession);\n\n     multipart = new MimeMultipart(\"alternative\");\n     messagePart = new MimeBodyPart();\n     messagePart.setContent(request.getParameter(\"emailText\"), \"text/html\");\n     multipart.addBodyPart(messagePart);            \n\n     // Specify the email To, From, Subject and Content. \n     message.setFrom(new InternetAddress(request.getParameter(\"emailFrom\")));\n     message.addRecipient(Message.RecipientType.TO, new InternetAddress(request.getParameter(\"emailTo\")));\n     message.setSubject(request.getParameter(\"emailSubject\")); \n     message.setContent(multipart);\n\n     // Uncomment the following if you want to add a footer.\n     // message.addHeader(\"X-SMTPAPI\", \"{\\\"filters\\\": {\\\"footer\\\": {\\\"settings\\\": {\\\"enable\\\":1,\\\"text/html\\\": \\\"<html>This is my <b>email footer</b>.</html>\\\"}}}}\");\n\n     // Uncomment the following if you want to enable click tracking.\n     // message.addHeader(\"X-SMTPAPI\", \"{\\\"filters\\\": {\\\"clicktrack\\\": {\\\"settings\\\": {\\\"enable\\\":1}}}}\");\n\n     Transport transport;\n     transport = mailSession.getTransport();\n     // Connect the transport object.\n     transport.connect();\n     // Send the message.\n     transport.sendMessage(message,  message.getRecipients(Message.RecipientType.TO));\n     // Close the connection.\n     transport.close();\n\n    out.println(\"<p>Email processing completed.</p>\");\n\n }\n catch (Exception e)\n {\n     out.println(\"<p>Exception encountered: \" + \n                        e.getMessage()     +\n                        \"</p>\");   \n }\n%>\n\n</body>\n</html>\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "PasswordAuthentication.__init__": true
        },
        "APIsProjects": {
          "PasswordAuthentication.__init__": 40
        },
        "APIsFiles": {
          "PasswordAuthentication.__init__": 53
        },
        "APIsSnippets": {
          "PasswordAuthentication.__init__": 93
        },
        "APIsQualifiedNames": {
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "http://www.rgagnon.com/javadetails/java-0321.html",
    "url position": 23,
    "segments": [
      {
        "code": "\nimport javax.mail.*;\nimport javax.mail.internet.*;\n\nimport java.util.Properties;\n\nclass SimpleMail {\n    public static void main(String[] args) throws Exception{\n      Properties props = new Properties();\n      props.setProperty(\"mail.transport.protocol\", \"smtp\");\n      props.setProperty(\"mail.host\", \"mymail.server.org\");\n      props.setProperty(\"mail.user\", \"emailuser\");\n      props.setProperty(\"mail.password\", \"\");\n\n      Session mailSession = Session.getDefaultInstance(props, null);\n      Transport transport = mailSession.getTransport();\n\n      MimeMessage message = new MimeMessage(mailSession);\n      message.setSubject(\"Testing javamail plain\");\n      message.setContent(\"This is a test\", \"text/plain\");\n      message.addRecipient(Message.RecipientType.TO,\n           new InternetAddress(\"elvis@presley.org\"));\n\n      transport.connect();\n      transport.sendMessage(message,\n          message.getRecipients(Message.RecipientType.TO));\n      transport.close();\n    }\n}",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.setProperty": true,
          "Session.getTransport": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setContent": true,
          "InternetAddress.__init__": true,
          "MimeMessage.addRecipient": true,
          "Transport.connect": true,
          "MimeMessage.getRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.setProperty": 184,
          "Session.getTransport": 14,
          "MimeMessage.__init__": 26,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setContent": 14,
          "InternetAddress.__init__": 34,
          "MimeMessage.addRecipient": 7,
          "Transport.connect": 13,
          "MimeMessage.getRecipients": 6,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.setProperty": 1282,
          "Session.getTransport": 17,
          "MimeMessage.__init__": 49,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setContent": 18,
          "InternetAddress.__init__": 69,
          "MimeMessage.addRecipient": 7,
          "Transport.connect": 16,
          "MimeMessage.getRecipients": 9,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.setProperty": 5579,
          "Session.getTransport": 18,
          "MimeMessage.__init__": 79,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setContent": 21,
          "InternetAddress.__init__": 183,
          "MimeMessage.addRecipient": 10,
          "Transport.connect": 18,
          "MimeMessage.getRecipients": 28,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getRecipients": "javax.mail.internet.MimeMessage.getRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\nimport javax.mail.*;\nimport javax.mail.internet.*;\n\nimport java.util.Properties;\n\nclass SimpleHTMLMail {\n    public static void main(String[] args) throws Exception{\n      Properties props = new Properties();\n      props.setProperty(\"mail.transport.protocol\", \"smtp\");\n      props.setProperty(\"mail.host\", \"mymail.server.org\");\n      props.setProperty(\"mail.user\", \"emailuser\");\n      props.setProperty(\"mail.password\", \"\");\n\n      Session mailSession = Session.getDefaultInstance(props, null);\n      Transport transport = mailSession.getTransport();\n\n      MimeMessage message = new MimeMessage(mailSession);\n      message.setSubject(\"Testing javamail html\");\n      message.setContent\n         (\"This is a test <b>HOWTO<b>\", \"text/html; charset=ISO-8859-1\");\n      message.addRecipient(Message.RecipientType.TO,\n         new InternetAddress(\"elvis@presley.org\"));\n\n      transport.connect();\n      transport.sendMessage(message,\n         message.getRecipients(Message.RecipientType.TO));\n      transport.close();\n    }\n}\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.setProperty": true,
          "Session.getTransport": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setContent": true,
          "InternetAddress.__init__": true,
          "MimeMessage.addRecipient": true,
          "Transport.connect": true,
          "MimeMessage.getRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.setProperty": 184,
          "Session.getTransport": 14,
          "MimeMessage.__init__": 26,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setContent": 14,
          "InternetAddress.__init__": 34,
          "MimeMessage.addRecipient": 7,
          "Transport.connect": 13,
          "MimeMessage.getRecipients": 6,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.setProperty": 1282,
          "Session.getTransport": 17,
          "MimeMessage.__init__": 49,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setContent": 18,
          "InternetAddress.__init__": 69,
          "MimeMessage.addRecipient": 7,
          "Transport.connect": 16,
          "MimeMessage.getRecipients": 9,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.setProperty": 5579,
          "Session.getTransport": 18,
          "MimeMessage.__init__": 79,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setContent": 21,
          "InternetAddress.__init__": 183,
          "MimeMessage.addRecipient": 10,
          "Transport.connect": 18,
          "MimeMessage.getRecipients": 28,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getRecipients": "javax.mail.internet.MimeMessage.getRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\nimport javax.mail.*;\nimport javax.mail.internet.*;\nimport javax.activation.FileDataSource;\nimport javax.activation.DataHandler;\n\nimport java.util.Properties;\n\nclass SimpleMailWithAttachment {\n    public static void main(String[] args) throws Exception{\n      boolean debug = false;\n      Properties props = new Properties();\n      props.setProperty(\"mail.transport.protocol\", \"smtp\");\n      props.setProperty(\"mail.host\", \"mymail.server.org\");\n      props.setProperty(\"mail.user\", \"emailuser\");\n      props.setProperty(\"mail.password\", \"\");\n\n      Session mailSession = Session.getDefaultInstance(props, null);\n      mailSession.setDebug(debug);\n      Transport transport = mailSession.getTransport();\n\n      MimeMessage message = new MimeMessage(mailSession);\n      message.setSubject(\"Testing javamail with attachment\");\n\n      MimeBodyPart textPart = new MimeBodyPart();\n      textPart.setContent(\"<h1>Check attachment</h1>\", \"text/html\");\n\n      MimeBodyPart attachFilePart = new MimeBodyPart();\n      FileDataSource fds = \n          new FileDataSource(\"SimpleMailWithAttachment.java\");\n      attachFilePart.setDataHandler(new DataHandler(fds));\n      attachFilePart.setFileName(fds.getName());\n\n      Multipart mp = new MimeMultipart();\n      mp.addBodyPart(textPart);\n      mp.addBodyPart(attachFilePart);\n\n      message.setContent(mp);\n      message.addRecipient(Message.RecipientType.TO,\n          new InternetAddress(\"elvis@presley.org\"));\n\n      transport.connect();\n      transport.sendMessage(message,\n          message.getRecipients(Message.RecipientType.TO));\n      transport.close();\n    }\n}\n",
        "in_page_order": 3,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.setProperty": true,
          "Session.setDebug": true,
          "Session.getTransport": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setSubject": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setContent": true,
          "FileDataSource.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true,
          "FileDataSource.getName": false,
          "MimeBodyPart.setFileName": true,
          "Multipart.__init__": true,
          "Multipart.addBodyPart": true,
          "MimeMessage.setContent": true,
          "InternetAddress.__init__": true,
          "MimeMessage.addRecipient": true,
          "Transport.connect": true,
          "MimeMessage.getRecipients": true,
          "Transport.sendMessage": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.setProperty": 184,
          "Session.setDebug": 6,
          "Session.getTransport": 14,
          "MimeMessage.__init__": 26,
          "MimeMessage.setSubject": 19,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setContent": 12,
          "FileDataSource.__init__": 9,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9,
          "MimeBodyPart.setFileName": 9,
          "Multipart.__init__": 8,
          "Multipart.addBodyPart": 8,
          "MimeMessage.setContent": 14,
          "InternetAddress.__init__": 34,
          "MimeMessage.addRecipient": 7,
          "Transport.connect": 13,
          "MimeMessage.getRecipients": 6,
          "Transport.sendMessage": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.setProperty": 1282,
          "Session.setDebug": 9,
          "Session.getTransport": 17,
          "MimeMessage.__init__": 49,
          "MimeMessage.setSubject": 25,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setContent": 14,
          "FileDataSource.__init__": 94,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11,
          "MimeBodyPart.setFileName": 11,
          "Multipart.__init__": 9,
          "Multipart.addBodyPart": 9,
          "MimeMessage.setContent": 18,
          "InternetAddress.__init__": 69,
          "MimeMessage.addRecipient": 7,
          "Transport.connect": 16,
          "MimeMessage.getRecipients": 9,
          "Transport.sendMessage": 15,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.setProperty": 5579,
          "Session.setDebug": 11,
          "Session.getTransport": 18,
          "MimeMessage.__init__": 79,
          "MimeMessage.setSubject": 34,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setContent": 26,
          "FileDataSource.__init__": 206,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17,
          "MimeBodyPart.setFileName": 12,
          "Multipart.__init__": 14,
          "Multipart.addBodyPart": 27,
          "MimeMessage.setContent": 21,
          "InternetAddress.__init__": 183,
          "MimeMessage.addRecipient": 10,
          "Transport.connect": 18,
          "MimeMessage.getRecipients": 28,
          "Transport.sendMessage": 16,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty",
          "Session.setDebug": "javax.mail.Session.setDebug",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setContent": "javax.mail.internet.MimeBodyPart.setContent",
          "FileDataSource.__init__": "javax.activation.FileDataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler",
          "MimeBodyPart.setFileName": "javax.mail.internet.MimeBodyPart.setFileName",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "Transport.connect": "javax.mail.Transport.connect",
          "MimeMessage.getRecipients": "javax.mail.internet.MimeMessage.getRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 0.9545454545454546
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://commons.apache.org/proper/commons-email/userguide.html",
    "url position": 25,
    "segments": [
      {
        "code": "\n\nEmail email = new SimpleEmail();\nemail.setHostName(\"smtp.googlemail.com\");\nemail.setSmtpPort(465);\nemail.setAuthenticator(new DefaultAuthenticator(\"username\", \"password\"));\nemail.setSSLOnConnect(true);\nemail.setFrom(\"user@gmail.com\");\nemail.setSubject(\"TestMail\");\nemail.setMsg(\"This is a test mail ... :-)\");\nemail.addTo(\"foo@bar.com\");\nemail.send();\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Email.__init__": true,
          "Email.setHostName": false,
          "Email.setSmtpPort": false,
          "DefaultAuthenticator.__init__": true,
          "Email.setAuthenticator": false,
          "Email.setSSLOnConnect": false,
          "Email.setFrom": false,
          "Email.setSubject": false,
          "Email.setMsg": false,
          "Email.addTo": false,
          "Email.send": false
        },
        "APIsProjects": {
          "Email.__init__": 9,
          "DefaultAuthenticator.__init__": 5
        },
        "APIsFiles": {
          "Email.__init__": 13,
          "DefaultAuthenticator.__init__": 6
        },
        "APIsSnippets": {
          "Email.__init__": 25,
          "DefaultAuthenticator.__init__": 6
        },
        "APIsQualifiedNames": {
          "Email.__init__": "quickfix.fix42.Email.__init__",
          "DefaultAuthenticator.__init__": "org.apache.commons.mail.DefaultAuthenticator.__init__"
        },
        "API_Ratio": 0.18181818181818182
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://www.tutorialspoint.com/java/java_sending_email.htm",
    "url position": 1,
    "segments": [
      {
        "code": "\n// File Name SendEmail.java\n\nimport java.util.*;\nimport javax.mail.*;\nimport javax.mail.internet.*;\nimport javax.activation.*;\n\npublic class SendEmail {\n\n   public static void main(String [] args) {    \n      // Recipient's email ID needs to be mentioned.\n      String to = \"abcd@gmail.com\";\n\n      // Sender's email ID needs to be mentioned\n      String from = \"web@gmail.com\";\n\n      // Assuming you are sending email from localhost\n      String host = \"localhost\";\n\n      // Get system properties\n      Properties properties = System.getProperties();\n\n      // Setup mail server\n      properties.setProperty(\"mail.smtp.host\", host);\n\n      // Get the default Session object.\n      Session session = Session.getDefaultInstance(properties);\n\n      try {\n         // Create a default MimeMessage object.\n         MimeMessage message = new MimeMessage(session);\n\n         // Set From: header field of the header.\n         message.setFrom(new InternetAddress(from));\n\n         // Set To: header field of the header.\n         message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));\n\n         // Set Subject: header field\n         message.setSubject(\"This is the Subject Line!\");\n\n         // Now set the actual message\n         message.setText(\"This is actual message\");\n\n         // Send message\n         Transport.send(message);\n         System.out.println(\"Sent message successfully....\");\n      } catch (MessagingException mex) {\n         mex.printStackTrace();\n      }\n   }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setText": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setText": 9
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setText": 13
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setText": 20
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setText": "javax.mail.internet.MimeMessage.setText"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n// File Name SendHTMLEmail.java\n\nimport java.util.*;\nimport javax.mail.*;\nimport javax.mail.internet.*;\nimport javax.activation.*;\n\npublic class SendHTMLEmail {\n\n   public static void main(String [] args) {\n      // Recipient's email ID needs to be mentioned.\n      String to = \"abcd@gmail.com\";\n\n      // Sender's email ID needs to be mentioned\n      String from = \"web@gmail.com\";\n\n      // Assuming you are sending email from localhost\n      String host = \"localhost\";\n\n      // Get system properties\n      Properties properties = System.getProperties();\n\n      // Setup mail server\n      properties.setProperty(\"mail.smtp.host\", host);\n\n      // Get the default Session object.\n      Session session = Session.getDefaultInstance(properties);\n\n      try {\n         // Create a default MimeMessage object.\n         MimeMessage message = new MimeMessage(session);\n\n         // Set From: header field of the header.\n         message.setFrom(new InternetAddress(from));\n\n         // Set To: header field of the header.\n         message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));\n\n         // Set Subject: header field\n         message.setSubject(\"This is the Subject Line!\");\n\n         // Send the actual HTML message, as big as you like\n         message.setContent(\"<h1>This is actual message</h1>\", \"text/html\");\n\n         // Send message\n         Transport.send(message);\n         System.out.println(\"Sent message successfully....\");\n      } catch (MessagingException mex) {\n         mex.printStackTrace();\n      }\n   }\n}\n",
        "in_page_order": 4,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\n// File Name SendFileEmail.java\n\nimport java.util.*;\nimport javax.mail.*;\nimport javax.mail.internet.*;\nimport javax.activation.*;\n\npublic class SendFileEmail {\n\n   public static void main(String [] args) {     \n      // Recipient's email ID needs to be mentioned.\n      String to = \"abcd@gmail.com\";\n\n      // Sender's email ID needs to be mentioned\n      String from = \"web@gmail.com\";\n\n      // Assuming you are sending email from localhost\n      String host = \"localhost\";\n\n      // Get system properties\n      Properties properties = System.getProperties();\n\n      // Setup mail server\n      properties.setProperty(\"mail.smtp.host\", host);\n\n      // Get the default Session object.\n      Session session = Session.getDefaultInstance(properties);\n\n      try {\n         // Create a default MimeMessage object.\n         MimeMessage message = new MimeMessage(session);\n\n         // Set From: header field of the header.\n         message.setFrom(new InternetAddress(from));\n\n         // Set To: header field of the header.\n         message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));\n\n         // Set Subject: header field\n         message.setSubject(\"This is the Subject Line!\");\n\n         // Create the message part \n         BodyPart messageBodyPart = new MimeBodyPart();\n\n         // Fill the message\n         messageBodyPart.setText(\"This is message body\");\n         \n         // Create a multipar message\n         Multipart multipart = new MimeMultipart();\n\n         // Set text message part\n         multipart.addBodyPart(messageBodyPart);\n\n         // Part two is attachment\n         messageBodyPart = new MimeBodyPart();\n         String filename = \"file.txt\";\n         DataSource source = new FileDataSource(filename);\n         messageBodyPart.setDataHandler(new DataHandler(source));\n         messageBodyPart.setFileName(filename);\n         multipart.addBodyPart(messageBodyPart);\n\n         // Send the complete message parts\n         message.setContent(multipart );\n\n         // Send message\n         Transport.send(message);\n         System.out.println(\"Sent message successfully....\");\n      } catch (MessagingException mex) {\n         mex.printStackTrace();\n      }\n   }\n}\n",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.setProperty": true,
          "MimeMessage.__init__": true,
          "InternetAddress.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.addRecipient": true,
          "MimeMessage.setSubject": true,
          "BodyPart.__init__": true,
          "BodyPart.setText": false,
          "Multipart.__init__": true,
          "Multipart.addBodyPart": true,
          "DataSource.__init__": true,
          "DataHandler.__init__": true,
          "BodyPart.setDataHandler": true,
          "BodyPart.setFileName": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "Properties.setProperty": 184,
          "MimeMessage.__init__": 26,
          "InternetAddress.__init__": 34,
          "MimeMessage.setFrom": 18,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 19,
          "BodyPart.__init__": 12,
          "Multipart.__init__": 8,
          "Multipart.addBodyPart": 8,
          "DataSource.__init__": 35,
          "DataHandler.__init__": 22,
          "BodyPart.setDataHandler": 6,
          "BodyPart.setFileName": 5,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "Properties.setProperty": 1282,
          "MimeMessage.__init__": 49,
          "InternetAddress.__init__": 69,
          "MimeMessage.setFrom": 24,
          "MimeMessage.addRecipient": 7,
          "MimeMessage.setSubject": 25,
          "BodyPart.__init__": 20,
          "Multipart.__init__": 9,
          "Multipart.addBodyPart": 9,
          "DataSource.__init__": 72,
          "DataHandler.__init__": 61,
          "BodyPart.setDataHandler": 8,
          "BodyPart.setFileName": 6,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "Properties.setProperty": 5579,
          "MimeMessage.__init__": 79,
          "InternetAddress.__init__": 183,
          "MimeMessage.setFrom": 32,
          "MimeMessage.addRecipient": 10,
          "MimeMessage.setSubject": 34,
          "BodyPart.__init__": 38,
          "Multipart.__init__": 14,
          "Multipart.addBodyPart": 27,
          "DataSource.__init__": 141,
          "DataHandler.__init__": 111,
          "BodyPart.setDataHandler": 11,
          "BodyPart.setFileName": 9,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "Properties.setProperty": "java.util.Properties.setProperty",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.addRecipient": "javax.mail.internet.MimeMessage.addRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "BodyPart.__init__": "com.dotcms.repackage.jersey_1_12.com.sun.jersey.multipart.BodyPart.__init__",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "BodyPart.setDataHandler": "javax.mail.BodyPart.setDataHandler",
          "BodyPart.setFileName": "javax.mail.BodyPart.setFileName",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 0.9333333333333333
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-using-sdk-java.html",
    "url position": 21,
    "segments": [
      {
        "code": "package com.amazonaws.samples;\n\nimport java.io.IOException;\nimport com.amazonaws.services.simpleemail.*;\nimport com.amazonaws.services.simpleemail.model.*;\nimport com.amazonaws.regions.*;\n\npublic class AmazonSESSample {\n\n  // Replace sender@example.com with your \"From\" address.\n  // This address must be verified with Amazon SES.\n  static final String FROM = \"sender@example.com\";\n\n  // Replace recipient@example.com with a \"To\" address. If your account\n  // is still in the sandbox, this address must be verified.\n  static final String TO = \"recipient@example.com\";\n\n  // The configuration set to use for this email. If you do not want to use a\n  // configuration set, comment the following variable and the \n  // .withConfigurationSetName(CONFIGSET); argument below.\n  static final String CONFIGSET = \"ConfigSet\";\n\n  // The subject line for the email.\n  static final String SUBJECT = \"Amazon SES test (AWS SDK for Java)\";\n  \n  // The HTML body for the email.\n  static final String HTMLBODY = \"<h1>Amazon SES test (AWS SDK for Java)</h1>\"\n      + \"<p>This email was sent with <a href='https://aws.amazon.com/ses/'>\"\n      + \"Amazon SES</a> using the <a href='https://aws.amazon.com/sdk-for-java/'>\" \n      + \"AWS SDK for Java</a>\";\n\n  // The email body for recipients with non-HTML email clients.\n  static final String TEXTBODY = \"This email was sent through Amazon SES \"\n      + \"using the AWS SDK for Java.\";\n\n  public static void main(String[] args) throws IOException {\n\n    try {\n      AmazonSimpleEmailService client = \n          AmazonSimpleEmailServiceClientBuilder.standard()\n          // Replace US_WEST_2 with the AWS Region you're using for\n          // Amazon SES.\n            .withRegion(Regions.US_WEST_2).build();\n      SendEmailRequest request = new SendEmailRequest()\n          .withDestination(\n              new Destination().withToAddresses(TO))\n          .withMessage(new Message()\n              .withBody(new Body()\n                  .withHtml(new Content()\n                      .withCharset(\"UTF-8\").withData(HTMLBODY))\n                  .withText(new Content()\n                      .withCharset(\"UTF-8\").withData(TEXTBODY)))\n              .withSubject(new Content()\n                  .withCharset(\"UTF-8\").withData(SUBJECT)))\n          .withSource(FROM)\n          // Comment or remove the next line if you are not using a\n          // configuration set\n          .withConfigurationSetName(CONFIGSET);\n      client.sendEmail(request);\n      System.out.println(\"Email sent!\");\n    } catch (Exception ex) {\n      System.out.println(\"The email was not sent. Error message: \" \n          + ex.getMessage());\n    }\n  }\n}",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Content.__init__": true,
          "Body.__init__": true,
          "Message.__init__": true,
          "Destination.__init__": true,
          "SendEmailRequest.__init__": true,
          "AmazonSimpleEmailService.sendEmail": false
        },
        "APIsProjects": {
          "Content.__init__": 25,
          "Body.__init__": 24,
          "Message.__init__": 109,
          "Destination.__init__": 13,
          "SendEmailRequest.__init__": 5
        },
        "APIsFiles": {
          "Content.__init__": 54,
          "Body.__init__": 37,
          "Message.__init__": 718,
          "Destination.__init__": 35,
          "SendEmailRequest.__init__": 5
        },
        "APIsSnippets": {
          "Content.__init__": 98,
          "Body.__init__": 77,
          "Message.__init__": 1904,
          "Destination.__init__": 76,
          "SendEmailRequest.__init__": 5
        },
        "APIsQualifiedNames": {
          "Content.__init__": "org.apache.nutch.protocol.Content.__init__",
          "Body.__init__": "com.ushahidi.java.sdk.net.content.Body.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "Destination.__init__": "com.nokia.dempsy.messagetransport.Destination.__init__",
          "SendEmailRequest.__init__": "com.amazonaws.services.simpleemail.model.SendEmailRequest.__init__"
        },
        "API_Ratio": 0.8333333333333334
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "http://www.codejava.net/java-ee/javamail/send-e-mail-with-attachment-in-java",
    "url position": 27,
    "segments": [
      {
        "code": "Message message = new MimeMessage(session);\nMultipart multipart = new MimeMultipart();\n\n// creates body part for the message\nMimeBodyPart messageBodyPart = new MimeBodyPart();\nmessageBodyPart.setContent(message, \"text/html\");\n\n// creates body part for the attachment\nMimeBodyPart attachPart = new MimeBodyPart();\n\n// code to add attachment...will be revealed later\n\n// adds parts to the multipart\nmultipart.addBodyPart(messageBodyPart);\nmultipart.addBodyPart(attachPart);\n\n// sets the multipart as message's content\nmessage.setContent(multipart);\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Message.__init__": true,
          "Multipart.__init__": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setContent": true,
          "Multipart.addBodyPart": true,
          "Message.setContent": true
        },
        "APIsProjects": {
          "Message.__init__": 109,
          "Multipart.__init__": 8,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setContent": 12,
          "Multipart.addBodyPart": 8,
          "Message.setContent": 14
        },
        "APIsFiles": {
          "Message.__init__": 718,
          "Multipart.__init__": 9,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setContent": 14,
          "Multipart.addBodyPart": 9,
          "Message.setContent": 24
        },
        "APIsSnippets": {
          "Message.__init__": 1904,
          "Multipart.__init__": 14,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setContent": 26,
          "Multipart.addBodyPart": 27,
          "Message.setContent": 32
        },
        "APIsQualifiedNames": {
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setContent": "javax.mail.internet.MimeBodyPart.setContent",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "Message.setContent": "javax.mail.Message.setContent"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "// JavaMail 1.3\nMimeBodyPart attachPart = new MimeBodyPart();\nString attachFile = \"D:/Documents/MyFile.mp4\";\n\nDataSource source = new FileDataSource(attachFile);\nattachPart.setDataHandler(new DataHandler(source));\nattachPart.setFileName(new File(attachFile).getName());\n\nmultipart.addBodyPart(attachPart);\n",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeBodyPart.__init__": true,
          "DataSource.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true,
          "File.__init__": true,
          "MimeBodyPart.setFileName": true
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18,
          "DataSource.__init__": 35,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9,
          "File.__init__": 591,
          "MimeBodyPart.setFileName": 9
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31,
          "DataSource.__init__": 72,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11,
          "File.__init__": 13065,
          "MimeBodyPart.setFileName": 11
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93,
          "DataSource.__init__": 141,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17,
          "File.__init__": 40468,
          "MimeBodyPart.setFileName": 12
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler",
          "File.__init__": "java.io.File.__init__",
          "MimeBodyPart.setFileName": "javax.mail.internet.MimeBodyPart.setFileName"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "// JavaMail 1.4\nMimeBodyPart attachPart = new MimeBodyPart();\nString attachFile = \"D:/Documents/MyFile.mp4\";\nattachPart.attachFile(attachFile);\nmultipart.addBodyPart(attachPart);\n",
        "in_page_order": 3,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.attachFile": false
        },
        "APIsProjects": {
          "MimeBodyPart.__init__": 18
        },
        "APIsFiles": {
          "MimeBodyPart.__init__": 31
        },
        "APIsSnippets": {
          "MimeBodyPart.__init__": 93
        },
        "APIsQualifiedNames": {
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__"
        },
        "API_Ratio": 0.5
      },
      {
        "code": "package net.codejava.mail;\n\nimport java.io.IOException;\nimport java.util.Date;\nimport java.util.Properties;\n\nimport javax.mail.Authenticator;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Multipart;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeBodyPart;\nimport javax.mail.internet.MimeMessage;\nimport javax.mail.internet.MimeMultipart;\n\npublic class EmailAttachmentSender {\n\n\tpublic static void sendEmailWithAttachments(String host, String port,\n\t\t\tfinal String userName, final String password, String toAddress,\n\t\t\tString subject, String message, String[] attachFiles)\n\t\t\tthrows AddressException, MessagingException {\n\t\t// sets SMTP server properties\n\t\tProperties properties = new Properties();\n\t\tproperties.put(\"mail.smtp.host\", host);\n\t\tproperties.put(\"mail.smtp.port\", port);\n\t\tproperties.put(\"mail.smtp.auth\", \"true\");\n\t\tproperties.put(\"mail.smtp.starttls.enable\", \"true\");\n\t\tproperties.put(\"mail.user\", userName);\n\t\tproperties.put(\"mail.password\", password);\n\n\t\t// creates a new session with an authenticator\n\t\tAuthenticator auth = new Authenticator() {\n\t\t\tpublic PasswordAuthentication getPasswordAuthentication() {\n\t\t\t\treturn new PasswordAuthentication(userName, password);\n\t\t\t}\n\t\t};\n\t\tSession session = Session.getInstance(properties, auth);\n\n\t\t// creates a new e-mail message\n\t\tMessage msg = new MimeMessage(session);\n\n\t\tmsg.setFrom(new InternetAddress(userName));\n\t\tInternetAddress[] toAddresses = { new InternetAddress(toAddress) };\n\t\tmsg.setRecipients(Message.RecipientType.TO, toAddresses);\n\t\tmsg.setSubject(subject);\n\t\tmsg.setSentDate(new Date());\n\n\t\t// creates message part\n\t\tMimeBodyPart messageBodyPart = new MimeBodyPart();\n\t\tmessageBodyPart.setContent(message, \"text/html\");\n\n\t\t// creates multi-part\n\t\tMultipart multipart = new MimeMultipart();\n\t\tmultipart.addBodyPart(messageBodyPart);\n\n\t\t// adds attachments\n\t\tif (attachFiles != null && attachFiles.length > 0) {\n\t\t\tfor (String filePath : attachFiles) {\n\t\t\t\tMimeBodyPart attachPart = new MimeBodyPart();\n\n\t\t\t\ttry {\n\t\t\t\t\tattachPart.attachFile(filePath);\n\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\tex.printStackTrace();\n\t\t\t\t}\n\n\t\t\t\tmultipart.addBodyPart(attachPart);\n\t\t\t}\n\t\t}\n\n\t\t// sets the multi-part as e-mail's content\n\t\tmsg.setContent(multipart);\n\n\t\t// sends the e-mail\n\t\tTransport.send(msg);\n\n\t}\n\n\t/**\n\t * Test sending e-mail with attachments\n\t */\n\tpublic static void main(String[] args) {\n\t\t// SMTP info\n\t\tString host = \"smtp.gmail.com\";\n\t\tString port = \"587\";\n\t\tString mailFrom = \"your-email-address\";\n\t\tString password = \"your-email-password\";\n\n\t\t// message info\n\t\tString mailTo = \"your-friend-email\";\n\t\tString subject = \"New email with attachments\";\n\t\tString message = \"I have some attachments for you.\";\n\n\t\t// attachments\n\t\tString[] attachFiles = new String[3];\n\t\tattachFiles[0] = \"e:/Test/Picture.png\";\n\t\tattachFiles[1] = \"e:/Test/Music.mp3\";\n\t\tattachFiles[2] = \"e:/Test/Video.mp4\";\n\n\t\ttry {\n\t\t\tsendEmailWithAttachments(host, port, mailFrom, password, mailTo,\n\t\t\t\tsubject, message, attachFiles);\n\t\t\tSystem.out.println(\"Email sent.\");\n\t\t} catch (Exception ex) {\n\t\t\tSystem.out.println(\"Could not send email.\");\n\t\t\tex.printStackTrace();\n\t\t}\n\t}\n}\n",
        "in_page_order": 4,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Date.__init__": true,
          "Message.setSentDate": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setContent": true,
          "Multipart.__init__": true,
          "Multipart.addBodyPart": true,
          "MimeBodyPart.attachFile": false,
          "Message.setContent": true,
          "AddressException.host": false
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Date.__init__": 441,
          "Message.setSentDate": 9,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setContent": 12,
          "Multipart.__init__": 8,
          "Multipart.addBodyPart": 8,
          "Message.setContent": 14
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Date.__init__": 5276,
          "Message.setSentDate": 12,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setContent": 14,
          "Multipart.__init__": 9,
          "Multipart.addBodyPart": 9,
          "Message.setContent": 24
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Date.__init__": 13241,
          "Message.setSentDate": 13,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setContent": 26,
          "Multipart.__init__": 14,
          "Multipart.addBodyPart": 27,
          "Message.setContent": 32
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Date.__init__": "java.util.Date.__init__",
          "Message.setSentDate": "javax.mail.Message.setSentDate",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setContent": "javax.mail.internet.MimeBodyPart.setContent",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "Message.setContent": "javax.mail.Message.setContent"
        },
        "API_Ratio": 0.8888888888888888
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://www.developer.com/java/ent/adding-email-support-to-your-java-applications.html",
    "url position": 35,
    "segments": [
      {
        "code": "package org.mano.mailer;\n\nimport java.util.Properties;\n\nimport javax.mail.Authenticator;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.PasswordAuthentication;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\npublic class Emailer {\n   public static void main(String[] args) {\n      Emailer.sendEmail(\"xyz@gmail.com\", \"Email test\",\n         \"send from Java App\", \"abc@gmail.com\",\n         \"user1\", \"******\");\n   }\n\n   public static void sendEmail(String to, String subject, String msg,\n         String from, String userName, String password) {\n      Properties properties = new Properties();\n      properties.put(\"mail.smtp.auth\", \"true\");\n      properties.put(\"mail.smtp.starttls.enable\", \"true\");\n      properties.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n      properties.put(\"mail.smtp.port\", \"587\");\n      Session session = Session.getInstance(properties, new Authenticator() {\n         protected PasswordAuthentication getPasswordAuthentication() {\n            return new PasswordAuthentication(userName, password);\n          }\n      });\n\n      try {\n         Message message = new MimeMessage(session);\n         message.setFrom(new InternetAddress(from));\n         message.setRecipients(Message.RecipientType.TO,\n            InternetAddress.parse(to));\n         message.setSubject(subject);\n         message.setText(msg);\n         Transport.send(message);\n         System.out.println(\"Message send successfully....\");\n      } catch (MessagingException e) {\n         throw new RuntimeException(e);\n      }\n   }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "PasswordAuthentication.__init__": true,
          "Authenticator.__init__": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Message.setText": true,
          "RuntimeException.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "PasswordAuthentication.__init__": 40,
          "Authenticator.__init__": 42,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "RuntimeException.__init__": 606
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "PasswordAuthentication.__init__": 53,
          "Authenticator.__init__": 55,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "RuntimeException.__init__": 14398
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "PasswordAuthentication.__init__": 93,
          "Authenticator.__init__": 75,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "RuntimeException.__init__": 37177
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__",
          "Authenticator.__init__": "com.sun.net.httpserver.Authenticator.__init__",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "RuntimeException.__init__": "java.lang.RuntimeException.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Properties properties = new Properties();",
        "in_page_order": 2,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true
        },
        "APIsProjects": {
          "Properties.__init__": 302
        },
        "APIsFiles": {
          "Properties.__init__": 2658
        },
        "APIsSnippets": {
          "Properties.__init__": 4618
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "BodyPart part1=new MimeBodyPart();\npart1.setText(msg);\n",
        "in_page_order": 5,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "BodyPart.__init__": true,
          "BodyPart.setText": false
        },
        "APIsProjects": {
          "BodyPart.__init__": 12
        },
        "APIsFiles": {
          "BodyPart.__init__": 20
        },
        "APIsSnippets": {
          "BodyPart.__init__": 38
        },
        "APIsQualifiedNames": {
          "BodyPart.__init__": "com.dotcms.repackage.jersey_1_12.com.sun.jersey.multipart.BodyPart.__init__"
        },
        "API_Ratio": 0.5
      },
      {
        "code": "File file=new File(\"/home/mano/temp/Myfile.doc\");\nBodyPart part2=new MimeBodyPart();\nDataSource attachment=new FileDataSource(file);\npart2.setDataHandler(new DataHandler(attachment));\npart2.setFileName(file.getName());\n",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "File.__init__": true,
          "BodyPart.__init__": true,
          "DataSource.__init__": true,
          "DataHandler.__init__": true,
          "BodyPart.setDataHandler": true,
          "File.getName": true,
          "BodyPart.setFileName": true
        },
        "APIsProjects": {
          "File.__init__": 591,
          "BodyPart.__init__": 12,
          "DataSource.__init__": 35,
          "DataHandler.__init__": 22,
          "BodyPart.setDataHandler": 6,
          "File.getName": 300,
          "BodyPart.setFileName": 5
        },
        "APIsFiles": {
          "File.__init__": 13065,
          "BodyPart.__init__": 20,
          "DataSource.__init__": 72,
          "DataHandler.__init__": 61,
          "BodyPart.setDataHandler": 8,
          "File.getName": 1846,
          "BodyPart.setFileName": 6
        },
        "APIsSnippets": {
          "File.__init__": 40468,
          "BodyPart.__init__": 38,
          "DataSource.__init__": 141,
          "DataHandler.__init__": 111,
          "BodyPart.setDataHandler": 11,
          "File.getName": 3551,
          "BodyPart.setFileName": 9
        },
        "APIsQualifiedNames": {
          "File.__init__": "java.io.File.__init__",
          "BodyPart.__init__": "com.dotcms.repackage.jersey_1_12.com.sun.jersey.multipart.BodyPart.__init__",
          "DataSource.__init__": "org.apache.tomcat.jdbc.pool.DataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "BodyPart.setDataHandler": "javax.mail.BodyPart.setDataHandler",
          "File.getName": "java.io.File.getName",
          "BodyPart.setFileName": "javax.mail.BodyPart.setFileName"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "Multipart multiPart=new MimeMultipart();\nmultiPart.addBodyPart(part1);\nmultiPart.addBodyPart(part2);\n\nmessage.setContent(multiPart);\n",
        "in_page_order": 7,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Multipart.__init__": true,
          "Multipart.addBodyPart": true
        },
        "APIsProjects": {
          "Multipart.__init__": 8,
          "Multipart.addBodyPart": 8
        },
        "APIsFiles": {
          "Multipart.__init__": 9,
          "Multipart.addBodyPart": 9
        },
        "APIsSnippets": {
          "Multipart.__init__": 14,
          "Multipart.addBodyPart": 27
        },
        "APIsQualifiedNames": {
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://www.javaspecialists.eu/archive/Issue131.html",
    "url position": 36,
    "segments": [
      {
        "code": "\nimport java.util.*;\npublic class Conference {\n  private Collection delegates = new ArrayList();\n  public void add(String... names) {\n    Collections.addAll(delegates, names);\n  }\n  public void removeFirst() {\n    delegates.remove(0);\n  }\n  public String toString() {\n    return \"Conference \" + delegates;\n  }\n  public static void main(String[] args) {\n    Conference sun_tech_days = new Conference();\n    sun_tech_days.add(\"Herman\", \"Bobby\", \"Robert\");\n    sun_tech_days.removeFirst();\n    System.out.println(sun_tech_days);\n  }\n}\n  ",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Collection.remove": true,
          "Conference.__init__": false,
          "Conference.add": false,
          "Conference.removeFirst": false
        },
        "APIsProjects": {
          "Collection.remove": 102
        },
        "APIsFiles": {
          "Collection.remove": 306
        },
        "APIsSnippets": {
          "Collection.remove": 467
        },
        "APIsQualifiedNames": {
          "Collection.remove": "java.util.Collection.remove"
        },
        "API_Ratio": 0.25
      },
      {
        "code": "\npackage com.cretesoft.mailer;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class FileCollection extends ArrayList<String> {\n  public FileCollection(String filename) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(filename));\n    String s;\n    while ((s = in.readLine()) != null) {\n      add(s);\n    }\n    in.close();\n  }\n}\n  ",
        "in_page_order": 4,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "FileReader.__init__": true,
          "BufferedReader.__init__": true,
          "BufferedReader.readLine": true,
          "BufferedReader.close": true
        },
        "APIsProjects": {
          "FileReader.__init__": 232,
          "BufferedReader.__init__": 450,
          "BufferedReader.readLine": 429,
          "BufferedReader.close": 295
        },
        "APIsFiles": {
          "FileReader.__init__": 957,
          "BufferedReader.__init__": 2803,
          "BufferedReader.readLine": 2480,
          "BufferedReader.close": 1287
        },
        "APIsSnippets": {
          "FileReader.__init__": 1316,
          "BufferedReader.__init__": 4179,
          "BufferedReader.readLine": 4047,
          "BufferedReader.close": 1804
        },
        "APIsQualifiedNames": {
          "FileReader.__init__": "java.io.FileReader.__init__",
          "BufferedReader.__init__": "java.io.BufferedReader.__init__",
          "BufferedReader.readLine": "java.io.BufferedReader.readLine",
          "BufferedReader.close": "java.io.BufferedReader.close"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "\npackage com.cretesoft.mailer;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class MessageProvider {\n  private final String subject;\n  private final String content;\n\n  public MessageProvider(String filename) throws IOException {\n    Iterator<String> lines = new FileCollection(filename).iterator();\n    subject = lines.next();\n    StringBuilder cb = new StringBuilder();\n    while(lines.hasNext()) {\n      cb.append(lines.next());\n      cb.append('\\n');\n    }\n    content = cb.toString();\n  }\n\n  public final String getSubject() {\n    return subject;\n  }\n\n  public final String getContent() {\n    return content;\n  }\n}\n  ",
        "in_page_order": 5,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "FileCollection.__init__": false,
          "Iterator.next": true,
          "StringBuilder.__init__": true,
          "Iterator.hasNext": true,
          "StringBuilder.append": true,
          "StringBuilder.toString": true
        },
        "APIsProjects": {
          "Iterator.next": 493,
          "StringBuilder.__init__": 662,
          "Iterator.hasNext": 495,
          "StringBuilder.append": 616,
          "StringBuilder.toString": 651
        },
        "APIsFiles": {
          "Iterator.next": 8900,
          "StringBuilder.__init__": 20643,
          "Iterator.hasNext": 8455,
          "StringBuilder.append": 18132,
          "StringBuilder.toString": 19289
        },
        "APIsSnippets": {
          "Iterator.next": 22207,
          "StringBuilder.__init__": 30174,
          "Iterator.hasNext": 20169,
          "StringBuilder.append": 114599,
          "StringBuilder.toString": 28699
        },
        "APIsQualifiedNames": {
          "Iterator.next": "java.util.Iterator.next",
          "StringBuilder.__init__": "java.lang.StringBuilder.__init__",
          "Iterator.hasNext": "java.util.Iterator.hasNext",
          "StringBuilder.append": "java.lang.StringBuilder.append",
          "StringBuilder.toString": "java.lang.StringBuilder.toString"
        },
        "API_Ratio": 0.8333333333333334
      },
      {
        "code": "\npackage com.cretesoft.mailer;\n\nimport javax.mail.*;\nimport javax.mail.internet.*;\nimport java.util.*;\n\npublic class MailSender {\n  private static final String SMTP_SERVER =\n      \"smtp.javaspecialists.eu\";\n  private static final String USERNAME =\n      \"heinz@javaspecialists.eu\";\n  private static final String PASSWORD = \"some_password\";\n  private static final String FROM =\n      \"Dr Heinz M. Kabutz <heinz@javaspecialists.eu>\";\n  private static final String mailer = \"TJSNMailer\";\n\n  private final Transport transport;\n  private final Session session;\n  private final MessageProvider provider;\n\n  public MailSender(MessageProvider provider)\n      throws MessagingException {\n    this.provider = provider;\n    Properties props = System.getProperties();\n    props.put(\"mail.smtp.host\", SMTP_SERVER);\n    props.put(\"mail.smtp.auth\", \"true\");\n    // Get a Session object\n    session = Session.getInstance(props, null);\n    transport = session.getTransport(\"smtp\");\n    transport.connect(SMTP_SERVER, USERNAME, PASSWORD);\n  }\n\n  public void sendMessageTo(String to) throws MessagingException {\n    Message msg = new MimeMessage(session);\n    // set headers\n    msg.setFrom(InternetAddress.parse(FROM, false)[0]);\n    msg.setHeader(\"X-Mailer\", mailer);\n    msg.setSentDate(new Date());\n    msg.setRecipients(Message.RecipientType.TO,\n        InternetAddress.parse(to, false));\n\n    // set title and body\n    msg.setSubject(provider.getSubject());\n    msg.setText(provider.getContent());\n\n    // off goes the message...\n    transport.sendMessage(msg, msg.getAllRecipients());\n  }\n}\n  ",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.put": true,
          "Session.getTransport": true,
          "Transport.connect": true,
          "Message.__init__": true,
          "Message.setFrom": true,
          "Message.setHeader": true,
          "Date.__init__": true,
          "Message.setSentDate": true,
          "Message.setRecipients": true,
          "MessageProvider.getSubject": false,
          "Message.setSubject": true,
          "MessageProvider.getContent": false,
          "Message.setText": true,
          "Message.getAllRecipients": true,
          "Transport.sendMessage": true
        },
        "APIsProjects": {
          "Properties.put": 168,
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "Message.__init__": 109,
          "Message.setFrom": 20,
          "Message.setHeader": 12,
          "Date.__init__": 441,
          "Message.setSentDate": 9,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Message.setText": 5,
          "Message.getAllRecipients": 9,
          "Transport.sendMessage": 13
        },
        "APIsFiles": {
          "Properties.put": 752,
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "Message.__init__": 718,
          "Message.setFrom": 39,
          "Message.setHeader": 185,
          "Date.__init__": 5276,
          "Message.setSentDate": 12,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Message.setText": 7,
          "Message.getAllRecipients": 11,
          "Transport.sendMessage": 15
        },
        "APIsSnippets": {
          "Properties.put": 2848,
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "Message.__init__": 1904,
          "Message.setFrom": 51,
          "Message.setHeader": 501,
          "Date.__init__": 13241,
          "Message.setSentDate": 13,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Message.setText": 8,
          "Message.getAllRecipients": 13,
          "Transport.sendMessage": 16
        },
        "APIsQualifiedNames": {
          "Properties.put": "java.util.Properties.put",
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setHeader": "javax.mail.Message.setHeader",
          "Date.__init__": "java.util.Date.__init__",
          "Message.setSentDate": "javax.mail.Message.setSentDate",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Message.setText": "javax.mail.Message.setText",
          "Message.getAllRecipients": "javax.mail.Message.getAllRecipients",
          "Transport.sendMessage": "javax.mail.Transport.sendMessage"
        },
        "API_Ratio": 0.8666666666666667
      },
      {
        "code": "\npackage com.cretesoft.mailer;\n\nimport javax.mail.MessagingException;\nimport java.io.IOException;\n\npublic class Mailer {\n  private final FileCollection to;\n  private final MessageProvider provider;\n  public Mailer(String addressFile, String messageFile)\n      throws IOException {\n    to = new FileCollection(addressFile);\n    provider = new MessageProvider(messageFile);\n  }\n\n  public void sendMessages() throws MessagingException {\n    MailSender sender = new MailSender(provider);\n    for (String email : to) {\n      sender.sendMessageTo(email);\n      System.out.println(\"Mail sent to \" + email);\n    }\n  }\n\n  public static void main(String[] args) throws Exception {\n    if (args.length != 2) {\n      System.err.println(\n          \"Usage: java Mailer address_file message_file\");\n      System.exit(1);\n    }\n\n    long time = -System.currentTimeMillis();\n    Mailer sender = new Mailer(args[0], args[1]);\n    sender.sendMessages();\n    time += System.currentTimeMillis();\n    System.out.println(time + \"ms\");\n    System.out.println(\"Finished\");\n  }\n}\n  ",
        "in_page_order": 7,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "FileCollection.__init__": false,
          "MessageProvider.__init__": false,
          "MailSender.__init__": false,
          "MailSender.sendMessageTo": false,
          "Mailer.__init__": false,
          "Mailer.sendMessages": false
        },
        "APIsProjects": {},
        "APIsFiles": {},
        "APIsSnippets": {},
        "APIsQualifiedNames": {},
        "API_Ratio": 0.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://www.javacodegeeks.com/2011/10/sending-emails-with-java.html",
    "url position": 39,
    "segments": [
      {
        "code": "// Common variables\nString host = \"your_smtp_server\";\nString from = \"from_address\";\nString to = \"to_address\";\n\n// Set properties\nProperties props = new Properties();\nprops.put(\"mail.smtp.host\", host);\nprops.put(\"mail.debug\", \"true\");\n \n// Get session\nSession session = Session.getInstance(props);\n \ntry {\n    // Instantiate a message\n    Message msg = new MimeMessage(session);\n \n    // Set the FROM message\n    msg.setFrom(new InternetAddress(from));\n \n    // The recipients can be more than one so we use an array but you can\n    // use 'new InternetAddress(to)' for only one address.\n    InternetAddress[] address = {new InternetAddress(to)};\n    msg.setRecipients(Message.RecipientType.TO, address);\n \n    // Set the message subject and date we sent it.\n    msg.setSubject(\"Email from JavaMail test\");\n    msg.setSentDate(new Date());\n \n    // Set message content\n    msg.setText(\"This is the text for this simple demo using JavaMail.\");\n \n    // Send the message\n    Transport.send(msg);\n}\ncatch (MessagingException mex) {\n    mex.printStackTrace();\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.put": true,
          "Message.__init__": true,
          "InternetAddress.__init__": true,
          "Message.setFrom": true,
          "Message.setRecipients": true,
          "Message.setSubject": true,
          "Date.__init__": true,
          "Message.setSentDate": true,
          "Message.setText": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "Message.__init__": 109,
          "InternetAddress.__init__": 34,
          "Message.setFrom": 20,
          "Message.setRecipients": 10,
          "Message.setSubject": 20,
          "Date.__init__": 441,
          "Message.setSentDate": 9,
          "Message.setText": 5
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "Message.__init__": 718,
          "InternetAddress.__init__": 69,
          "Message.setFrom": 39,
          "Message.setRecipients": 12,
          "Message.setSubject": 38,
          "Date.__init__": 5276,
          "Message.setSentDate": 12,
          "Message.setText": 7
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "Message.__init__": 1904,
          "InternetAddress.__init__": 183,
          "Message.setFrom": 51,
          "Message.setRecipients": 22,
          "Message.setSubject": 43,
          "Date.__init__": 13241,
          "Message.setSentDate": 13,
          "Message.setText": 8
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "Message.__init__": "org.springframework.amqp.core.Message.__init__",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "Message.setFrom": "javax.mail.Message.setFrom",
          "Message.setRecipients": "javax.mail.Message.setRecipients",
          "Message.setSubject": "javax.mail.Message.setSubject",
          "Date.__init__": "java.util.Date.__init__",
          "Message.setSentDate": "javax.mail.Message.setSentDate",
          "Message.setText": "javax.mail.Message.setText"
        },
        "API_Ratio": 1.0
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://dzone.com/articles/nb-ckeditor-javamail-tutorial",
    "url position": 43,
    "segments": [
      {
        "code": "private Properties prepareProperties(){   Properties props = new Properties();   props.setProperty(\"mail.smtp.host\", smtpServer);   props.setProperty(\"mail.smtp.port\", port);   props.setProperty(\"mail.smtp.user\", user);   props.setProperty(\"mail.smtp.password\", password);   props.setProperty(\"mail.smtp.auth\", auth);   return props;}",
        "in_page_order": 6,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Properties.__init__": true,
          "Properties.setProperty": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.setProperty": 184
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.setProperty": 1282
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.setProperty": 5579
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.setProperty": "java.util.Properties.setProperty"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "public void sendEmail(String subject,String HtmlMessage,String[] to)    {        Transport transport = null;        try {            Properties props = prepareProperties();            Session mailSession = Session.getDefaultInstance(                            props, new SMTPAuthenticator(from, password, true));            transport =  mailSession.getTransport(\"smtp\");            MimeMessage message = prepareMessage(mailSession, \"ISO-8859-2\",                                                from, subject, HtmlMessage, to);            transport.connect();            Transport.send(message);        } catch (Exception ex) {            }        finally{            try {                transport.close();            } catch (MessagingException ex) {                Logger.getLogger(EmailSender.class.getName()).                                                    log(Level.SEVERE, null, ex);            }        }    }",
        "in_page_order": 8,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "SMTPAuthenticator.__init__": false,
          "Session.getTransport": true,
          "Transport.connect": true,
          "Transport.close": true
        },
        "APIsProjects": {
          "Session.getTransport": 14,
          "Transport.connect": 13,
          "Transport.close": 17
        },
        "APIsFiles": {
          "Session.getTransport": 17,
          "Transport.connect": 16,
          "Transport.close": 36
        },
        "APIsSnippets": {
          "Session.getTransport": 18,
          "Transport.connect": 18,
          "Transport.close": 66
        },
        "APIsQualifiedNames": {
          "Session.getTransport": "javax.mail.Session.getTransport",
          "Transport.connect": "javax.mail.Transport.connect",
          "Transport.close": "org.eclipse.jgit.transport.Transport.close"
        },
        "API_Ratio": 0.75
      },
      {
        "code": "package EmailSender;import javax.mail.Authenticator;import javax.mail.PasswordAuthentication;public class SMTPAuthenticator extends Authenticator{    private String username;    private String password;    private boolean needAuth;    public SMTPAuthenticator(String username, String password,boolean needAuth)    {        this.username = username;        this.password = password;        this.needAuth = needAuth;    }    @Override    protected PasswordAuthentication getPasswordAuthentication() {        if (needAuth)            return new PasswordAuthentication(username, password);                else return null;    }}",
        "in_page_order": 9,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "PasswordAuthentication.__init__": true
        },
        "APIsProjects": {
          "PasswordAuthentication.__init__": 40
        },
        "APIsFiles": {
          "PasswordAuthentication.__init__": 53
        },
        "APIsSnippets": {
          "PasswordAuthentication.__init__": 93
        },
        "APIsQualifiedNames": {
          "PasswordAuthentication.__init__": "java.net.PasswordAuthentication.__init__"
        },
        "API_Ratio": 1.0
      },
      {
        "code": "public static void main(String[] args)     UIUtils.setPreferredLookAndFeel();    NativeInterface.open();    final String configurationScript =      \"FCKConfig.ToolbarSets[\\\"Default\\\"] = [\\n\" +      \"['Source','DocProps','-','Save','NewPage','Preview','-','Templates'],\\n\" +      \"['Cut','Copy','Paste','PasteText','PasteWord','-','Print','SpellCheck'],\\n\" +      \"['Undo','Redo','-','Find','Replace','-','SelectAll','RemoveFormat'],\\n\" +      \"['Form','Checkbox','Radio','TextField','Textarea','Select','Button','ImageButton','HiddenField'],\\n\" +      \"'/',\\n\" +      \"['Style','FontFormat','FontName','FontSize'],\\n\" +      \"['TextColor','BGColor'],\\n\" +      \"'/',\\n\" +      \"['Bold','Italic','Underline','StrikeThrough','-','Subscript','Superscript'],\\n\" +      \"['OrderedList','UnorderedList','-','Outdent','Indent','Blockquote'],\\n\" +      \"['JustifyLeft','JustifyCenter','JustifyRight','JustifyFull'],\\n\" +      \"['Link','Unlink','Anchor'],\\n\" +      \"['Image','Flash','Table','Rule','Smiley','SpecialChar','PageBreak', '-', 'ShowBlocks'],\\n\" +      \"];\\n\" +      \"FCKConfig.ToolbarCanCollapse = false;\\n\";        java.awt.EventQueue.invokeLater(new Runnable() {            public void run() {                htmlEditor = new JHTMLEditor(HTMLEditorImplementation.FCKEditor,JHTMLEditor.FCKEditorOptions.setCustomJavascriptConfiguration(configurationScript));                SendEmail es2 = new SendEmail();                es2.setSize(new Dimension(800,600));                es2.add(htmlEditor,BorderLayout.CENTER);                es2.setLocationByPlatform(true);                es2.setVisible(true);            }        });    }",
        "in_page_order": 10,
        "first_in_page": false,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": true,
        "semicolon": true,
        "APIs": {
          "Dimension.__init__": true,
          "SendEmail.__init__": false,
          "JHTMLEditor.__init__": false,
          "Runnable.__init__": true,
          "SendEmail.setSize": false,
          "SendEmail.add": false,
          "SendEmail.setLocationByPlatform": false,
          "SendEmail.setVisible": false
        },
        "APIsProjects": {
          "Dimension.__init__": 96,
          "Runnable.__init__": 544
        },
        "APIsFiles": {
          "Dimension.__init__": 1381,
          "Runnable.__init__": 7286
        },
        "APIsSnippets": {
          "Dimension.__init__": 3072,
          "Runnable.__init__": 17261
        },
        "APIsQualifiedNames": {
          "Dimension.__init__": "java.awt.Dimension.__init__",
          "Runnable.__init__": "org.jboss.arquillian.container.weld.ee.embedded_1_1.mock.TestContainer.Runner.Runnable.__init__"
        },
        "API_Ratio": 0.25
      }
    ]
  },
  {
    "query": "How to send email",
    "url": "https://kodejava.org/how-do-i-send-an-email-with-attachment/",
    "url position": 41,
    "segments": [
      {
        "code": "package org.kodejava.example.mail;\n\nimport javax.activation.DataHandler;\nimport javax.activation.FileDataSource;\nimport javax.mail.*;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeBodyPart;\nimport javax.mail.internet.MimeMessage;\nimport javax.mail.internet.MimeMultipart;\nimport java.util.Date;\nimport java.util.Properties;\n\npublic class SendEmailWithAttachment {\n    public static void main(String[] args) {\n        SendEmailWithAttachment demo = new SendEmailWithAttachment();\n        demo.sendEmail();\n    }\n\n    public void sendEmail() {\n        // Defines the E-Mail information.\n        String from = \"kodejava@gmail.com\";\n        String to = \"kodejava@gmail.com\";\n        String subject = \"Important Message\";\n        String bodyText = \"This is a important message with attachment.\";\n\n        // The attachment file name.\n        String attachmentName = \"D:/Temp/hello.txt\";\n\n        // Creates a Session with the following properties.\n        Properties props = new Properties();\n        props.put(\"mail.smtp.host\", \"smtp.gmail.com\");\n        props.put(\"mail.transport.protocol\", \"smtp\");\n        props.put(\"mail.smtp.starttls.enable\", \"true\");\n        props.put(\"mail.smtp.port\", \"587\");\n        Session session = Session.getDefaultInstance(props);\n\n        try {\n            InternetAddress fromAddress = new InternetAddress(from);\n            InternetAddress toAddress = new InternetAddress(to);\n\n            // Create an Internet mail msg.\n            MimeMessage msg = new MimeMessage(session);\n            msg.setFrom(fromAddress);\n            msg.setRecipient(Message.RecipientType.TO, toAddress);\n            msg.setSubject(subject);\n            msg.setSentDate(new Date());\n\n            // Set the email msg text.\n            MimeBodyPart messagePart = new MimeBodyPart();\n            messagePart.setText(bodyText);\n\n            // Set the email attachment file\n            FileDataSource fileDataSource = new FileDataSource(attachmentName);\n\n            MimeBodyPart attachmentPart = new MimeBodyPart();\n            attachmentPart.setDataHandler(new DataHandler(fileDataSource));\n            attachmentPart.setFileName(fileDataSource.getName());\n\n            // Create Multipart E-Mail.\n            Multipart multipart = new MimeMultipart();\n            multipart.addBodyPart(messagePart);\n            multipart.addBodyPart(attachmentPart);\n\n            msg.setContent(multipart);\n\n            // Send the msg. Don't forget to set the username and password\n            // to authenticate to the mail server.\n            Transport.send(msg, \"kodejava\", \"********\");\n        } catch (MessagingException e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
        "in_page_order": 1,
        "first_in_page": true,
        "accepted_answer": false,
        "answer_votes": 0,
        "answer_stars": 0,
        "length": false,
        "semicolon": true,
        "APIs": {
          "SendEmailWithAttachment.__init__": false,
          "SendEmailWithAttachment.sendEmail": false,
          "Properties.__init__": true,
          "Properties.put": true,
          "InternetAddress.__init__": true,
          "MimeMessage.__init__": true,
          "MimeMessage.setFrom": true,
          "MimeMessage.setRecipient": true,
          "MimeMessage.setSubject": true,
          "Date.__init__": true,
          "MimeMessage.setSentDate": true,
          "MimeBodyPart.__init__": true,
          "MimeBodyPart.setText": true,
          "FileDataSource.__init__": true,
          "DataHandler.__init__": true,
          "MimeBodyPart.setDataHandler": true,
          "FileDataSource.getName": false,
          "MimeBodyPart.setFileName": true,
          "Multipart.__init__": true,
          "Multipart.addBodyPart": true,
          "MimeMessage.setContent": true
        },
        "APIsProjects": {
          "Properties.__init__": 302,
          "Properties.put": 168,
          "InternetAddress.__init__": 34,
          "MimeMessage.__init__": 26,
          "MimeMessage.setFrom": 18,
          "MimeMessage.setRecipient": 5,
          "MimeMessage.setSubject": 19,
          "Date.__init__": 441,
          "MimeMessage.setSentDate": 7,
          "MimeBodyPart.__init__": 18,
          "MimeBodyPart.setText": 4,
          "FileDataSource.__init__": 9,
          "DataHandler.__init__": 22,
          "MimeBodyPart.setDataHandler": 9,
          "MimeBodyPart.setFileName": 9,
          "Multipart.__init__": 8,
          "Multipart.addBodyPart": 8,
          "MimeMessage.setContent": 14
        },
        "APIsFiles": {
          "Properties.__init__": 2658,
          "Properties.put": 752,
          "InternetAddress.__init__": 69,
          "MimeMessage.__init__": 49,
          "MimeMessage.setFrom": 24,
          "MimeMessage.setRecipient": 5,
          "MimeMessage.setSubject": 25,
          "Date.__init__": 5276,
          "MimeMessage.setSentDate": 9,
          "MimeBodyPart.__init__": 31,
          "MimeBodyPart.setText": 5,
          "FileDataSource.__init__": 94,
          "DataHandler.__init__": 61,
          "MimeBodyPart.setDataHandler": 11,
          "MimeBodyPart.setFileName": 11,
          "Multipart.__init__": 9,
          "Multipart.addBodyPart": 9,
          "MimeMessage.setContent": 18
        },
        "APIsSnippets": {
          "Properties.__init__": 4618,
          "Properties.put": 2848,
          "InternetAddress.__init__": 183,
          "MimeMessage.__init__": 79,
          "MimeMessage.setFrom": 32,
          "MimeMessage.setRecipient": 14,
          "MimeMessage.setSubject": 34,
          "Date.__init__": 13241,
          "MimeMessage.setSentDate": 10,
          "MimeBodyPart.__init__": 93,
          "MimeBodyPart.setText": 6,
          "FileDataSource.__init__": 206,
          "DataHandler.__init__": 111,
          "MimeBodyPart.setDataHandler": 17,
          "MimeBodyPart.setFileName": 12,
          "Multipart.__init__": 14,
          "Multipart.addBodyPart": 27,
          "MimeMessage.setContent": 21
        },
        "APIsQualifiedNames": {
          "Properties.__init__": "java.util.Properties.__init__",
          "Properties.put": "java.util.Properties.put",
          "InternetAddress.__init__": "javax.mail.internet.InternetAddress.__init__",
          "MimeMessage.__init__": "javax.mail.internet.MimeMessage.__init__",
          "MimeMessage.setFrom": "javax.mail.internet.MimeMessage.setFrom",
          "MimeMessage.setRecipient": "javax.mail.internet.MimeMessage.setRecipient",
          "MimeMessage.setSubject": "javax.mail.internet.MimeMessage.setSubject",
          "Date.__init__": "java.util.Date.__init__",
          "MimeMessage.setSentDate": "javax.mail.internet.MimeMessage.setSentDate",
          "MimeBodyPart.__init__": "javax.mail.internet.MimeBodyPart.__init__",
          "MimeBodyPart.setText": "javax.mail.internet.MimeBodyPart.setText",
          "FileDataSource.__init__": "javax.activation.FileDataSource.__init__",
          "DataHandler.__init__": "org.pentaho.ui.database.event.DataHandler.__init__",
          "MimeBodyPart.setDataHandler": "javax.mail.internet.MimeBodyPart.setDataHandler",
          "MimeBodyPart.setFileName": "javax.mail.internet.MimeBodyPart.setFileName",
          "Multipart.__init__": "javax.mail.Multipart.__init__",
          "Multipart.addBodyPart": "javax.mail.Multipart.addBodyPart",
          "MimeMessage.setContent": "javax.mail.internet.MimeMessage.setContent"
        },
        "API_Ratio": 0.8571428571428571
      }
    ]
  }
]